/**
 * business.com Inc.
 * Copyright (c) 2015-2025 All Rights Reserved.
 */
package com.pinting.gateway.pay19.out.enums;

/**
 * 
 * @author Baby shark love blowing wind
 * @version $Id: QuickPayRespCode.java, v 0.1 2015-5-15 下午6:04:14 BabyShark Exp $
 */
public enum QuickPayRespCode {
    /** 成功*/
    SUCCESS_CODE_00000("00000", "操作成功"),

    /************************ 预下单和确认支付之外的错误码 *******************************/
    /** 非空参数为空*/
    ERROR_CODE_17001("17001", "非空参数为空"),
    /** 有参数值或格式不正确*/
    ERROR_CODE_17002("17002", "有参数值或格式不正确"),
    /** 商家ID不存在*/
    ERROR_CODE_17003("17003", "商家ID不存在"),
    /** 验签失败*/
    ERROR_CODE_17004("17004", "验签失败"),
    /** 退款查询接口异常*/
    ERROR_CODE_17005("17005", "退款查询接口异常"),
    /** 商户用户ID长度超过限制*/
    ERROR_CODE_17006("17006", "商户用户ID长度超过限制"),
    /** 平台请求流水号长度超过限制*/
    ERROR_CODE_17007("17007", "平台请求流水号长度超过限制"),
    /** 平台请求时间格式不正确*/
    ERROR_CODE_17008("17008", "平台请求时间格式不正确"),
    /** 手机验证码发送标志错误*/
    ERROR_CODE_17009("17009", "手机验证码发送标志错误"),
    /** 服务商流水号为空*/
    ERROR_CODE_17010("17010", "服务商流水号为空"),
    /** 企业平台订单号不存在*/
    ERROR_CODE_17011("17011", "企业平台订单号不存在"),
    /** 系统忙，请稍后再试*/
    ERROR_CODE_17012("17012", "系统忙，请稍后再试"),
    /** 时间戳格式不正确*/
    ERROR_CODE_17013("17013", "时间戳格式不正确"),
    /** 企业平台订单号为空*/
    ERROR_CODE_17014("17014", "企业平台订单号为空"),
    /** 根据条件查询信息为空*/
    ERROR_CODE_17015("17015", "根据条件查询信息为空"),
    /** 绑定流水号为空*/
    ERROR_CODE_17016("17016", "绑定流水号为空"),
    /** 要解绑的绑定状态不是绑定成功，不需要解绑*/
    ERROR_CODE_17017("17017", "要解绑的绑定状态不是绑定成功，不需要解绑"),
    /** 订单状态不对，不能重发短信*/
    ERROR_CODE_17018("17018", "订单状态不对，不能重发短信"),
    /** 来源平台Ip不在IP白名单内*/
    ERROR_CODE_17019("17019", "来源平台Ip不在IP白名单内"),
    /** 来源平台Id不被允许使用此方法（获取商户key值）*/
    ERROR_CODE_17020("17020", "来源平台Id不被允许使用此方法（获取商户key值）"),

    /************************ 预下单错误码 *******************************/
    /** merchantId为空或字段过长 */
    ERROR_CODE_30010("30010", "merchantId为空或字段过长"),
    /** */
    ERROR_CODE_30011("30011", "获取merchantInfo信息失败"),
    /** */
    ERROR_CODE_30012("30012", "发起IP验证失败"),
    /** */
    ERROR_CODE_30013("30013", "hmac校验失败"),
    /** */
    ERROR_CODE_30014("30014", "快捷支付限制交易"),
    /** */
    ERROR_CODE_30015("30015", "快捷支付限制商家交易"),
    /** */
    ERROR_CODE_30016("30016", "快捷支付获取交易限制信息异常"),
    /** */
    ERROR_CODE_30017("30017", "版本号错误"),
    /** */
    ERROR_CODE_30019("30019", "用户编号长度过长"),
    /** */
    ERROR_CODE_30020("30020", "订单号为空或过长"),
    /** */
    ERROR_CODE_30021("30021", "订单时间为空或过长或格式不正确"),
    /** */
    ERROR_CODE_30022("30022", "金额为空或格式不正确"),
    /** */
    ERROR_CODE_30023("30023", "商品名为空或长度过长"),
    /** */
    ERROR_CODE_30024("30024", "商品描述为空或长度过长"),
    /** */
    ERROR_CODE_30025("30025", "bindSno字段长度过长"),
    /** */
    ERROR_CODE_30026("30026", "pcId字段格式不正确"),
    /** */
    ERROR_CODE_30027("30027", "银行卡号为空"),
    /** */
    ERROR_CODE_30028("30028", "银行卡号格式不正确"),
    /** */
    ERROR_CODE_30029("30029", "银行卡号错误"), //银行卡号解密失败
    /** */
    ERROR_CODE_30030("30030", "币种格式错误"),
    /** */
    ERROR_CODE_30031("30031", "账户类型格式错误"),
    /** */
    ERROR_CODE_30032("30032", "账户属性格式错误"),
    /** */
    ERROR_CODE_30033("30033", "cvv2字段为空"),
    /** */
    ERROR_CODE_30034("30034", "cvv2字段格式错误"),
    /** */
    ERROR_CODE_30035("30035", "cvv2字段解密失败"),
    /** */
    ERROR_CODE_30036("30036", "validDate字段为空"),
    /** */
    ERROR_CODE_30037("30037", "validDate字段格式错误"),
    /** */
    ERROR_CODE_30038("30038", "validDate字段解密失败"),
    /** */
    ERROR_CODE_30040("30040", "持卡人姓名格式错误"),
    /** */
    ERROR_CODE_30041("30041", "持卡人姓名错误"), //持卡人姓名解密失败
    /** */
    ERROR_CODE_30042("30042", "身份证号格式错误"),
    /** */
    ERROR_CODE_30043("30043", "身份证号错误"), //身份证号解密失败
    /** */
    ERROR_CODE_30044("30044", "手机号为空"),
    /** */
    ERROR_CODE_30045("30045", "手机号格式错误"),
    /** */
    ERROR_CODE_30046("30046", "手机号错误"), //手机号解密失败
    /** */
    ERROR_CODE_30047("30047", "isBind字段格式不正确"),
    /** */
    ERROR_CODE_30048("30048", "notifyUrl字段格式不正确"),
    /** */
    ERROR_CODE_30049("30049", "remark字段过长"),
    /** */
    ERROR_CODE_30050("30050", "参数校验异常"),
    /** */
    ERROR_CODE_30051("30051", "参数转换异常"),
    /** */
    ERROR_CODE_30052("30052", "快捷支付预下单请求mp异常"),
    /** */
    ERROR_CODE_30053("30053", "快捷支付预下单接口请求异常"),
    /** */
    ERROR_CODE_30054("30054", "快捷支付预下单交易限制"),
    /** */
    ERROR_CODE_30091("30091", "银行卡号和银行通道不匹配"),
    /** */
    ERROR_CODE_30092("30092", "原有绑定信息中，银行卡号和银行通道不匹配"),
    /** */
    ERROR_CODE_30093("30093", "银行卡号和卡类型不匹配"),
    /** */
    ERROR_CODE_30094("30094", "原有绑定信息中，银行卡号和银行通道不匹配"),
    /** */
    ERROR_CODE_30096("30096", "isFixBindInfo是否补全绑定信息字段格式不正确"),
    /** */
    ERROR_CODE_30097("30097", "mx_goods_type字段为空或格式不正确"),
    /** */
    ERROR_CODE_30098("30098", "原有绑定信息中，持卡人姓名或身份证号字段为空，需要补全信息"),
    /** */
    ERROR_CODE_30099("30099", "持卡人姓名或身份证号字段为空"),
    /** */
    ERROR_CODE_31001("31001", "重复下单订单状态已是终态或两次订单信息不一致"),
    /** */
    ERROR_CODE_31002("31002", "解密后绑定流水为空"),
    /** */
    ERROR_CODE_31003("31003", "根据绑定流水获取绑定信息为空"),
    /** */
    ERROR_CODE_31004("31004", "解密绑定银行卡信息异常"),
    /** */
    ERROR_CODE_31005("31005", "企业平台不支持请求的通道"),
    /** */
    ERROR_CODE_31006("31006", "查询通道信息失败"),
    /** */
    ERROR_CODE_31007("31007", "快捷交易不支持请求的通道"),
    /** */
    ERROR_CODE_31008("31008", "商家不支持请求的通道"),
    /** */
    ERROR_CODE_31009("31009", "下单入库失败"),
    /** */
    ERROR_CODE_31010("31010", "下单入库异常"),
    /** */
    ERROR_CODE_31011("31011", "预下单前更新订单状态处理中失败"),
    /** */
    ERROR_CODE_31012("31012", "预下单请求核心失败"),
    /** */
    ERROR_CODE_31013("31013", "预下单成功单服务商发送验证码失败"),
    /** */
    ERROR_CODE_31014("31014", "预下单请求核心成功,更新订单状态和结果入库失败"),
    /** */
    ERROR_CODE_31015("31015", "预下单请求核心失败,更新订单状态和结果入库失败"),
    /** */
    ERROR_CODE_31016("31016", "预下单请求核心失败"),
    /** */
    ERROR_CODE_31017("31017", "预下单请求核心失败,交易的银行卡需要签约"),
    /** */
    ERROR_CODE_31018("31018", "信息校验超时，请重试或联系客服"),
    /** */
    ERROR_CODE_31019("31019", "银行验证卡号姓名不匹配"),
    /** */
    ERROR_CODE_31020("31020", "预留手机号验证失败"),
    /** */
    ERROR_CODE_31021("31021", "姓名或身份证，与卡号不符"),
    /** */
    ERROR_CODE_31022("31022", "银行账户余额不足"),
    /** */
    ERROR_CODE_31023("31023", "银行cvv2验证失败（信用卡）"),
    /** */
    ERROR_CODE_31024("31024", "银行有效期验证失败（信用卡）"),
    /** */
    ERROR_CODE_31025("31025", "未开通银行卡的相关功能（请咨询银行）"),

    /************************ 确认支付错误码 *******************************/
    ERROR_CODE_CONFIRM_30110("C30110", "merchantId为空或字段过长"),
    /** */
    ERROR_CODE_CONFIRM_30111("C30111", "获取merchantInfo信息失败"),
    /** */
    ERROR_CODE_CONFIRM_30112("C30112", "发起IP验证失败"),
    /** */
    ERROR_CODE_CONFIRM_30113("C30113", "签名校验失败"),
    /** */
    ERROR_CODE_CONFIRM_30114("C30114", "快捷支付限制交易"),
    /** */
    ERROR_CODE_CONFIRM_30115("C30115", "快捷支付限制商家交易"),
    /** */
    ERROR_CODE_CONFIRM_30116("C30116", "快捷支付获取交易限制信息异常"),
    /** */
    ERROR_CODE_CONFIRM_30117("C30117", "版本号错误"),
    /** */
    ERROR_CODE_CONFIRM_30118("C30118", "订单来源字段长度过长"),
    /** */
    ERROR_CODE_CONFIRM_30119("C30119", "用户编号长度过长"),
    /** */
    ERROR_CODE_CONFIRM_30120("C30120", "订单号长度为空或过长"),
    /** */
    ERROR_CODE_CONFIRM_30121("C30121", "订单时间为空或过长或格式不正确"),
    /** */
    ERROR_CODE_CONFIRM_30122("C30122", "金额为空或格式不正确"),
    /** */
    ERROR_CODE_CONFIRM_30123("C30123", "支付平台订单号为空或格式不正确"),
    /** */
    ERROR_CODE_CONFIRM_30124("C30124", "验证码字段为空或格式不正确"),
    /** */
    ERROR_CODE_CONFIRM_30125("C30125", "备注过长"),
    /** */
    ERROR_CODE_CONFIRM_30126("C30126", "快捷支付确认支付参数校验异常"),
    /** */
    ERROR_CODE_CONFIRM_30127("C30127", "确认支付转换参数异常"),
    /** */
    ERROR_CODE_CONFIRM_30128("C30128", "快捷支付确认支付请求mp异常"),
    /** */
    ERROR_CODE_CONFIRM_30129("C30129", "快捷支付确认支付接口请求异常"),
    /** */
    ERROR_CODE_CONFIRM_32001("C32001", "确认支付未找到原订单信息"),
    /** */
    ERROR_CODE_CONFIRM_32002("C32002", "确认支付原订单号错误或订单状态非处理中"),
    /** */
    ERROR_CODE_CONFIRM_32003("C32003", "确认支付子订单信息异常"),
    /** */
    ERROR_CODE_CONFIRM_32004("C32004", "确认支付订单到达关闭时间已关闭"),
    /** */
    ERROR_CODE_CONFIRM_32005("C32005", "确认支付获取子订单扩展信息失败|获取订单通道信息失败"),
    /** */
    ERROR_CODE_CONFIRM_32006("C32006", "确认支付原订单信息验证失败"),
    /** */
    ERROR_CODE_CONFIRM_32007("C32007", "确认支付获取订单结果信息异常|失败"),
    /** */
    ERROR_CODE_CONFIRM_32008("C32008", "确认支付请求核心前更新子订单状态处理中失败"),
    /** */
    ERROR_CODE_CONFIRM_32009("C32009", "确认支付核心响应为空"),
    /** */
    ERROR_CODE_CONFIRM_32010("C32010", "确认支付请求核心请求状态失败更新订单状态成功"),
    /** */
    ERROR_CODE_CONFIRM_32011("C32011", "确认支付请求核心请求状态失败更新订单状态失败"),
    /** */
    ERROR_CODE_CONFIRM_32012("C32012", "确认支付请求核心请求状态异常|交易状态为空|交易状态异常"),
    /** */
    ERROR_CODE_CONFIRM_32013("C32013", "确认支付请求核心交易状态为失败"),
    /** */
    ERROR_CODE_CONFIRM_32014("C32014", "确认支付验证码错误超过次数限制，订单关闭"),
    /** */
    ERROR_CODE_CONFIRM_32015("C32015", "确认支付验证码错误"),
    /** */
    ERROR_CODE_CONFIRM_32016("C32016", "确认支付验证码失效"),
    /** */
    ERROR_CODE_CONFIRM_32017("C32017", "确认支付更新订单状态失败"),
    /** */
    ERROR_CODE_CONFIRM_31018("C31018", "信息校验超时，请重试或联系客服"),
    /** */
    ERROR_CODE_CONFIRM_31019("C31019", "银行验证卡号姓名不匹配"),
    /** */
    ERROR_CODE_CONFIRM_31020("C31020", "预留手机号验证失败"),
    /** */
    ERROR_CODE_CONFIRM_31021("C31021", "姓名或身份证，与卡号不符"),
    /** */
    ERROR_CODE_CONFIRM_31022("C31022", "银行账户余额不足"),
    /** */
    ERROR_CODE_CONFIRM_31023("C31023", "银行cvv2验证失败（信用卡）"),
    /** */
    ERROR_CODE_CONFIRM_31024("C31024", "银行有效期验证失败（信用卡）"),
    /** */
    ERROR_CODE_CONFIRM_31025("C31025", "未开通银行卡的相关功能（请咨询银行）"), ;

    /** code */
    private String code;

    /** description */
    private String description;

    /**
     * 私有的构造方法
     * @param code
     * @param description
     */
    private QuickPayRespCode(String code, String description) {
        this.code = code;
        this.description = description;
    }

    /**
     * 
     * @param code
     * @return {@link ActivityState} 实例
     */
    public static QuickPayRespCode find(String code) {
        for (QuickPayRespCode key : QuickPayRespCode.values()) {
            if (key.getCode().equals(code)) {
                return key;
            }
        }
        return null;//throw new GatewayBaseException(GatewayBaseCode.SYSTEM_ERROR, "根据code=" + code + "获取组织类型失败");
    }

    public String getCode() {
        return code;
    }

    public String getDescription() {
        return description;
    }

}
