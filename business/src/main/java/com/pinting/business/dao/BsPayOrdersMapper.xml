<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinting.business.dao.BsPayOrdersMapper">
  <resultMap id="BaseResultMap" type="com.pinting.business.model.BsPayOrders">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="payment_channel_id" jdbcType="INTEGER" property="paymentChannelId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="sub_account_id" jdbcType="INTEGER" property="subAccountId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="channel" jdbcType="VARCHAR" property="channel" />
    <result column="pay_path" jdbcType="VARCHAR" property="payPath" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="money_type" jdbcType="INTEGER" property="moneyType" />
    <result column="terminal_type" jdbcType="INTEGER" property="terminalType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="start_jnl_no" jdbcType="INTEGER" property="startJnlNo" />
    <result column="end_jnl_no" jdbcType="INTEGER" property="endJnlNo" />
    <result column="bank_id" jdbcType="INTEGER" property="bankId" />
    <result column="bank_card_no" jdbcType="VARCHAR" property="bankCardNo" />
    <result column="account_type" jdbcType="INTEGER" property="accountType" />
    <result column="trans_type" jdbcType="VARCHAR" property="transType" />
    <result column="channel_trans_type" jdbcType="VARCHAR" property="channelTransType" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="return_code" jdbcType="VARCHAR" property="returnCode" />
    <result column="return_msg" jdbcType="VARCHAR" property="returnMsg" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  
  <resultMap extends="BaseResultMap" id="BaseResultMapVO" type="com.pinting.business.model.vo.BsPayOrdersVO">
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="return_code" jdbcType="VARCHAR" property="returnCode" />
    <result column="return_msg" jdbcType="VARCHAR" property="returnMsg" />
    <result column="userMobile" jdbcType="VARCHAR" property="userMobile" />
    <result column="agent_name" jdbcType="VARCHAR" property="agentName" />
    <result column="pay_channel" jdbcType="VARCHAR" property="payChannel" />
    <result column="term" jdbcType="INTEGER" property="term" />
    <result column="base_rate" jdbcType="DOUBLE" property="baseRate" />
    <result column="subAccountId" jdbcType="INTEGER" property="subAccountId" />
    <result column="last_app_version" jdbcType="VARCHAR" property="lastAppVersion" />
    <result column="last_app_time" jdbcType="TIMESTAMP" property="lastAppTime" />
  </resultMap>

  <resultMap extends="BaseResultMap" id="BsPayOrderProductResultVO" type="com.pinting.business.model.vo.BsPayOrderProductVO">
    <result column="code" jdbcType="VARCHAR" property="subAccountCode" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="balance" jdbcType="DOUBLE" property="balance" />
    <result column="max_total_amount" jdbcType="DOUBLE" property="maxTotalAmount" />
    <result column="curr_total_amount" jdbcType="DOUBLE" property="currTotalAmount" />
  </resultMap>

  <resultMap id="UserRechangeStatisticsMap" type="com.pinting.business.model.vo.UserRechanageStatisticsVO">
    <result column="rowno" jdbcType="INTEGER" property="rowno" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="update_time" jdbcType="TIMESTAMP" property="time" />
    <result column="customer_code" jdbcType="VARCHAR" property="customerCode" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
  </resultMap>

  <resultMap id="CorpusBuyStatisticsMap" type="com.pinting.business.model.vo.CorpusBuyStatisticsVO">
    <result column="rowno" jdbcType="INTEGER" property="rowno" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="update_time" jdbcType="TIMESTAMP" property="time" />
    <result column="customer_code" jdbcType="VARCHAR" property="customerCode" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="balance" jdbcType="DOUBLE" property="balance" />
    <result column="user_interest" jdbcType="DOUBLE" property="userInterest" />
    <result column="finance_interest" jdbcType="DOUBLE" property="financeInterest" />

    <result column="corpus_buy_total_amount" jdbcType="DOUBLE" property="corpusBuyTotalAmount" />
    <result column="corpus_buy_total_finance_interest" jdbcType="DOUBLE" property="corpusBuyTotalFinanceInterest" />
    <result column="corpus_buy_total_user_interest" jdbcType="DOUBLE" property="corpusBuyTotalUserInterest" />

    <result column="property_code" jdbcType="VARCHAR" property="propertyCode" />
    <result column="property_name" jdbcType="VARCHAR" property="propertyName" />
  </resultMap>

  <resultMap id="PayFinanceStatisticsMap" type="com.pinting.business.model.vo.PayFinanceStatisticsVO">
    <result column="rowno" jdbcType="INTEGER" property="rowno" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="update_time" jdbcType="TIMESTAMP" property="time" />
    <result column="customer_code" jdbcType="VARCHAR" property="customerCode" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="balance" jdbcType="DOUBLE" property="balance" />
    <result column="user_interest" jdbcType="DOUBLE" property="userInterest" />
    <result column="finance_interest" jdbcType="DOUBLE" property="financeInterest" />
    <result column="finance_total_amount" jdbcType="DOUBLE" property="financeTotalAmount" />
    <result column="interest_income" jdbcType="DOUBLE" property="interestIncome" />
    <result column="total_balance" jdbcType="DOUBLE" property="totalBalance" />
    <result column="total_finance_interest" jdbcType="DOUBLE" property="totalFinanceInterest" />
    <result column="total_user_interest" jdbcType="DOUBLE" property="totalUserInterest" />
    <result column="property_code" jdbcType="VARCHAR" property="propertyCode" />
    <result column="ln_user_name" jdbcType="VARCHAR" property="lnUserName" />
    <result column="partner_business_flag" jdbcType="VARCHAR" property="partnerBusinessFlag" />
  </resultMap>

  <resultMap id="CalculateRewardsStatisticsMap" type="com.pinting.business.model.vo.CalculateRewardsStatisticsVO">
    <result column="rowno" jdbcType="INTEGER" property="rowno" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="update_time" jdbcType="TIMESTAMP" property="time" />
    <result column="customer_code" jdbcType="VARCHAR" property="customerCode" />
    <result column="rewards_amount" jdbcType="DOUBLE" property="rewardsAmount" />
  </resultMap>


  <resultMap id="GrantRewardsStatisticsMap" type="com.pinting.business.model.vo.GrantRewardsStatisticsVO">
    <result column="rowno" jdbcType="INTEGER" property="rowno" />
    <result column="bill_no" jdbcType="VARCHAR" property="billNo" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="customer_code" jdbcType="VARCHAR" property="customerCode" />
    <result column="finish_date" jdbcType="TIMESTAMP" property="time" />
    <result column="rewards_amount" jdbcType="DOUBLE" property="rewardsAmount" />
  </resultMap>


  <resultMap id="BalanceFinanceStatisticsMap" type="com.pinting.business.model.vo.BalanceFinanceStatisticsVO">
    <result column="rowno" jdbcType="INTEGER" property="rowno" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="update_time" jdbcType="TIMESTAMP" property="time" />
    <result column="customer_code" jdbcType="VARCHAR" property="customerCode" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="balance" jdbcType="DOUBLE" property="balance" />
    <result column="user_interest" jdbcType="DOUBLE" property="userInterest" />
    <result column="finance_interest" jdbcType="DOUBLE" property="financeInterest" />
    <result column="finance_total_amount" jdbcType="DOUBLE" property="financeTotalAmount" />
    <result column="total_balance" jdbcType="DOUBLE" property="totalBalance" />
    <result column="total_finance_interest" jdbcType="DOUBLE" property="totalFinanceInterest" />
    <result column="property_code" jdbcType="VARCHAR" property="propertyCode" />
    <result column="loan_id" jdbcType="INTEGER" property="loanId" />
    <result column="serial_id" jdbcType="INTEGER" property="serialId" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="sum_finance_interest" jdbcType="DOUBLE" property="sumFinanceInterest" />
    <result column="sum_finance_interest_all" jdbcType="DOUBLE" property="sumFinanceInterestAll" />
    <result column="total_amount" jdbcType="DOUBLE" property="totalAmount" />
    <result column="is_min" jdbcType="INTEGER" property="isMin" />
    <result column="trans_amount_total" jdbcType="DOUBLE" property="transAmountTotal" />
    <result column="partner_business_flag" jdbcType="VARCHAR" property="partnerBusinessFlag" />
  </resultMap>
<resultMap id="DepBalanceFinanceStatisticsMap" type="com.pinting.business.model.vo.DepBalanceFinanceStatisticsVO">
	    <result column="rowno" jdbcType="INTEGER" property="rowno" />
	    <result column="fn_user_name" jdbcType="VARCHAR" property="userName" />
	    <result column="loan_user_name" jdbcType="VARCHAR" property="lnUserName" />
	    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
	    <result column="fn_customer_id" jdbcType="VARCHAR" property="fnCustomerCode" />
	    <result column="ln_customer_id" jdbcType="VARCHAR" property="lnCustomerCode" />
	    <result column="billNo" jdbcType="VARCHAR" property="billNo" />
	    <result column="plan_principal" jdbcType="DOUBLE" property="planPrincipal" />
	    <result column="loan_interest" jdbcType="DOUBLE" property="loanInterest" />
	    <result column="plan_interest" jdbcType="DOUBLE" property="planInterest" />
	    <result column="plan_fee" jdbcType="DOUBLE" property="planFee" />
	    <result column="finish_time" jdbcType="VARCHAR" property="finishTime" />
	    <result column="repayNote" jdbcType="VARCHAR" property="repayNote" />
	    <result column="total_plan_principal" jdbcType="DOUBLE" property="totalPlanPrincipal" />
	    <result column="total_loan_interest" jdbcType="DOUBLE" property="totalPlanLoanInterest" />
	    <result column="total_plan_interest" jdbcType="DOUBLE" property="totalPlanInterest" />
	    <result column="total_plan_fee" jdbcType="DOUBLE" property="totalPlanFee" />
	    <result column="total_count" jdbcType="INTEGER" property="totalCount" />
  	</resultMap>
	<resultMap id="DepBaoFooBalanceStatisticsMap" type="com.pinting.business.model.vo.DepBaoFooBalanceStatisticsVO">
	    <result column="rowno" jdbcType="INTEGER" property="rowno" />
	    <result column="trans_date" jdbcType="VARCHAR" property="transDate" />
	    <result column="user_withdraw" jdbcType="DOUBLE" property="outUserWithdraw" />
	    <result column="user_withdraw_count" jdbcType="INTEGER" property="outUserWithdrawCount" />
	    <result column="bonus_withdraw" jdbcType="DOUBLE" property="outBonusWithdraw" />
	    <result column="bonus_withdraw_count" jdbcType="INTEGER" property="outBonusWithdrawCount" />
	    <result column="sys_partner_revenue" jdbcType="DOUBLE" property="outSysPartnerRevenue" />
	    <result column="sys_yun_repay_revenue" jdbcType="DOUBLE" property="outSysYunRepayRevenue" />
	    <result column="sys_yun_repeat" jdbcType="DOUBLE" property="outSysYunRepeat" />
        <result column="sys_seven_repay_revenue" jdbcType="DOUBLE" property="outSysSevenRepayRevenue" />
        <result column="sys_seven_repeat" jdbcType="DOUBLE" property="outSysSevenRepeat" />
        <result column="sys_zsd_repay_revenue" jdbcType="DOUBLE" property="outSysZsdRepayRevenue" />
	    <result column="sys_zsd_repeat" jdbcType="DOUBLE" property="outSysZsdRepeat" />
	    <result column="withdraw_2_dep_repay_card" jdbcType="DOUBLE" property="outWithdrawToDepRepayCard" />
	    <result column="withdraw_2_dep_repay_card_count" jdbcType="INTEGER" property="outWithdrawToDepRepayCardCount" />
	    <result column="cut_repay_2_borrower" jdbcType="DOUBLE" property="cutRepay2Borrower"/>
	    <result column="cut_repay_2_borrower_count" jdbcType="INTEGER" property="cutRepay2BorrowerCount"/>
	    <result column="yun_dai_back" jdbcType="DOUBLE" property="inYunDaiBack" />
	    <result column="yun_dai_back_count" jdbcType="INTEGER" property="inYunDaiBackCount" />
	    <result column="seven_dai_back" jdbcType="DOUBLE" property="inSevenDaiBack" />
	    <result column="seven_dai_back_count" jdbcType="INTEGER" property="inSevenDaiBackCount" />
	    <result column="dep_yun_back" jdbcType="DOUBLE" property="inDepYunBack" />
	    <result column="dep_yun_back_count" jdbcType="INTEGER" property="inDepYunBackCount" />
	    <result column="dep_zan_back" jdbcType="DOUBLE" property="inDepZanBack" />
	    <result column="dep_zan_back_count" jdbcType="INTEGER" property="inDepZanBackCount" />
	    <result column="dep_zsd_back" jdbcType="DOUBLE" property="inDepZsdBack" />
	    <result column="dep_zsd_back_count" jdbcType="INTEGER" property="inDepZsdBackCount" />
        <result column="dep_seven_back" jdbcType="DOUBLE" property="inDepSevenBack" />
        <result column="dep_seven_back_count" jdbcType="INTEGER" property="inDepSevenBackCount" />
	    <result column="dep_yun_back_2" jdbcType="DOUBLE" property="inDepYunBack2" />
	    <result column="dep_yun_back_count_2" jdbcType="INTEGER" property="inDepYunBackCount2" />
	    <result column="dep_zan_back_2" jdbcType="DOUBLE" property="inDepZanBack2" />
	    <result column="dep_zan_back_count_2" jdbcType="INTEGER" property="inDepZanBackCount2" />
	    <result column="dep_zsd_back_2" jdbcType="DOUBLE" property="inDepZsdBack2" />
	    <result column="dep_zsd_back_count_2" jdbcType="INTEGER" property="inDepZsdBackCount2" />
        <result column="dep_seven_back_2" jdbcType="DOUBLE" property="inDepSevenBack2" />
        <result column="dep_seven_back_count_2" jdbcType="INTEGER" property="inDepSevenBackCount2" />
	    <result column="dep_yun_back_2_transfer" jdbcType="DOUBLE" property="inDepYunBack2Transfer" />
	    <result column="dep_yun_back_count_2_transfer" jdbcType="INTEGER" property="inDepYunBackCount2Transfer" />
	    <result column="dep_zan_back_2_transfer" jdbcType="DOUBLE" property="inDepZanBack2Transfer" />
	    <result column="dep_zan_back_count_2_transfer" jdbcType="INTEGER" property="inDepZanBackCount2Transfer" />
	    <result column="dep_zsd_back_2_transfer" jdbcType="DOUBLE" property="inDepZsdBack2Transfer" />
	    <result column="dep_zsd_back_count_2_transfer" jdbcType="INTEGER" property="inDepZsdBackCount2Transfer" />
	    <result column="dep_yun_compensate" jdbcType="DOUBLE" property="inDepYunCompensate" />
	    <result column="dep_yun_compensate_count" jdbcType="INTEGER" property="inDepYunCompensateCount" />
	    <result column="dep_zsd_compensate" jdbcType="DOUBLE" property="inDepZsdCompensate" />
	    <result column="dep_zsd_compensate_count" jdbcType="INTEGER" property="inDepZsdCompensateCount" />
        <result column="dep_seven_compensate" jdbcType="DOUBLE" property="inDepSevenCompensate" />
        <result column="dep_seven_compensate_count" jdbcType="INTEGER" property="inDepSevenCompensateCount" />
  	</resultMap>



  <resultMap id="FinanceInterestOffline7DaiMap" type="com.pinting.business.model.vo.FinanceInterestOffline7DaiVO">
    <result column="rowno" jdbcType="INTEGER" property="rowno" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="update_time" jdbcType="TIMESTAMP" property="time" />
    <result column="customer_code" jdbcType="VARCHAR" property="customerCode" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="balance" jdbcType="DOUBLE" property="balance" />
    <result column="user_interest" jdbcType="DOUBLE" property="userInterest" />
    <result column="finance_interest" jdbcType="DOUBLE" property="financeInterest" />
    <result column="finance_total_amount" jdbcType="DOUBLE" property="financeTotalAmount" />
    <result column="total_balance" jdbcType="DOUBLE" property="totalBalance" />
    <result column="total_finance_interest" jdbcType="DOUBLE" property="totalFinanceInterest" />

    <result column="property_code" jdbcType="VARCHAR" property="propertyCode" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, payment_channel_id, order_no, amount, user_id, sub_account_id, type, channel, 
    pay_path, status, bank_name, money_type, terminal_type, create_time, update_time, 
    start_jnl_no, end_jnl_no, bank_id, bank_card_no, account_type, trans_type, channel_trans_type, 
    mobile, id_card, user_name, return_code, return_msg, note
  </sql>
  <select id="selectByExample" parameterType="com.pinting.business.model.BsPayOrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_pay_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bs_pay_orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bs_pay_orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.BsPayOrdersExample">
    delete from bs_pay_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.BsPayOrders"  useGeneratedKeys="true" keyProperty="id">
    insert into bs_pay_orders (id, payment_channel_id, order_no, 
      amount, user_id, sub_account_id, 
      type, channel, pay_path, 
      status, bank_name, money_type, 
      terminal_type, create_time, update_time, 
      start_jnl_no, end_jnl_no, bank_id, 
      bank_card_no, account_type, trans_type, 
      channel_trans_type, mobile, id_card, 
      user_name, return_code, return_msg, 
      note)
    values (#{id,jdbcType=INTEGER}, #{paymentChannelId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DOUBLE}, #{userId,jdbcType=INTEGER}, #{subAccountId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{channel,jdbcType=VARCHAR}, #{payPath,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{bankName,jdbcType=VARCHAR}, #{moneyType,jdbcType=INTEGER}, 
      #{terminalType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{startJnlNo,jdbcType=INTEGER}, #{endJnlNo,jdbcType=INTEGER}, #{bankId,jdbcType=INTEGER}, 
      #{bankCardNo,jdbcType=VARCHAR}, #{accountType,jdbcType=INTEGER}, #{transType,jdbcType=VARCHAR}, 
      #{channelTransType,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{returnCode,jdbcType=VARCHAR}, #{returnMsg,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.BsPayOrders" useGeneratedKeys="true" keyProperty="id">
    insert into bs_pay_orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="paymentChannelId != null">
        payment_channel_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="subAccountId != null">
        sub_account_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="payPath != null">
        pay_path,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="moneyType != null">
        money_type,
      </if>
      <if test="terminalType != null">
        terminal_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="startJnlNo != null">
        start_jnl_no,
      </if>
      <if test="endJnlNo != null">
        end_jnl_no,
      </if>
      <if test="bankId != null">
        bank_id,
      </if>
      <if test="bankCardNo != null">
        bank_card_no,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="transType != null">
        trans_type,
      </if>
      <if test="channelTransType != null">
        channel_trans_type,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="returnCode != null">
        return_code,
      </if>
      <if test="returnMsg != null">
        return_msg,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="paymentChannelId != null">
        #{paymentChannelId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="subAccountId != null">
        #{subAccountId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=VARCHAR},
      </if>
      <if test="payPath != null">
        #{payPath,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="moneyType != null">
        #{moneyType,jdbcType=INTEGER},
      </if>
      <if test="terminalType != null">
        #{terminalType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startJnlNo != null">
        #{startJnlNo,jdbcType=INTEGER},
      </if>
      <if test="endJnlNo != null">
        #{endJnlNo,jdbcType=INTEGER},
      </if>
      <if test="bankId != null">
        #{bankId,jdbcType=INTEGER},
      </if>
      <if test="bankCardNo != null">
        #{bankCardNo,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=INTEGER},
      </if>
      <if test="transType != null">
        #{transType,jdbcType=VARCHAR},
      </if>
      <if test="channelTransType != null">
        #{channelTransType,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="returnCode != null">
        #{returnCode,jdbcType=VARCHAR},
      </if>
      <if test="returnMsg != null">
        #{returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.BsPayOrdersExample" resultType="java.lang.Integer">
    select count(*) from bs_pay_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bs_pay_orders
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.paymentChannelId != null">
        payment_channel_id = #{record.paymentChannelId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.subAccountId != null">
        sub_account_id = #{record.subAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.channel != null">
        channel = #{record.channel,jdbcType=VARCHAR},
      </if>
      <if test="record.payPath != null">
        pay_path = #{record.payPath,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.moneyType != null">
        money_type = #{record.moneyType,jdbcType=INTEGER},
      </if>
      <if test="record.terminalType != null">
        terminal_type = #{record.terminalType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startJnlNo != null">
        start_jnl_no = #{record.startJnlNo,jdbcType=INTEGER},
      </if>
      <if test="record.endJnlNo != null">
        end_jnl_no = #{record.endJnlNo,jdbcType=INTEGER},
      </if>
      <if test="record.bankId != null">
        bank_id = #{record.bankId,jdbcType=INTEGER},
      </if>
      <if test="record.bankCardNo != null">
        bank_card_no = #{record.bankCardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=INTEGER},
      </if>
      <if test="record.transType != null">
        trans_type = #{record.transType,jdbcType=VARCHAR},
      </if>
      <if test="record.channelTransType != null">
        channel_trans_type = #{record.channelTransType,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.returnCode != null">
        return_code = #{record.returnCode,jdbcType=VARCHAR},
      </if>
      <if test="record.returnMsg != null">
        return_msg = #{record.returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bs_pay_orders
    set id = #{record.id,jdbcType=INTEGER},
      payment_channel_id = #{record.paymentChannelId,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DOUBLE},
      user_id = #{record.userId,jdbcType=INTEGER},
      sub_account_id = #{record.subAccountId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      channel = #{record.channel,jdbcType=VARCHAR},
      pay_path = #{record.payPath,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      money_type = #{record.moneyType,jdbcType=INTEGER},
      terminal_type = #{record.terminalType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      start_jnl_no = #{record.startJnlNo,jdbcType=INTEGER},
      end_jnl_no = #{record.endJnlNo,jdbcType=INTEGER},
      bank_id = #{record.bankId,jdbcType=INTEGER},
      bank_card_no = #{record.bankCardNo,jdbcType=VARCHAR},
      account_type = #{record.accountType,jdbcType=INTEGER},
      trans_type = #{record.transType,jdbcType=VARCHAR},
      channel_trans_type = #{record.channelTransType,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      return_code = #{record.returnCode,jdbcType=VARCHAR},
      return_msg = #{record.returnMsg,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.BsPayOrders">
    update bs_pay_orders
    <set>
      <if test="paymentChannelId != null">
        payment_channel_id = #{paymentChannelId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="subAccountId != null">
        sub_account_id = #{subAccountId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=VARCHAR},
      </if>
      <if test="payPath != null">
        pay_path = #{payPath,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="moneyType != null">
        money_type = #{moneyType,jdbcType=INTEGER},
      </if>
      <if test="terminalType != null">
        terminal_type = #{terminalType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startJnlNo != null">
        start_jnl_no = #{startJnlNo,jdbcType=INTEGER},
      </if>
      <if test="endJnlNo != null">
        end_jnl_no = #{endJnlNo,jdbcType=INTEGER},
      </if>
      <if test="bankId != null">
        bank_id = #{bankId,jdbcType=INTEGER},
      </if>
      <if test="bankCardNo != null">
        bank_card_no = #{bankCardNo,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=INTEGER},
      </if>
      <if test="transType != null">
        trans_type = #{transType,jdbcType=VARCHAR},
      </if>
      <if test="channelTransType != null">
        channel_trans_type = #{channelTransType,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="returnCode != null">
        return_code = #{returnCode,jdbcType=VARCHAR},
      </if>
      <if test="returnMsg != null">
        return_msg = #{returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.BsPayOrders">
    update bs_pay_orders
    set payment_channel_id = #{paymentChannelId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DOUBLE},
      user_id = #{userId,jdbcType=INTEGER},
      sub_account_id = #{subAccountId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      channel = #{channel,jdbcType=VARCHAR},
      pay_path = #{payPath,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      bank_name = #{bankName,jdbcType=VARCHAR},
      money_type = #{moneyType,jdbcType=INTEGER},
      terminal_type = #{terminalType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      start_jnl_no = #{startJnlNo,jdbcType=INTEGER},
      end_jnl_no = #{endJnlNo,jdbcType=INTEGER},
      bank_id = #{bankId,jdbcType=INTEGER},
      bank_card_no = #{bankCardNo,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=INTEGER},
      trans_type = #{transType,jdbcType=VARCHAR},
      channel_trans_type = #{channelTransType,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      return_code = #{returnCode,jdbcType=VARCHAR},
      return_msg = #{returnMsg,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <select id="selectInvestmentAmount" parameterType="java.util.HashMap" resultType="com.pinting.gateway.hessian.message.dafy.model.InvestmentAmounts">
    select 
    	b.product_code as productCode, 
    	b.product_name as productName,
    	case when sum(a.amount)!=null then sum(a.amount) else 0 end as amount
    from 
    	bs_pay_orders a, bs_sub_account b
    where 
   		<![CDATA[ 
    	a.`status`=3 and 
    	a.channel=#{channel} and
    	a.sub_account_id = b.id and 
    	b.product_code=#{productCode} and 
    	a.update_time > #{beginDate} and
    	a.update_time < #{endDate}

        ]]>
    </select>

    <!-- 原有订单查询
    &lt;select id="selectPayOrdersListPageInfo" resultMap="BaseResultMapVO" parameterType="com.pinting.business.model.vo.BsPayOrdersVO"&gt;
       select
          bs_pay_orders.*,bs_user.user_name,bs_sub_account.product_name
          from bs_pay_orders ,bs_user ,bs_sub_account
          &lt;where&gt;
          and bs_user.id = bs_pay_orders.user_id and bs_pay_orders.sub_account_id=bs_sub_account.id
               &lt;if test="orderNo != null and orderNo != '' " &gt;
                  and order_no = #{orderNo}
               &lt;/if&gt;
              &lt;if test="status&gt;0 and status != null"&gt;
                  and bs_pay_orders.status = #{status}
              &lt;/if&gt;
              &lt;if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' "&gt;
                  and bs_pay_orders.create_time between #{beginTime} and #{overTime}
              &lt;/if&gt;
          &lt;/where&gt;
          order by
            &lt;if test="orderDirection!=null and orderDirection != ''  and orderField != '' and orderField!=null "&gt;
              ${orderField}  ${orderDirection},
          &lt;/if&gt;
            bs_pay_orders.create_time desc
            &lt;include refid="sql-global.pagination"/&gt;
    &lt;/select&gt; -->

    <select id="selectPayOrdersListPageInfo" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultMap="BaseResultMapVO">
        select
        b.user_id,
        b.order_no orderNo,
        b.account_type accountType,
        b.trans_type transType,
        b.channel_trans_type channelTransType,
        b.bank_name bankName,
        b.bank_card_no bankCardNo,
        b.create_time createTime,
        b.update_time updateTime,
        b.amount amount,
        b.status status,
        b.return_code returnCode,
        b.return_msg returnMsg,
        b.terminal_type terminalType,
        b.user_name userName,
        b.mobile mobile,
        b.id_card idCard,
        b.channel payChannel,
        u.mobile userMobile,
        ag.agent_name agentName,
        p.base_rate, p.term,
        b.sub_account_id subAccountId,
        bu.user_name recommendName,
        s.sales_name saleName,
        e.strName managerName
        from bs_pay_orders b LEFT JOIN bs_user u ON b.user_id = u.id left join bs_agent ag on u.agent_id = ag.id
        LEFT JOIN bs_sub_account sa ON sa.id = b.sub_account_id LEFT JOIN bs_product p ON p.id = sa.product_id
        LEFT JOIN bs_user bu ON u.recommend_id=bu.id
        LEFT JOIN bs_user_sales us ON u.id=us.user_id
        LEFT JOIN bs_sales s ON s.id=us.sales_id
        LEFT JOIN bs_user_customer_manager cm ON cm.user_id=u.id
        LEFT JOIN tbemployee e ON e.lUserId =cm.customer_manager_dafy_id
        where 1 = 1
        <if test="userMobile != null and userMobile != '' ">
            and u.mobile like concat(concat('%', #{userMobile,jdbcType=VARCHAR}),'%')
        </if>
        <if test="mobile != null and mobile != '' ">
            and b.mobile like concat(concat('%', #{mobile,jdbcType=VARCHAR}),'%')
        </if>

        <if test="userName != null and userName != '' ">
            and b.user_name like concat(concat('%', #{userName,jdbcType=VARCHAR}),'%')
        </if>
        <if test="idCard != null and idCard != '' ">
            and b.id_card like concat(concat('%', #{idCard,jdbcType=VARCHAR}),'%')
        </if>
        <if test="orderNo != null and orderNo != '' ">
            and b.order_no like concat(concat('%', #{orderNo,jdbcType=VARCHAR}),'%')
        </if>
        <if test="status == null or 0 &gt;= status">
            and b.`status` in (1,2,3,4,5,6,7)
        </if>
        <if test="status != null and status &gt; 0 ">
            and b.status = #{status}
        </if>
        <!-- 账户类型：系统、用户 -->
        <if test="accountType != null and accountType != '' ">
            and b.account_type = #{accountType}
        </if>
        <!-- 交易类型：充值、购买产品、钱包提现、奖励金提现、回款提现、辅助通道提现 -->
        <if test="transType != null and transType != '' ">
            and b.trans_type = #{transType}
        </if>
        <!-- 渠道类型：快捷、代收、代付、网银、钱包转账 -->
        <if test="channelTransType != null and channelTransType != '' ">
            and b.channel_trans_type = #{channelTransType}
        </if>
        <!-- 订单渠道 DAFY 达飞 PAY19 19付 REAPAL 融宝 -->
        <if test="payChannel != null and payChannel != '' ">
            and b.channel = #{payChannel}
        </if>
        <if test="bankName != null and bankName != '' ">
            and b.bank_name like concat(concat('%', #{bankName,jdbcType=VARCHAR}),'%')
        </if>
        <if test="bankCardNo != null and bankCardNo != '' ">
            and b.bank_card_no like concat(concat('%', #{bankCardNo,jdbcType=VARCHAR}),'%')
        </if>
        <if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
            <!-- and b.create_time between #{beginTime} and #{overTime} -->
            and b.create_time &gt;= #{beginTime} and b.create_time &lt;= #{overTime}
        </if>
        <if test="buyBankType != null and buyBankType != '' and buyBankType =='-1'">
            and b.bank_id is null
        </if>
        <if test="buyBankType != null and buyBankType != '' and buyBankType !='-1'">
            and b.bank_id = cast(#{buyBankType} as SIGNED INTEGER)
        </if>
        <!-- &lt;if test="agentId != null and agentId != 0 and agentId != -1 "&gt;
            and ag.id = #{agentId}
        &lt;/if&gt;
        &lt;if test="agentId == -1"&gt;
            and ag.id is null
        &lt;/if&gt; -->
        <if test="agentIds != null and agentIds !='' and (nonAgentId == null or nonAgentId == '')">
            and u.agent_id in
            <foreach close=")" collection="agentIds" index="index" item="agentId" open="(" separator=",">
                #{agentId}
            </foreach>
        </if>
        <if test="(agentIds == null or agentIds =='' ) and nonAgentId != null and nonAgentId != ''">
            and u.agent_id is null
        </if>
        <if test="agentIds != null and agentIds !='' and nonAgentId != null and nonAgentId != ''">
            and (u.agent_id in
            <foreach close=")" collection="agentIds" index="index" item="agentId" open="(" separator=",">
                #{agentId}
            </foreach>
            or u.agent_id is null)
        </if>
        <if test="returnMsg != null and returnMsg != '' ">
            and b.return_msg like concat(concat('%', #{returnMsg,jdbcType=VARCHAR}),'%')
        </if>
        <if test="userId != null and userId != '' ">
            and b.user_id = #{userId}
        </if>
        <if test="terminalTypes != null and terminalTypes !=''">
            and b.terminal_type in
            <foreach close=")" collection="terminalTypes" index="index" item="terminalType" open="(" separator=",">
                #{terminalType}
            </foreach>
        </if>
        <if test="orderDirection!=null and orderDirection != ''  and orderField != ''  and orderField!=null ">
            order by ${orderField} ${orderDirection}
        </if>
        <if test="numPerPage != null and numPerPage != 0">
            <include refid="sql-global.pagination" />
        </if>
    </select>
    
    <select id="selectPayOrdersListPageInfo4Normal" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultMap="BaseResultMapVO">
        select
        b.user_id,
        b.order_no orderNo,
        b.account_type accountType,
        b.trans_type transType,
        b.channel_trans_type channelTransType,
        b.bank_name bankName,
        b.bank_card_no bankCardNo,
        b.create_time createTime,
        b.update_time updateTime,
        b.amount amount,
        b.status status,
        b.return_code returnCode,
        b.return_msg returnMsg,
        b.terminal_type terminalType,
       
        b.mobile mobile,
        b.id_card idCard,
        b.channel payChannel,
       
        ag.agent_name agentName,
        p.base_rate, p.term,
        b.sub_account_id subAccountId,
        bu.user_name recommendName,
        s.sales_name saleName,
        e.strName managerName,
        u.last_app_version,
        u.last_app_time
        from bs_pay_orders b LEFT JOIN bs_user u ON b.user_id = u.id left join bs_agent ag on u.agent_id = ag.id
        LEFT JOIN bs_sub_account sa ON sa.id = b.sub_account_id LEFT JOIN bs_product p ON p.id = sa.product_id
        LEFT JOIN bs_user bu ON u.recommend_id=bu.id
        LEFT JOIN bs_user_sales us ON u.id=us.user_id
        LEFT JOIN bs_sales s ON s.id=us.sales_id
        LEFT JOIN bs_user_customer_manager cm ON cm.user_id=u.id
        LEFT JOIN tbemployee e ON e.lUserId =cm.customer_manager_dafy_id
        where 1 = 1 and b.trans_type != 'SYS_BUY_DAFY'
        <if test="userMobile != null and userMobile != '' ">
            and u.mobile = #{userMobile,jdbcType=VARCHAR}
        </if>
        <if test="userName != null and userName != '' ">
            and b.user_name=#{userName,jdbcType=VARCHAR}
        </if>
        <if test="status == null or 0 &gt;= status">
            and b.`status` in (1,2,3,4,5,6,7)
        </if>
        <if test="status != null and status &gt; 0 ">
            and b.status = #{status}
        </if>
        <!-- 交易类型：充值、购买产品、钱包提现、奖励金提现、回款提现、辅助通道提现 -->
        <if test="transType != null and transType != '' ">
            and b.trans_type = #{transType}
        </if>
        <!-- 渠道类型：快捷、代收、代付、网银、钱包转账 -->
        <if test="channelTransType != null and channelTransType != '' ">
            and b.channel_trans_type = #{channelTransType}
        </if>
        <!-- 订单渠道 DAFY 达飞 PAY19 19付 REAPAL 融宝 -->
        <if test="payChannel != null and payChannel != '' ">
            and b.channel = #{payChannel}
        </if>
        <if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
            <!-- and b.create_time between #{beginTime} and #{overTime} -->
            and b.create_time &gt;= #{beginTime} and b.create_time &lt;= #{overTime}
        </if>
        <if test="buyBankType != null and buyBankType != '' and buyBankType =='-1'">
            and b.bank_id is null
        </if>
        <if test="buyBankType != null and buyBankType != '' and buyBankType !='-1'">
            and b.bank_id = cast(#{buyBankType} as SIGNED INTEGER)
        </if>
        <if test="agentIds != null and agentIds !='' and (nonAgentId == null or nonAgentId == '')">
            and u.agent_id in
            <foreach close=")" collection="agentIds" index="index" item="agentId" open="(" separator=",">
                #{agentId}
            </foreach>
        </if>
        <if test="(agentIds == null or agentIds =='' ) and nonAgentId != null and nonAgentId != ''">
            and u.agent_id is null
        </if>
        <if test="agentIds != null and agentIds !='' and nonAgentId != null and nonAgentId != ''">
            and (u.agent_id in
            <foreach close=")" collection="agentIds" index="index" item="agentId" open="(" separator=",">
                #{agentId}
            </foreach>
            or u.agent_id is null)
        </if>
        <if test="returnMsg != null and returnMsg != '' ">
            and b.return_msg like concat(concat('%', #{returnMsg,jdbcType=VARCHAR}),'%')
        </if>
        <if test="orderDirection!=null and orderDirection != ''  and orderField != ''  and orderField!=null ">
            order by ${orderField} ${orderDirection}
        </if>
        <if test="numPerPage != null and numPerPage != 0">
            <include refid="sql-global.pagination" />
        </if>
    </select>

    <!-- 统计订单数量,超管 -->
    <select id="selectCountPayOrders" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultType="java.lang.Integer">
        select
        count(*)
        from bs_pay_orders b LEFT JOIN bs_user u ON b.user_id = u.id left join bs_agent ag on u.agent_id = ag.id
        where 1 = 1
        <if test="userMobile != null and userMobile != '' ">
            and u.mobile like concat(concat('%', #{userMobile,jdbcType=VARCHAR}),'%')
        </if>
        <if test="mobile != null and mobile != '' ">
            and b.mobile like concat(concat('%', #{mobile,jdbcType=VARCHAR}),'%')
        </if>
        <if test="userName != null and userName != '' ">
            and b.user_name like concat(concat('%', #{userName,jdbcType=VARCHAR}),'%')
        </if>
        <if test="idCard != null and idCard != '' ">
            and b.id_card like concat(concat('%', #{idCard,jdbcType=VARCHAR}),'%')
        </if>
        <if test="orderNo != null and orderNo != '' ">
            and b.order_no like concat(concat('%', #{orderNo,jdbcType=VARCHAR}),'%')
        </if>
        <if test="status == null or 0 &gt;= status">
            and b.`status` in (1,2,3,4,5,6,7)
        </if>
        <if test="status != null and status &gt; 0 ">
            and b.status = #{status}
        </if>
        <if test="accountType != null and accountType != '' ">
            and b.account_type = #{accountType}
        </if>
        <if test="transType != null and transType != '' ">
            and b.trans_type = #{transType}
        </if>
        <if test="channelTransType != null and channelTransType != '' ">
            and b.channel_trans_type = #{channelTransType}
        </if>
        <if test="payChannel != null and payChannel != '' ">
            and b.channel = #{payChannel}
        </if>
        <if test="bankName != null and bankName != '' ">
            and b.bank_name like concat(concat('%', #{bankName,jdbcType=VARCHAR}),'%')
        </if>
        <if test="bankCardNo != null and bankCardNo != '' ">
            and b.bank_card_no like concat(concat('%', #{bankCardNo,jdbcType=VARCHAR}),'%')
        </if>
        <if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
            <!-- and b.create_time between #{beginTime} and #{overTime} -->
            and b.create_time &gt;= #{beginTime} and b.create_time &lt;= #{overTime}
        </if>
        <if test="buyBankType != null and buyBankType != '' and buyBankType =='-1'">
            and b.bank_id is null
        </if>
        <if test="buyBankType != null and buyBankType != '' and buyBankType !='-1'">
            and b.bank_id = cast(#{buyBankType} as SIGNED INTEGER)
        </if>
        <!-- &lt;if test="agentId != null and agentId != 0 and agentId != -1 "&gt;
              and ag.id = #{agentId}
          &lt;/if&gt;
          &lt;if test="agentId == -1"&gt;
              and ag.id is null
          &lt;/if&gt; -->
        <if test="agentIds != null and agentIds !='' and (nonAgentId == null or nonAgentId == '')">
            and u.agent_id in
            <foreach close=")" collection="agentIds" index="index" item="agentId" open="(" separator=",">
                #{agentId}
            </foreach>
        </if>
        <if test="(agentIds == null or agentIds =='' ) and nonAgentId != null and nonAgentId != ''">
            and u.agent_id is null
        </if>
        <if test="agentIds != null and agentIds !='' and nonAgentId != null and nonAgentId != ''">
            and (u.agent_id in
            <foreach close=")" collection="agentIds" index="index" item="agentId" open="(" separator=",">
                #{agentId}
            </foreach>
            or u.agent_id is null)
        </if>
        <if test="returnMsg != null and returnMsg != '' ">
            and b.return_msg like concat(concat('%', #{returnMsg,jdbcType=VARCHAR}),'%')
        </if>
        <if test="userId != null and userId != '' ">
            and b.user_id = #{userId}
        </if>
        <if test="terminalTypes != null and terminalTypes !=''">
            and b.terminal_type in
            <foreach close=")" collection="terminalTypes" index="index" item="terminalType" open="(" separator=",">
                #{terminalType}
            </foreach>
        </if>
    </select>
    
     <select id="selectCountPayOrders4Normal" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultType="java.lang.Integer">
        select
        count(*)
        from bs_pay_orders b LEFT JOIN bs_user u ON b.user_id = u.id left join bs_agent ag on u.agent_id = ag.id
        where 1 = 1 and b.trans_type != 'SYS_BUY_DAFY'
        <if test="userMobile != null and userMobile != '' ">
            and u.mobile =#{userMobile,jdbcType=VARCHAR}
        </if>
        <if test="userName != null and userName != '' ">
            and b.user_name=#{userName,jdbcType=VARCHAR}
        </if>
        <if test="status == null or 0 &gt;= status">
            and b.`status` in (1,2,3,4,5,6,7)
        </if>
        <if test="status != null and status &gt; 0 ">
            and b.status = #{status}
        </if>
        <if test="transType != null and transType != '' ">
            and b.trans_type = #{transType}
        </if>
        <if test="channelTransType != null and channelTransType != '' ">
            and b.channel_trans_type = #{channelTransType}
        </if>
        <if test="payChannel != null and payChannel != '' ">
            and b.channel = #{payChannel}
        </if>
        <if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
            <!-- and b.create_time between #{beginTime} and #{overTime} -->
            and b.create_time &gt;= #{beginTime} and b.create_time &lt;= #{overTime}
        </if>
        <if test="buyBankType != null and buyBankType != '' and buyBankType =='-1'">
            and b.bank_id is null
        </if>
        <if test="buyBankType != null and buyBankType != '' and buyBankType !='-1'">
            and b.bank_id = cast(#{buyBankType} as SIGNED INTEGER)
        </if>
        <if test="agentIds != null and agentIds !='' and (nonAgentId == null or nonAgentId == '')">
            and u.agent_id in
            <foreach close=")" collection="agentIds" index="index" item="agentId" open="(" separator=",">
                #{agentId}
            </foreach>
        </if>
        <if test="(agentIds == null or agentIds =='' ) and nonAgentId != null and nonAgentId != ''">
            and u.agent_id is null
        </if>
        <if test="agentIds != null and agentIds !='' and nonAgentId != null and nonAgentId != ''">
            and (u.agent_id in
            <foreach close=")" collection="agentIds" index="index" item="agentId" open="(" separator=",">
                #{agentId}
            </foreach>
            or u.agent_id is null)
        </if>
        <if test="returnMsg != null and returnMsg != '' ">
            and b.return_msg like concat(concat('%', #{returnMsg,jdbcType=VARCHAR}),'%')
        </if>
    </select>


    <sql id="Base_RardRecord_List">
        <if test="status != null and status != ''">
            and status = #{status,jdbcType=INTEGER}
        </if>
        <if test="bankCardNo != null and bankCardNo != ''">
            and bank_card_no = #{bankCardNo,jdbcType=VARCHAR}
        </if>
    </sql>

    <select id="cardRecordCount" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM bs_pay_orders WHERE 1 =1
        <include refid="Base_RardRecord_List" />
    </select>

    <select id="findCardRecordByPage" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultMap="BaseResultMapVO">
        SELECT
        <include refid="Base_Column_List" />
        ,return_msg,return_code
        FROM bs_pay_orders where 1 = 1
        <include refid="Base_RardRecord_List" />
        <include refid="sql-global.pagination" />
    </select>

    <select id="findBuyBankTypeList" resultMap="BaseResultMap">
	 SELECT pb.bank_id bank_id,sb.`name` bank_name FROM bs_19pay_bank  pb  LEFT JOIN bs_bank sb ON  pb.bank_id = sb.id
GROUP BY bank_id 
  </select>

    <!-- 用户提现查询列表 -->
    <select id="selectUserWithdrawalInfo" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultMap="BaseResultMapVO">
        select
        u.mobile mobile,
        u.user_name userName,
        b.amount amount,
        b.create_time createTime,
        b.status status
        from
        bs_pay_orders b ,bs_user u
        where
        u.id = b.user_id and b.trans_type = 'BALANCE_WITHDRAW'
        <if test="mobile != null and mobile != '' ">
            and u.mobile like concat(concat('%', #{mobile,jdbcType=VARCHAR}),'%')
        </if>
        <if test="userName != null and userName != '' ">
            and u.user_name like concat(concat('%', #{userName,jdbcType=VARCHAR}),'%')
        </if>
        <!-- 状态：处理中、成功、失败 -->
        <if test="status == null or 0 &gt;= status">
            and b.status in (5,6,7)
        </if>
        <if test="status != null and status &gt; 0 ">
            and b.status = #{status}
        </if>
        <if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
            and b.create_time between DATE_FORMAT(#{beginTime},'%Y-%m-%d 00:00:00') and
            DATE_FORMAT(#{overTime},'%Y-%m-%d 23:59:59')
        </if>
        <if test="orderDirection!=null and orderDirection != ''  and orderField != ''  and orderField!=null ">
            order by ${orderField} ${orderDirection}
        </if>
        <include refid="sql-global.pagination" />
    </select>

    <!-- 用户提现金额统计 -->
    <select id="selectSumUserWithdrawal" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultType="java.lang.Double">
        select
        sum(b.amount)
        from
        bs_pay_orders b ,bs_user u
        where
        u.id = b.user_id and b.trans_type = 'BALANCE_WITHDRAW'
        <if test="mobile != null and mobile != '' ">
            and u.mobile like concat(concat('%', #{mobile,jdbcType=VARCHAR}),'%')
        </if>
        <if test="userName != null and userName != '' ">
            and u.user_name like concat(concat('%', #{userName,jdbcType=VARCHAR}),'%')
        </if>
        <if test="status != null and status &gt; 0 ">
            and b.status = #{status}
        </if>
        <if test="status == null or 0 &gt;= status">
            and b.status in (5,6,7)
        </if>
        <if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
            and b.create_time between DATE_FORMAT(#{beginTime},'%Y-%m-%d 00:00:00') and
            DATE_FORMAT(#{overTime},'%Y-%m-%d 23:59:59')
        </if>
    </select>

    <!-- 用户提现记录数 -->
    <select id="selectCountUserWithdrawal" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultType="java.lang.Integer">
        select
        count(*)
        from
        bs_pay_orders b ,bs_user u
        where
        u.id = b.user_id and b.trans_type = 'BALANCE_WITHDRAW'
        <if test="mobile != null and mobile != '' ">
            and u.mobile like concat(concat('%', #{mobile,jdbcType=VARCHAR}),'%')
        </if>
        <if test="userName != null and userName != '' ">
            and u.user_name like concat(concat('%', #{userName,jdbcType=VARCHAR}),'%')
        </if>
        <if test="status != null and status &gt; 0 ">
            and b.status = #{status}
        </if>
        <if test="status == null or 0 &gt;= status">
            and b.status in (5,6,7)
        </if>
        <if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
            and b.create_time between DATE_FORMAT(#{beginTime},'%Y-%m-%d 00:00:00') and
            DATE_FORMAT(#{overTime},'%Y-%m-%d 23:59:59')
        </if>
    </select>

    <select id="calculateTotal" resultType="java.lang.Double">
        SELECT
        sum(amount)
        FROM
        bs_pay_orders
        WHERE
        STATUS = 6
        AND trans_type in ('CARD_BUY_PRODUCT','TOP_UP')
        <if test="transType != null">
            AND channel_trans_type = #{transType}
        </if>
        <if test="bankId != null">
            AND bank_id = #{bankId}
        </if>
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
        <![CDATA[
		AND update_time >= #{startTime}
		AND update_time <= #{endTime}
	]]>
    </select>

    <select id="calculateChannelTotal" resultType="java.lang.Double">
        SELECT
        sum(amount)
        FROM
        bs_pay_orders
        WHERE
        STATUS in (5,6)
        AND trans_type in ('CARD_BUY_PRODUCT','TOP_UP')
        <if test="transType != null">
            AND channel_trans_type = #{transType}
        </if>
        <if test="channel != null">
            AND channel = #{channel}
        </if>
        <![CDATA[
		AND update_time >= #{startTime}
		AND update_time <= #{endTime}
	]]>
    </select>

    <select id="topUpTotal" resultType="java.lang.Double">
        SELECT
        sum(amount)
        FROM
        bs_pay_orders
        WHERE
        STATUS = 6
        AND trans_type = 'TOP_UP'
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
        <![CDATA[
		AND update_time >= #{startTime}
		AND update_time <= #{endTime}
	]]>
    </select>

    <select id="calculateBuyProductTotal" resultType="java.lang.Double">
  	SELECT
		sum(amount)
	FROM
		bs_pay_orders
	WHERE
		STATUS = 6
	AND trans_type in ('CARD_BUY_PRODUCT','BALANCE_BUY_PRODUCT')
	<![CDATA[
		AND update_time >= #{startTime}
		AND update_time <= #{endTime}

        ]]>
    </select>

    <sql id="Base_PayOrders_List">
        <if test="id != null and id != 0">
            and id = #{id,jdbcType=INTEGER}
        </if>
        <if test="status != null and status != 0">
            and status = #{status,jdbcType=INTEGER}
        </if>
        <if test="bankCardNo != null">
            and bank_card_no = #{bankCardNo,jdbcType=VARCHAR}
        </if>
        <if test="userId != null and userId != 0">
            and user_id = #{userId,jdbcType=INTEGER}
        </if>
        <if test="transTypeList != null">
            and trans_type in
            <foreach close=")" collection="transTypeList" index="index" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
    </sql>

    <select id="selectBsPayOrders" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from bs_pay_orders where 1 = 1
        <include refid="Base_PayOrders_List" />
    </select>

    <!--
      - =======================================================
       - 用户充值记录总数
       - @author yanwl
       - @date 2015-12-14
       - =======================================================
    -->
    <select id="selectUserCountTopUp" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultType="java.lang.Integer">
        select count(*) from
        bs_pay_orders b, bs_user u
        where u.id = b.user_id and b.account_type = 1 and b.trans_type = 'TOP_UP'
        <if test="mobile != null and mobile != '' ">
            and u.mobile like concat(concat('%', #{mobile,jdbcType=VARCHAR}),'%')
        </if>
        <if test="userName != null and userName != '' ">
            and u.user_name like concat(concat('%', #{userName,jdbcType=VARCHAR}),'%')
        </if>
        <if test="status == null or 0 &gt;= status">
            and b.status in (5,6,7)
        </if>
        <if test="status != null and status &gt; 0 ">
            and b.status = #{status}
        </if>
        <if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
            and b.update_time between DATE_FORMAT(#{beginTime},'%Y-%m-%d 00:00:00') and
            DATE_FORMAT(#{overTime},'%Y-%m-%d 23:59:59')
        </if>
    </select>

    <!--
      - =======================================================
       - 分页查询用户充值记录
       - @author yanwl
       - @date 2015-12-14
       - =======================================================
    -->
    <select id="selectUserTopUpList" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultMap="BaseResultMapVO">
        select u.id, u.mobile mobile,
        u.user_name as userName, b.amount,
        b.update_time as sysTime, b.status
        from bs_pay_orders b, bs_user u
        where u.id = b.user_id and b.account_type = 1 and b.trans_type = 'TOP_UP'
        <if test="mobile != null and mobile != '' ">
            and u.mobile like concat(concat('%', #{mobile,jdbcType=VARCHAR}),'%')
        </if>
        <if test="userName != null and userName != '' ">
            and u.user_name like concat(concat('%', #{userName,jdbcType=VARCHAR}),'%')
        </if>
        <if test="status == null or 0 &gt;= status">
            and b.status in (5,6,7)
        </if>
        <if test="status != null and status &gt; 0 ">
            and b.status = #{status}
        </if>
        <if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
            and b.update_time between DATE_FORMAT(#{beginTime},'%Y-%m-%d 00:00:00') and
            DATE_FORMAT(#{overTime},'%Y-%m-%d 23:59:59')
        </if>
        <if test="orderDirection!=null and orderDirection != ''  and orderField != ''  and orderField!=null ">
            order by ${orderField} ${orderDirection}
        </if>
        <include refid="sql-global.pagination" />
    </select>

    <!--
      - =======================================================
       - 合计用户充值总金额
       - @author yanwl
       - @date 2015-12-14
       - =======================================================
    -->
    <select id="selectUserSumTopUp" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultType="java.lang.Double">
        select IFNULL(sum(b.amount),0) from
        bs_pay_orders b, bs_user u
        where u.id = b.user_id and b.account_type = 1 and b.trans_type = 'TOP_UP'
        <if test="mobile != null and mobile != '' ">
            and u.mobile like concat(concat('%', #{mobile,jdbcType=VARCHAR}),'%')
        </if>
        <if test="userName != null and userName != '' ">
            and u.user_name like concat(concat('%', #{userName,jdbcType=VARCHAR}),'%')
        </if>
        <if test="status == null or 0 &gt;= status">
            and b.status in (5,6,7)
        </if>
        <if test="status != null and status &gt; 0 ">
            and b.status = #{status}
        </if>
        <if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
            and b.update_time between DATE_FORMAT(#{beginTime},'%Y-%m-%d 00:00:00') and
            DATE_FORMAT(#{overTime},'%Y-%m-%d 23:59:59')
        </if>
    </select>

    <sql id="Base_PayOrders_Service_List">
        <if test="mobile != null and mobile != '' ">
            and p.mobile like CONCAT(CONCAT('%', #{mobile}),'%')
        </if>
        <if test="userMobile != null and userMobile != '' ">
            and u.mobile like CONCAT(CONCAT('%', #{userMobile}),'%')
        </if>
        <if test="idCard !=null and idCard != ''">
            and right(p.id_card,4) = #{idCard,jdbcType=VARCHAR}
        </if>
    </sql>

    <select id="countPayOrders" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultType="java.lang.Integer">
        select count(*) from bs_pay_orders p left join bs_user u on u.id = p.user_id
        where 1 = 1
        <include refid="Base_PayOrders_Service_List" />
        and p.create_time &gt; date_sub(now() ,interval 30 day)
    </select>

    <select id="payOrdersPage" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultMap="BaseResultMapVO">
        <!-- select p.mobile,u.user_name,u.mobile as userMobile,p.* from bs_pay_orders p left join bs_user u on u.id = p.user_id
        where 1 = 1
        &lt;include refid="Base_PayOrders_Service_List" /&gt;
        and  p.create_time &gt; date_sub(now() ,interval 30 day) order by p.create_time desc
        &lt;include refid="sql-global.pagination"/&gt;
         -->
        select b.term, b.base_rate,
        p.mobile,u.user_name,u.mobile as userMobile,p.*
        from bs_pay_orders p left join bs_user u on u.id = p.user_id
        LEFT JOIN bs_sub_account a ON a.id = p.sub_account_id
        LEFT JOIN bs_product b ON b.id = a.product_id
        where 1 = 1
        <include refid="Base_PayOrders_Service_List" />
        and p.create_time &gt; date_sub(now() ,interval 30 day) order by p.create_time desc
        <include refid="sql-global.pagination" />
    </select>


    <!-- 查询首页金额信息 -->
    <select id="selectFinanceWithdrawAmount" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT * FROM (
        <!-- 昨日购买  -->
        SELECT SUM(o.amount) AS buyAmount
        FROM bs_pay_orders o WHERE DATE(o.update_time) = #{yesterday} AND o.`status` = 6
        AND (o.trans_type = 'CARD_BUY_PRODUCT' OR o.trans_type = 'BALANCE_BUY_PRODUCT')
        <if test="channelType !=null and channelType != ''">
            AND o.channel = #{channelType}
        </if>
        <if test="channelType ==null or channelType == ''">
            AND (o.channel is not null and o.channel !='PAY19' and o.channel != 'DAFY')
        </if>
        ) aa, (
        <!-- 昨日充值 -->
        SELECT SUM(o.amount) AS rechargeAmount
        FROM bs_pay_orders o WHERE DATE(o.update_time) = #{yesterday} AND o.`status` = 6
        AND o.trans_type = 'TOP_UP'
        <if test="channelType !=null and channelType != ''">
            AND o.channel = #{channelType}
        </if>
        <if test="channelType ==null or channelType == ''">
            AND (o.channel is not null and o.channel !='PAY19' and o.channel != 'DAFY')
        </if>
        ) bb, (
        <!-- 当日提现成功 -->
        SELECT SUM(o.amount) AS withdrawOverAmount
        FROM bs_pay_orders o WHERE DATE(o.update_time) = #{today} AND o.`status` = 6
        AND o.trans_type = 'CHANNEL_WITHDRAW'
        <if test="channelType !=null and channelType != ''">
            AND o.channel = #{channelType}
        </if>
        ) cc, (
        <!-- 当日提现处理中 -->
        SELECT SUM(o.amount) AS withdrawProcessAmount
        FROM bs_pay_orders o WHERE DATE(o.update_time) = #{today} AND o.`status` = 5
        AND o.trans_type = 'CHANNEL_WITHDRAW'
        <if test="channelType !=null and channelType != ''">
            AND o.channel = #{channelType}
        </if>
        ) dd
    </select>

    <!--
       - 查询用户首次购买设备信息
       - @auth yanwl
       - @date 2016-01-15
     -->
    <select id="selectFirstInvestDevice" parameterType="java.util.Map" resultType="java.util.Map">
	select r.terminal_type as terminalType from
	(
		select bsa.account_id,p.terminal_type from bs_user u
		left join bs_account a on u.id = a.user_id 
		left join bs_sub_account bsa on a.id = bsa.account_id and bsa.product_type = 'REG' and bsa.status not in (1)
		left join bs_pay_orders p on p.sub_account_id = bsa.id
		where u.id = #{userId}
		order by bsa.open_time asc
	) r
	group by r.account_id
  </select>

    <select id="selectBuySuccessPayOrders" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select * from bs_pay_orders where user_id = #{userId} and trans_type in('CARD_BUY_PRODUCT','BALANCE_BUY_PRODUCT')
	and (`status` =5 or `status` = 6) order by `status` desc,update_time desc limit 1
  </select>

    <select id="selectPayOrderProductByOrderNo" parameterType="java.util.Map" resultMap="BsPayOrderProductResultVO">
  	select 
  		a.*, b.product_id,
  		b.balance,c.max_total_amount,c.curr_total_amount, b.`code`
	from 
		bs_pay_orders a, bs_sub_account b, bs_product c
	where 
		a.order_no = #{orderNo} and a.sub_account_id=b.id and b.product_id=c.id
  </select>
  <!--客户充值S -->
  <select id="userRechangeStatistics" resultMap="UserRechangeStatisticsMap">
  	SELECT
		(@rowNO := @rowNo + 1) rowno,
		t.*
	FROM
		(SELECT @rowNO := #{position}) b,
		(
			SELECT
				p.user_id,
				p.amount,
				p.user_name,
				p.mobile,
				p.update_time,
				concat("3.",p.user_id) customer_code,
				p.order_no
			FROM
				bs_pay_orders p
			WHERE
			 p. STATUS = 6
			AND (p.trans_type = 'TOP_UP' OR p.trans_type = 'CARD_BUY_PRODUCT' )
        	AND p.update_time &gt;= '2015-12-01 00:00:00'
        	AND date(p.update_time) &lt;= '2017-9-19'
			<if test="userName != null and userName != ''"> 
				AND p.user_name like concat(concat('%', #{userName}),'%')
			</if>
			<if test="mobile != null and mobile != ''"> 
				AND p.mobile  like concat(concat('%', #{mobile}),'%')
			</if>
			<if test="startTime != null and startTime != ''"> 
				<![CDATA[
					AND p.update_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''"> 
				<![CDATA[
					AND p.update_time <= #{endTime}
				]]>
			</if>
			ORDER BY
				p.update_time DESC
			LIMIT #{position}, #{offset}
		) t
  </select>
  
  <select id="userRechangeStatisticsCount" resultType="java.lang.Integer">
  	SELECT
		count(*)
	FROM
		bs_pay_orders p
	WHERE
		p. STATUS = 6
	AND (p.trans_type = 'TOP_UP' OR p.trans_type = 'CARD_BUY_PRODUCT' )
    AND p.update_time &gt;= '2015-12-01 00:00:00'
    AND date(p.update_time) &lt;= '2017-9-19'
	<if test="userName != null and userName != ''"> 
		AND p.user_name like concat(concat('%', #{userName}),'%')
	</if>
	<if test="mobile != null and mobile != ''"> 
		AND p.mobile  like concat(concat('%', #{mobile}),'%')
	</if>
	<if test="startTime != null and startTime != ''"> 
		<![CDATA[
			AND p.update_time >= #{startTime}
		]]>
	</if>
	<if test="endTime != null and endTime != ''"> 
		<![CDATA[
			AND p.update_time <= #{endTime}
		]]>
	</if>
  </select>
    <select id="userTotalRechangeAmountStatistics" resultType="java.lang.Double">
  	SELECT
		SUM(p.amount)
	FROM
		bs_pay_orders p
	WHERE
		p. STATUS = 6
	AND (p.trans_type = 'TOP_UP' OR p.trans_type = 'CARD_BUY_PRODUCT' )
	AND p.update_time &gt;= '2015-12-01 00:00:00'
	AND date(p.update_time) &lt;= '2017-9-19'
	<if test="userName != null and userName != ''"> 
		AND p.user_name like concat(concat('%', #{userName}),'%')
	</if>
	<if test="mobile != null and mobile != ''"> 
		AND p.mobile  like concat(concat('%', #{mobile}),'%')
	</if>
	<if test="startTime != null and startTime != ''"> 
		<![CDATA[
			AND p.update_time >= #{startTime}
		]]>
	</if>
	<if test="endTime != null and endTime != ''"> 
		<![CDATA[
			AND p.update_time <= #{endTime}
		]]>
	</if>
  </select>
  <!--客户充值E -->
  
  <!--本金购买S -->
  <select id="corpusBuyStatistics" resultMap="CorpusBuyStatisticsMap">
    SELECT
    (@rowNO := @rowNo + 1) rowno,
    t.*
    FROM
    (SELECT @rowNO := #{position}) b,
    (
    SELECT
    p.user_id,
    p.amount,
    a.balance,
    p.user_name,
    p.mobile,
    a.interest_begin_date update_time,
    concat("3.",p.user_id) customer_code,
    p.order_no,
    CASE WHEN 0 > d.term  THEN ROUND(a.balance * (d.base_rate/100)*(-d.term)/365 ,2)
    WHEN d.term > 0 AND d.term != 12 THEN ROUND(a.balance * (d.base_rate/100) * 30 * d.term /365,2)
    WHEN d.term > 0 AND d.term = 12 THEN ROUND(a.balance * (d.base_rate/100),2) END
    user_interest,
    CASE
    WHEN 0 > d.term  THEN ROUND(a.balance * 0.2 *(-d.term)/365 ,2)
    WHEN d.term > 0 AND d.term != 12 THEN
    CASE
    WHEN e.property_symbol = 'YUN_DAI' AND SUBSTR(d.`code`,1,2) IN('14') THEN
    ROUND( a.balance * 0.2 * 30 * d.term / 365, 2 )
    WHEN e.property_symbol = '7_DAI' AND SUBSTR(d.`code`,1,2) IN('24') THEN
    ROUND(a.balance * 0.22 * 30 * d.term /365,2)
    ELSE
    ROUND(a.balance * 0.24 * 30 * d.term /365,2)
    END
    WHEN d.term > 0 AND d.term = 12 THEN
    CASE
    WHEN e.property_symbol = 'YUN_DAI' AND SUBSTR(d.`code`,1,2) IN('14') THEN
    ROUND(a.balance * 0.2, 2)
    WHEN e.property_symbol = '7_DAI' AND SUBSTR(d.`code`,1,2) IN('24') THEN
    ROUND(a.balance * 0.22, 2)
    ELSE
    ROUND(a.balance * 0.24,2)
    END
    END AS finance_interest,
    CASE  WHEN e.property_symbol = 'ZAN' THEN
    '1.3'
    WHEN e.property_symbol = '7_DAI' THEN
    '1.2'
    ELSE
    '1.1'
    END
    property_code
    FROM
    bs_pay_orders p
    LEFT JOIN bs_sub_account a ON  p.sub_account_id = a.id
    LEFT JOIN bs_product d ON a.product_id = d.id
    LEFT JOIN bs_property_info e ON d.property_id = e.id
    WHERE
    p. STATUS = 6
    AND (p.trans_type = 'CARD_BUY_PRODUCT' OR p.trans_type = 'BALANCE_BUY_PRODUCT')
    AND  a.interest_begin_date >= '2015-12-02 00:00:00'
    AND date(a.interest_begin_date) &lt;='2017-09-20'
    AND  a.product_type  = 'REG'

    <if test="userType != null and userType != '' and userType == 'VIP'">
      AND 1= 0
    </if>
    <if test="userType != null and userType != '' and userType == 'NORMAL'">
      AND 1= 1
    </if>
    <if test="userName != null and userName != ''">
      AND p.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND p.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
					AND a.interest_begin_date >= #{startTime}
				]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
					AND a.interest_begin_date <= #{endTime}
				]]>
    </if>

    UNION
    SELECT
    za.bs_user_id user_id,
    CASE WHEN zj.id IS NOT NULL THEN
    zj.amount
    ELSE
    za.total_amount
    END  amount,
    CASE WHEN zj.id IS NOT NULL THEN
    zj.amount
    ELSE
    za.total_amount
    END  balance,
    zb.user_name,
    zb.mobile mobile,
    zg.loan_time update_time,
    concat("3.",za.bs_user_id) customer_code,
    concat(zg.pay_order_no,za.id) order_no,
    CASE WHEN zj.id IS NOT NULL THEN
    (SELECT
    ROUND((zj.amount*ca.base_rate/1200*POW((1+ca.base_rate/1200),zg.period))/(POW((1+ca.base_rate/1200),zg.period)-1),2) * zg.period -zj.amount
    FROM(
    SELECT * FROM
    bs_product bb
    WHERE
    id= (SELECT
    ba.conf_value
    FROM bs_sys_config ba
    WHERE  ba.conf_key = 'SUPER_PRODUCT_ID')
    ) ca)
    ELSE
    (SELECT SUM(zc.plan_interest) FROM ln_finance_repay_schedule zc WHERE zc.relation_id = za.id)
    END user_interest,
    CASE WHEN zj.id IS NOT NULL THEN
    ROUND(zj.amount*0.15*(zg.period +1)/24,2)
    ELSE
    ROUND(za.total_amount*0.15*(zg.period +1)/24,2)
    END
    finance_interest,
    CASE WHEN zf.property_symbol  = 'ZAN' THEN
    '1.3'
    WHEN zf.property_symbol  = '7_DAI' THEN
    '1.2'
    WHEN zf.property_symbol  = 'YUN_DAI' THEN
    '1.1'
    END
    property_code
    FROM
    ln_loan_relation za LEFT JOIN ln_credit_transfer zi ON za.id = zi.in_loan_relation_id
    LEFT JOIN ln_credit_transfer zj ON za.id = zj.out_loan_relation_id,
    bs_user zb,
    bs_sub_account zd,
    bs_product ze,
    bs_property_info zf,
    ln_loan zg
    WHERE
    zi.id IS NULL
    AND za.bs_user_id = zb.id
    AND za.bs_sub_account_id = zd.id
    AND zd.product_id = ze.id
    AND ze.property_id = zf.id
    AND za.loan_id = zg.id
    AND (za.`status` = 'SUCCESS'
    OR za.`status` = 'REPAID')
	AND zg.ln_user_id not in (SELECT conf_value from bs_sys_config where conf_key in('7_DAI_SELF_SUPER_LN_USER','YUN_DAI_SELF_SUPER_LN_USER'))
	AND date(zg.loan_time) &lt;='2017-09-19'
    <if test="userType != null and userType != '' and userType == 'VIP'">
      and za.bs_user_id in
      <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
        #{userId}
      </foreach>
    </if>
    <if test="userType != null and userType != '' and userType == 'NORMAL'">
      and za.bs_user_id not in
      <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
        #{userId}
      </foreach>
    </if>
    <if test="userName != null and userName != ''">
      AND zb.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND zb.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
					AND zg.loan_time >= #{startTime}
				]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
					AND zg.loan_time <= #{endTime}
				]]>
    </if>
    ORDER BY update_time DESC
    LIMIT #{position}, #{offset}
    ) t
  </select>

  <select id="corpusBuyStatisticsCount" resultType="java.lang.Integer">
   SELECT (
	    SELECT
			count(*) 
		FROM
					bs_pay_orders p
					LEFT JOIN bs_sub_account a ON  p.sub_account_id = a.id
					LEFT JOIN bs_product d ON a.product_id = d.id
					LEFT JOIN bs_property_info e ON d.property_id = e.id
		WHERE
		 p. STATUS = 6
		AND (p.trans_type = 'CARD_BUY_PRODUCT' OR p.trans_type = 'BALANCE_BUY_PRODUCT')
		AND  a.interest_begin_date &gt;= '2015-12-02 00:00:00'
		AND date(a.interest_begin_date) &lt;='2017-09-20'
		AND  a.product_type = 'REG'
		<if test="userType != null and userType != '' and userType == 'VIP'"> 
			AND 1= 0
		</if>
		<if test="userType != null and userType != '' and userType == 'NORMAL'"> 
			AND 1= 1
		</if>
		<if test="userName != null and userName != ''"> 
			AND p.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND p.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND a.interest_begin_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND a.interest_begin_date <= #{endTime}
			]]>
		</if>
		)+(
				SELECT 
					COUNT(*)
				FROM
					ln_loan_relation za LEFT JOIN ln_credit_transfer zi ON za.id = zi.in_loan_relation_id
					LEFT JOIN ln_credit_transfer zj ON za.id = zj.out_loan_relation_id,
					bs_user zb,
					bs_sub_account zd,
					bs_product ze,
					bs_property_info zf,
					ln_loan zg
				WHERE
				zi.id IS NULL
				AND za.bs_user_id = zb.id
				AND za.bs_sub_account_id = zd.id
				AND zd.product_id = ze.id
				AND ze.property_id = zf.id
				AND za.loan_id = zg.id
				AND (za.`status` = 'SUCCESS'  
				OR za.`status` = 'REPAID')
				AND zf.property_symbol IN('YUN_DAI','7_DAI','ZAN')
				AND date(zg.loan_time) &lt;='2017-09-19'
				AND zg.ln_user_id not in (SELECT conf_value from bs_sys_config where conf_key in('7_DAI_SELF_SUPER_LN_USER','YUN_DAI_SELF_SUPER_LN_USER'))
				<if test="userType != null and userType != '' and userType == 'VIP'"> 
					and za.bs_user_id in
					<foreach close=")" collection="userIdList" index="index" item="userId" open="(" separator=",">
						#{userId}
					</foreach>
				</if>
				<if test="userType != null and userType != '' and userType == 'NORMAL'"> 
					and za.bs_user_id not in
					<foreach close=")" collection="userIdList" index="index" item="userId" open="(" separator=",">
						#{userId}
					</foreach>
				</if>
				
				<if test="userName != null and userName != ''"> 
					AND zb.user_name like concat(concat('%', #{userName}),'%')
				</if>
				<if test="mobile != null and mobile != ''"> 
					AND zb.mobile  like concat(concat('%', #{mobile}),'%')
				</if>
				<if test="startTime != null and startTime != ''"> 
					<![CDATA[
						AND zg.loan_time >= #{startTime}
					]]>
				</if>
				<if test="endTime != null and endTime != ''"> 
					<![CDATA[
						AND zg.loan_time <= #{endTime}
					]]>
				</if>
	)
	
  </select>


  <select id="corpusBuyTotalAmount" resultMap="CorpusBuyStatisticsMap">
    SELECT
    SUM(t.balance) corpus_buy_total_amount,
    SUM(t.finance_interest) corpus_buy_total_finance_interest ,
    SUM(t.user_interest) corpus_buy_total_user_interest
    FROM
    (

    SELECT
    p.user_id,
    p.amount,
    a.balance,
    p.user_name,
    p.mobile,
    a.interest_begin_date update_time,
    concat("3.",p.user_id) customer_code,
    p.order_no,
    CASE WHEN 0 > d.term  THEN ROUND(a.balance * (d.base_rate/100)*(-d.term)/365 ,2)
    WHEN d.term > 0 AND d.term != 12 THEN ROUND(a.balance * (d.base_rate/100) * 30 * d.term /365,2)
    WHEN d.term > 0 AND d.term = 12 THEN ROUND(a.balance * (d.base_rate/100),2) END user_interest,
    CASE WHEN 0 > d.term THEN ROUND(a.balance * 0.2 *(-d.term)/365 ,2)
    WHEN d.term > 0 AND d.term != 12 THEN
    CASE
    WHEN e.property_symbol = 'YUN_DAI' AND SUBSTR(d.`code`,1,2) IN('14') THEN
    ROUND( a.balance * 0.2 * 30 * d.term / 365, 2 )
    WHEN e.property_symbol = '7_DAI' AND SUBSTR(d.`code`,1,2) IN('24') THEN
    ROUND(a.balance * 0.22 * 30 * d.term /365,2)
    ELSE
    ROUND(a.balance * 0.24 * 30 * d.term /365,2)
    END
    WHEN d.term > 0 AND d.term = 12 THEN
    CASE
    WHEN e.property_symbol = 'YUN_DAI' AND SUBSTR(d.`code`,1,2) IN('14') THEN
    ROUND(a.balance * 0.2, 2)
    WHEN e.property_symbol = '7_DAI' AND SUBSTR(d.`code`,1,2) IN('24') THEN
    ROUND(a.balance * 0.22, 2)
    ELSE
    ROUND(a.balance * 0.24,2)
    END
    END AS finance_interest
    FROM
    bs_pay_orders p
    LEFT JOIN bs_sub_account a ON  p.sub_account_id = a.id
    LEFT JOIN bs_product d ON a.product_id = d.id
    LEFT JOIN bs_property_info e ON d.property_id = e.id
    WHERE
    p. STATUS = 6
    AND (p.trans_type = 'CARD_BUY_PRODUCT' OR p.trans_type = 'BALANCE_BUY_PRODUCT')
    AND  a.product_type = 'REG'
    AND  a.interest_begin_date >= '2015-12-02 00:00:00'
    AND date(a.interest_begin_date) &lt;='2017-09-20'
    <if test="userType != null and userType != '' and userType == 'VIP'">
      AND 1= 0
    </if>
    <if test="userType != null and userType != '' and userType == 'NORMAL'">
      AND 1= 1
    </if>
    <if test="userName != null and userName != ''">
      AND p.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND p.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
						AND a.interest_begin_date >= #{startTime}
					]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
						AND a.interest_begin_date <= #{endTime}
					]]>
    </if>

    UNION  ALL
    SELECT
    za.bs_user_id user_id,
    CASE WHEN zj.id IS NOT NULL THEN
    zj.amount
    ELSE
    za.total_amount
    END  amount,
    CASE WHEN zj.id IS NOT NULL THEN
    zj.amount
    ELSE
    za.total_amount
    END  balance,
    zb.user_name,
    zb.mobile mobile,
    zg.loan_time update_time,
    concat("3.",za.bs_user_id) customer_code,
    concat(zg.pay_order_no,za.id) order_no,
    CASE WHEN zj.id IS NOT NULL THEN
    (SELECT
    ROUND((zj.amount*ca.base_rate/1200*POW((1+ca.base_rate/1200),zg.period))/(POW((1+ca.base_rate/1200),zg.period)-1),2) * zg.period -zj.amount
    FROM(
    SELECT * FROM
    bs_product bb
    WHERE
    id= (SELECT
    ba.conf_value
    FROM bs_sys_config ba
    WHERE  ba.conf_key = 'SUPER_PRODUCT_ID')
    ) ca)
    ELSE
    (SELECT SUM(zc.plan_interest) FROM ln_finance_repay_schedule zc WHERE zc.relation_id = za.id)
    END user_interest,
    CASE WHEN zj.id IS NOT NULL THEN
    ROUND(zj.amount*0.15*(zg.period +1)/24,2)
    ELSE
    ROUND(za.total_amount*0.15*(zg.period +1)/24,2)
    END
    finance_interest
    FROM
    ln_loan_relation za LEFT JOIN ln_credit_transfer zi ON za.id = zi.in_loan_relation_id
    LEFT JOIN ln_credit_transfer zj ON za.id = zj.out_loan_relation_id,
    bs_user zb,
    bs_sub_account zd,
    bs_product ze,
    bs_property_info zf,
    ln_loan zg
    WHERE
    zi.id IS NULL
    AND za.bs_user_id = zb.id
    AND za.bs_sub_account_id = zd.id
    AND zd.product_id = ze.id
    AND za.loan_id = zg.id
    AND ze.property_id = zf.id
    AND (za.`status` = 'SUCCESS'
    OR za.`status` = 'REPAID')
	AND zf.property_symbol IN('YUN_DAI','7_DAI','ZAN')
	AND date(zg.loan_time) &lt;='2017-09-19'
	AND zg.ln_user_id not in (SELECT conf_value from bs_sys_config where conf_key in('7_DAI_SELF_SUPER_LN_USER','YUN_DAI_SELF_SUPER_LN_USER'))
    <if test="userType != null and userType != '' and userType == 'VIP'">
      and za.bs_user_id in
      <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
        #{userId}
      </foreach>
    </if>
    <if test="userType != null and userType != '' and userType == 'NORMAL'">
      and za.bs_user_id not in
      <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
        #{userId}
      </foreach>
    </if>
    <if test="userName != null and userName != ''">
      AND zb.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND zb.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
						AND zg.loan_time >= #{startTime}
					]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
						AND zg.loan_time <= #{endTime}
					]]>
    </if>

    ) t
  </select>

  <!--本金购买E -->
   
 <!-- 客户支取S -->
  <resultMap id="userDrawBonusStatisticsMap" type="com.pinting.business.model.vo.UserDrawBonusStatisticsVO">
  	<result column="row_no" jdbcType="INTEGER" property="rowNo" />
  	<result column="order_no" jdbcType="VARCHAR" property="orderNo" />
  	<result column="customer_code" jdbcType="VARCHAR" property="customerCode" />
  	<result column="customer_name" jdbcType="VARCHAR" property="customerName" />
  	<result column="amount" jdbcType="DOUBLE" property="amount" />
  	<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <select id="userDrawBonusStatistics" resultMap="userDrawBonusStatisticsMap">
		SELECT
			(@row_no := @row_no + 1) AS row_no,
			aa.*
		FROM
			(
				SELECT
					a.order_no,
					concat("3.",b.id) customer_code,
					b.user_name customer_name,
					a.amount AS amount,
					a.update_time
				FROM
					bs_pay_orders a
				LEFT JOIN bs_user b ON a.user_id = b.id
				LEFT JOIN bs_sub_account c ON a.sub_account_id = c.id
				WHERE
					(
						a.trans_type = 'BALANCE_WITHDRAW'
						OR (a.trans_type = 'RETURN_2_USER_BANK_CARD' AND c.interest_begin_date &gt;=  '2015-12-02 00:00:00')
					)
				AND a.`status` = 6
		<if test="customerName != null and customerName != ''">
			AND b.user_name LIKE CONCAT(CONCAT('%', #{customerName}),'%')
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND a.update_time >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND a.update_time <= #{endTime}
			]]>
		</if>
		ORDER BY a.update_time DESC
		LIMIT #{position}, #{offset}
	) AS aa, (SELECT @row_no := #{position}) bb
  </select>
  <select id="userDrawBonusStatisticsCount" resultType="java.lang.Integer">
    SELECT COUNT(aa.user_id) FROM (
		SELECT a.user_id
		FROM bs_pay_orders a LEFT JOIN bs_user b ON a.user_id = b.id
		LEFT JOIN bs_sub_account c ON a.sub_account_id = c.id
		WHERE (a.trans_type = 'BALANCE_WITHDRAW' 
		OR (a.trans_type = 'RETURN_2_USER_BANK_CARD' AND c.interest_begin_date &gt;=  '2015-12-02 00:00:00')
		) AND a.`status` = 6
		<if test="customerName != null and customerName != ''"> 
			AND b.user_name LIKE CONCAT(CONCAT('%', #{customerName}),'%')
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND a.update_time >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND a.update_time <= #{endTime}
			]]>
		</if>
	) AS aa
  </select>
  
   <select id="userDrawBonusStatisticsTotalAmount" resultType="java.lang.Double">
    SELECT SUM(aa.amount) FROM (
		SELECT a.user_id,a.amount
		FROM bs_pay_orders a LEFT JOIN bs_user b ON a.user_id = b.id
		LEFT JOIN bs_sub_account c ON a.sub_account_id = c.id
		WHERE (a.trans_type = 'BALANCE_WITHDRAW' 
		OR (a.trans_type = 'RETURN_2_USER_BANK_CARD' AND c.interest_begin_date &gt;=  '2015-12-02 00:00:00')
		) AND a.`status` = 6
		<if test="customerName != null and customerName != ''"> 
			AND b.user_name LIKE CONCAT(CONCAT('%', #{customerName}),'%')
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND a.update_time >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND a.update_time <= #{endTime}
			]]>
		</if>
	) AS aa
  </select>
  <!-- 客户支取E -->
  <!-- 支付融资客户 S  -->
  <select id="payFinanceStatistics" resultMap="PayFinanceStatisticsMap">
    SELECT
    (@rowNO := @rowNo + 1) rowno,
    t.*,t.balance+t.finance_interest  finance_total_amount,cast(cast(t.finance_interest as decimal(10,2))-cast(t.user_interest as decimal(10,2)) AS decimal(10,2)) interest_income
    FROM
    (SELECT @rowNO := #{position}) b,
    (
    SELECT
    p.user_id,
    p.amount,
    a.balance,
    p.user_name,
    p.mobile,
    a.interest_begin_date update_time,
    concat("3.",p.user_id) customer_code,
    p.order_no,
    CASE WHEN 0 > d.term  THEN ROUND(a.balance * (d.base_rate/100)*(-d.term)/365 ,2)
    WHEN d.term > 0 AND d.term != 12 THEN ROUND(a.balance * (d.base_rate/100) * 30 * d.term /365 ,2)
    WHEN d.term > 0 AND d.term = 12 THEN ROUND(a.balance * (d.base_rate/100) ,2) END user_interest,
    CASE WHEN 0 > d.term THEN ROUND(a.balance * 0.2 *(-d.term)/365 ,2)
    WHEN d.term > 0 AND d.term != 12 THEN
    CASE
    WHEN e.property_symbol = 'YUN_DAI' AND SUBSTR(d.`code`,1,2) IN('14') THEN
    ROUND( a.balance * 0.2 * 30 * d.term / 365, 2 )
    WHEN e.property_symbol = '7_DAI' AND SUBSTR(d.`code`,1,2) IN('24') THEN
    ROUND(a.balance * 0.22 * 30 * d.term /365,2)
    ELSE
    ROUND(a.balance * 0.24 * 30 * d.term /365,2)
    END
    WHEN d.term > 0 AND d.term = 12 THEN
    CASE
    WHEN e.property_symbol = 'YUN_DAI' AND SUBSTR(d.`code`,1,2) IN('14') THEN
    ROUND(a.balance * 0.2, 2)
    WHEN e.property_symbol = '7_DAI' AND SUBSTR(d.`code`,1,2) IN('24') THEN
    ROUND(a.balance * 0.22, 2)
    ELSE
    ROUND(a.balance * 0.24,2)
    END
    END AS finance_interest,
    CASE WHEN e.property_symbol = '7_DAI' THEN
    '1.2'
    ELSE
    '1.1'
    END
    property_code
    FROM
    bs_pay_orders p
    LEFT JOIN bs_sub_account a ON  p.sub_account_id = a.id
    LEFT JOIN bs_product d ON a.product_id = d.id
    LEFT JOIN bs_property_info e ON d.property_id = e.id
    WHERE
    p. STATUS = 6
    AND (p.trans_type = 'CARD_BUY_PRODUCT' OR p.trans_type = 'BALANCE_BUY_PRODUCT')
    AND  a.interest_begin_date >= '2015-12-02 00:00:00'
    AND date(a.interest_begin_date) &lt;='2017-09-20'
    AND a.product_type = 'REG'
    <if test="userName != null and userName != ''">
      AND p.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND p.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
					AND a.interest_begin_date >= #{startTime}
				]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
					AND a.interest_begin_date <= #{endTime}
				]]>
    </if>

    UNION

    SELECT
    za.bs_user_id user_id,
    CASE WHEN zj.id IS NOT NULL THEN
    zj.amount
    ELSE
    za.total_amount
    END  amount,
    CASE WHEN zj.id IS NOT NULL THEN
    zj.amount
    ELSE
    za.total_amount
    END  balance,
    zb.user_name,
    zb.mobile mobile,
    zg.loan_time update_time,
    concat("3.",za.bs_user_id) customer_code,
    concat(zg.pay_order_no,za.id)	order_no,
    CASE WHEN zj.id IS NOT NULL THEN
    (SELECT
    ROUND((zj.amount*ca.base_rate/1200*POW((1+ca.base_rate/1200),zg.period))/(POW((1+ca.base_rate/1200),zg.period)-1),2) * zg.period -zj.amount
    FROM(
    SELECT * FROM
    bs_product bb
    WHERE
    id= (SELECT
    ba.conf_value
    FROM bs_sys_config ba
    WHERE  ba.conf_key = 'SUPER_PRODUCT_ID')
    ) ca)
    ELSE
    (SELECT SUM(zc.plan_interest) FROM ln_finance_repay_schedule zc WHERE zc.relation_id = za.id)
    END user_interest,
    CASE WHEN zj.id IS NOT NULL THEN
    ROUND(zj.amount*0.15*(zg.period +1)/24,2)
    ELSE
    ROUND(za.total_amount*0.15*(zg.period +1)/24,2)
    END
    finance_interest,
    CASE WHEN zf.property_symbol  = 'ZAN' THEN
    '1.3'
    WHEN zf.property_symbol  = '7_DAI' THEN
    '1.2'
    WHEN zf.property_symbol  = 'YUN_DAI' THEN
    '1.1'
    END
    property_code
    FROM
    `ln_loan_relation` za LEFT JOIN ln_credit_transfer zi ON za.id = zi.in_loan_relation_id
    LEFT JOIN ln_credit_transfer zj ON za.id = zj.out_loan_relation_id,
    bs_user zb,
    bs_sub_account zd ,
    bs_product ze,
    bs_property_info zf,
    ln_loan zg
    WHERE
    zi.id IS NULL
    AND za.bs_user_id = zb.id
    AND za.bs_sub_account_id = zd.id
    AND zd.product_id = ze.id
    AND ze.property_id = zf.id
    AND za.loan_id = zg.id
    AND (za.`status` = 'SUCCESS'
    OR za.`status` = 'REPAID')
	AND zf.property_symbol IN ('YUN_DAI','7_DAI','ZAN')
    <if test="userName != null and userName != ''">
      AND zb.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND zb.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
					AND zg.loan_time >= #{startTime}
				]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
					AND zg.loan_time <= #{endTime}
				]]>
    </if>
	AND date(zg.loan_time) &lt;='2017-09-19'
	AND za.ln_user_id != (SELECT conf_value FROM bs_sys_config WHERE conf_key = '7_DAI_SELF_SUPER_LN_USER')
	AND za.ln_user_id != (SELECT conf_value FROM bs_sys_config WHERE conf_key = 'YUN_DAI_SELF_SUPER_LN_USER')
    ORDER BY
    update_time DESC
    LIMIT #{position}, #{offset}
    ) t
  </select>

  <select id="payFinanceStatisticsCount" resultType="java.lang.Integer">
  	SELECT(
  	SELECT
		count(*)
	FROM
				bs_pay_orders p
				LEFT JOIN bs_sub_account a ON  p.sub_account_id = a.id
				LEFT JOIN bs_product d ON a.product_id = d.id
				LEFT JOIN bs_property_info e ON d.property_id = e.id
	WHERE
	 p. STATUS = 6
	AND (p.trans_type = 'CARD_BUY_PRODUCT' OR p.trans_type = 'BALANCE_BUY_PRODUCT')
	 AND  a.interest_begin_date &gt;= '2015-12-02 00:00:00'
	 AND date(a.interest_begin_date) &lt;='2017-09-20'
	 AND a.product_type = 'REG'
	<if test="userName != null and userName != ''"> 
		AND p.user_name like concat(concat('%', #{userName}),'%')
	</if>
	<if test="mobile != null and mobile != ''"> 
		AND p.mobile  like concat(concat('%', #{mobile}),'%')
	</if>
	<if test="startTime != null and startTime != ''"> 
		<![CDATA[
			AND a.interest_begin_date >= #{startTime}
		]]>
	</if>
	<if test="endTime != null and endTime != ''"> 
		<![CDATA[
			AND a.interest_begin_date <= #{endTime}
		]]>
	</if>
	)+(	
			SELECT
				count(*)
			FROM
				`ln_loan_relation` za LEFT JOIN ln_credit_transfer zi ON  za.id = zi.in_loan_relation_id,
				bs_user zb,
				bs_sub_account zd ,
				bs_product ze,
				bs_property_info zf,
				ln_loan zg
			WHERE
			zi.id IS NULL
			AND za.bs_user_id = zb.id
			AND za.bs_sub_account_id = zd.id
			AND zd.product_id = ze.id
			AND ze.property_id = zf.id
			AND za.loan_id = zg.id
			AND (za.`status` = 'SUCCESS'  
			OR za.`status` = 'REPAID')
			AND zf.property_symbol IN ('YUN_DAI','7_DAI','ZAN')
			<if test="userName != null and userName != ''"> 
				AND zb.user_name like concat(concat('%', #{userName}),'%')
			</if>
			<if test="mobile != null and mobile != ''"> 
				AND zb.mobile  like concat(concat('%', #{mobile}),'%')
			</if>
			<if test="startTime != null and startTime != ''"> 
				<![CDATA[
					AND zg.loan_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''"> 
				<![CDATA[
					AND zg.loan_time <= #{endTime}
				]]>
			</if>
			AND date(zg.loan_time) &lt;='2017-09-19'
			AND za.ln_user_id != (SELECT conf_value FROM bs_sys_config WHERE conf_key = '7_DAI_SELF_SUPER_LN_USER')
			AND za.ln_user_id != (SELECT conf_value FROM bs_sys_config WHERE conf_key = 'YUN_DAI_SELF_SUPER_LN_USER')
		)
  </select>


  <select id="payFinanceStatisticsTotalAmount" resultMap="PayFinanceStatisticsMap">
    SELECT
    SUM(t.balance) total_balance,
    SUM(t.finance_interest) total_finance_interest,
    SUM(t.user_interest) total_user_interest
    FROM
    (
    SELECT
    p.user_id,
    p.amount,
    a.balance,
    p.user_name,
    p.mobile,
    a.interest_begin_date update_time,
    concat("3.",p.user_id) customer_code,
    p.order_no,
    CASE WHEN 0 > d.term  THEN ROUND(a.balance * (d.base_rate/100)*(-d.term)/365 ,2)
    WHEN d.term > 0 AND d.term != 12 THEN ROUND(a.balance * (d.base_rate/100) * 30 * d.term /365 ,2)
    WHEN d.term > 0 AND d.term = 12 THEN ROUND(a.balance * (d.base_rate/100) ,2) END user_interest,
    CASE WHEN 0 > d.term THEN ROUND(a.balance * 0.2 *(-d.term)/365 ,2)
    WHEN d.term > 0 AND d.term != 12 THEN
    CASE
    WHEN e.property_symbol = 'YUN_DAI' AND SUBSTR(d.`code`,1,2) IN('14') THEN
    ROUND( a.balance * 0.2 * 30 * d.term / 365, 2 )
    WHEN e.property_symbol = '7_DAI' AND SUBSTR(d.`code`,1,2) IN('24') THEN
    ROUND(a.balance * 0.22 * 30 * d.term /365,2)
    ELSE
    ROUND(a.balance * 0.24 * 30 * d.term /365,2)
    END
    WHEN d.term > 0 AND d.term = 12 THEN
    CASE
    WHEN e.property_symbol = 'YUN_DAI' AND SUBSTR(d.`code`,1,2) IN('14') THEN
    ROUND(a.balance * 0.2, 2)
    WHEN e.property_symbol = '7_DAI' AND SUBSTR(d.`code`,1,2) IN('24') THEN
    ROUND(a.balance * 0.22, 2)
    ELSE
    ROUND(a.balance * 0.24,2)
    END
    END AS finance_interest
    FROM
    bs_pay_orders p
    LEFT JOIN bs_sub_account a ON  p.sub_account_id = a.id
    LEFT JOIN bs_product d ON a.product_id = d.id
    LEFT JOIN bs_property_info e ON d.property_id = e.id
    WHERE
    p. STATUS = 6
    AND (p.trans_type = 'CARD_BUY_PRODUCT' OR p.trans_type = 'BALANCE_BUY_PRODUCT')
    AND  a.interest_begin_date >= '2015-12-02 00:00:00'
    AND date(a.interest_begin_date) &lt;='2017-09-20'
    AND a.product_type = 'REG'
    <if test="userName != null and userName != ''">
      AND p.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND p.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
					AND a.interest_begin_date >= #{startTime}
				]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
					AND a.interest_begin_date <= #{endTime}
				]]>
    </if>
    UNION

    SELECT
    za.bs_user_id user_id,
    CASE WHEN zj.id IS NOT NULL THEN
    zj.amount
    ELSE
    za.total_amount
    END  amount,
    CASE WHEN zj.id IS NOT NULL THEN
    zj.amount
    ELSE
    za.total_amount
    END  balance,
    zb.user_name,
    zb.mobile mobile,
    zg.loan_time update_time,
    concat("3.",za.bs_user_id) customer_code,
    concat(zg.pay_order_no,za.id)	order_no,
    CASE WHEN zj.id IS NOT NULL THEN
    (SELECT
    ROUND((zj.amount*ca.base_rate/1200*POW((1+ca.base_rate/1200),zg.period))/(POW((1+ca.base_rate/1200),zg.period)-1),2) * zg.period -zj.amount
    FROM(
    SELECT * FROM
    bs_product bb
    WHERE
    id= (SELECT
    ba.conf_value
    FROM bs_sys_config ba
    WHERE  ba.conf_key = 'SUPER_PRODUCT_ID')
    ) ca)
    ELSE
    (SELECT SUM(zc.plan_interest) FROM ln_finance_repay_schedule zc WHERE zc.relation_id = za.id)
    END user_interest,
    CASE WHEN zj.id IS NOT NULL THEN
    ROUND(zj.amount*0.15*(zg.period +1)/24,2)
    ELSE
    ROUND(za.total_amount*0.15*(zg.period +1)/24,2)
    END
    finance_interest
    FROM
    `ln_loan_relation` za LEFT JOIN ln_credit_transfer zi ON za.id = zi.in_loan_relation_id
    LEFT JOIN ln_credit_transfer zj ON za.id = zj.out_loan_relation_id,
    bs_user zb,
    bs_sub_account zd ,
    bs_product ze,
    bs_property_info zf,
    ln_loan zg
    WHERE
    zi.id IS NULL
    AND za.bs_user_id = zb.id
    AND za.bs_sub_account_id = zd.id
    AND zd.product_id = ze.id
    AND ze.property_id = zf.id
    AND za.loan_id = zg.id
    AND (za.`status` = 'SUCCESS'
    OR za.`status` = 'REPAID')
	AND zf.property_symbol IN ('YUN_DAI','7_DAI','ZAN')
    <if test="userName != null and userName != ''">
      AND zb.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND zb.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
					AND zg.loan_time >= #{startTime}
				]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
					AND zg.loan_time <= #{endTime}
				]]>
    </if>
	AND date(zg.loan_time) &lt;='2017-09-19'
	AND za.ln_user_id != (SELECT conf_value FROM bs_sys_config WHERE conf_key = '7_DAI_SELF_SUPER_LN_USER')
	AND za.ln_user_id != (SELECT conf_value FROM bs_sys_config WHERE conf_key = 'YUN_DAI_SELF_SUPER_LN_USER')
    ) t
  </select>


  <!-- 支付融资客户 E  -->

  <!-- 云贷/赞时贷支付融资客户 S  -->
  <select id="payFinanceYunZSDStatistics" resultMap="PayFinanceStatisticsMap">
    SELECT
        (@rowNO := @rowNo + 1) rowno,
        t.*
    FROM
        (SELECT @rowNO := #{position}) b,
        (
            SELECT
                za.bs_user_id user_id,
                za.total_amount AS balance,
                zb.user_name,
                zb.mobile mobile,
                zg.loan_time update_time,
                concat("3.",za.bs_user_id) customer_code,
                concat(zg.pay_order_no,za.id)	order_no,
                case when lu.partner_code = 'YUN_DAI_SELF' then '1.4'
                    when  lu.partner_code = 'ZSD' then '1.5'
                    when  lu.partner_code = '7_DAI_SELF' then '1.6' end property_code,
                lu.user_name ln_user_name, zg.partner_business_flag
            FROM `ln_loan_relation` za
            LEFT JOIN ln_user lu ON za.ln_user_id = lu.id,
            bs_user zb,
            ln_loan zg
            WHERE za.bs_user_id = zb.id
            AND za.loan_id = zg.id
            AND za.ln_user_id not in (SELECT conf_value from bs_sys_config where conf_key in('7_DAI_SELF_SUPER_LN_USER','YUN_DAI_SELF_SUPER_LN_USER'))
            AND (za.`status` = 'SUCCESS'
            OR za.`status` = 'REPAID'
            OR za.`status` = 'TRANSFERRED')
            AND za.total_amount > 0

            <if test="partnerCode != null and partnerCode != ''">
                AND lu.partner_code = #{partnerCode}
            </if>

            <if test="userName != null and userName != ''">
              AND zb.user_name like concat(concat('%', #{userName}),'%')
            </if>
            <if test="mobile != null and mobile != ''">
              AND zb.mobile  like concat(concat('%', #{mobile}),'%')
            </if>
            <if test="partnerCode != null and partnerCode != ''">
              <if test="userType != null and userType != '' and userType == 'VIP'">
                AND FIND_IN_SET(za.bs_user_id,(select conf_value from bs_sys_config where conf_key=concat( #{partnerCode} ,'_SUPER_FINANCE_USER_ID')))
              </if>
              <if test="userType != null and userType != '' and userType == 'NORMAL'">
                AND !FIND_IN_SET(za.bs_user_id,(select conf_value from bs_sys_config where conf_key=concat( #{partnerCode} ,'_SUPER_FINANCE_USER_ID')))
              </if>
            </if>
            <if test="startTime != null and startTime != ''">
                <![CDATA[
                    AND zg.loan_time >= #{startTime}
                ]]>
            </if>
            <if test="endTime != null and endTime != ''">
              <![CDATA[
                    AND zg.loan_time <= #{endTime}
              ]]>
            </if>
            <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag !='777' and partnerBusinessFlag !='888' and partnerBusinessFlag !='999' ">
              AND zg.partner_business_flag = #{partnerBusinessFlag}
            </if>
            <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag =='777' ">
              AND zg.partner_business_flag IN ('REPAY_ANY_TIME', 'FIXED_INSTALLMENT', 'FIXED_PRINCIPAL_INTEREST')
            </if>
            <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag =='888' ">
              AND zg.partner_business_flag IN ('现金循环贷',  'REPAY_ANY_TIME')
            </if>
            ORDER BY
            update_time DESC
            LIMIT #{position}, #{offset}
        ) t
  </select>



  <select id="payFinanceYunZSDStatisticsCount" resultType="java.lang.Integer">
    SELECT
        COUNT(za.id)
    FROM `ln_loan_relation` za
    LEFT JOIN ln_user lu ON za.ln_user_id = lu.id,
    bs_user zb,
    ln_loan zg
    WHERE za.bs_user_id = zb.id
    AND za.loan_id = zg.id
    AND za.ln_user_id not in (SELECT conf_value from bs_sys_config where conf_key in('7_DAI_SELF_SUPER_LN_USER','YUN_DAI_SELF_SUPER_LN_USER'))
    AND (za.`status` = 'SUCCESS'
    OR za.`status` = 'REPAID'
    OR za.`status` = 'TRANSFERRED')
    AND za.total_amount > 0

    <if test="partnerCode != null and partnerCode != ''">
        AND lu.partner_code = #{partnerCode}
    </if>

    <if test="userName != null and userName != ''">
      AND zb.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND zb.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="partnerCode != null and partnerCode != ''">
      <if test="userType != null and userType != '' and userType == 'VIP'">
        AND FIND_IN_SET(za.bs_user_id,(select conf_value from bs_sys_config where conf_key=concat( #{partnerCode} ,'_SUPER_FINANCE_USER_ID')))
      </if>
      <if test="userType != null and userType != '' and userType == 'NORMAL'">
        AND !FIND_IN_SET(za.bs_user_id,(select conf_value from bs_sys_config where conf_key=concat( #{partnerCode} ,'_SUPER_FINANCE_USER_ID')))
      </if>
    </if>
    <if test="startTime != null and startTime != ''">
        <![CDATA[
            AND zg.loan_time >= #{startTime}
		]]>
    </if>
    <if test="endTime != null and endTime != ''">
        <![CDATA[
			AND zg.loan_time <= #{endTime}
	    ]]>
    </if>
    <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag !='777' and partnerBusinessFlag !='888' and partnerBusinessFlag !='999' ">
      AND zg.partner_business_flag = #{partnerBusinessFlag}
    </if>
    <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag =='777' ">
      AND zg.partner_business_flag IN ('REPAY_ANY_TIME', 'FIXED_INSTALLMENT', 'FIXED_PRINCIPAL_INTEREST')
    </if>
    <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag =='888' ">
      AND zg.partner_business_flag IN ('现金循环贷', 'REPAY_ANY_TIME')
    </if>
  </select>

  <select id="payFinanceYunZSDTotalAmount" resultType="java.lang.Double">
    SELECT
        SUM(t.balance)
    FROM
    (
        SELECT
            za.total_amount AS balance
        FROM `ln_loan_relation` za
        LEFT JOIN ln_user lu ON za.ln_user_id = lu.id,
        bs_user zb,
        ln_loan zg
        WHERE za.bs_user_id = zb.id
        AND za.loan_id = zg.id
        AND za.ln_user_id not in (SELECT conf_value from bs_sys_config where conf_key in('7_DAI_SELF_SUPER_LN_USER','YUN_DAI_SELF_SUPER_LN_USER'))
        AND (za.`status` = 'SUCCESS'
        OR za.`status` = 'REPAID'
        OR za.`status` = 'TRANSFERRED')
        AND za.total_amount > 0

        <if test="partnerCode != null and partnerCode != ''">
            AND lu.partner_code = #{partnerCode}
        </if>

        <if test="userName != null and userName != ''">
            AND zb.user_name like concat(concat('%', #{userName}),'%')
        </if>
        <if test="mobile != null and mobile != ''">
            AND zb.mobile  like concat(concat('%', #{mobile}),'%')
        </if>
        <if test="partnerCode != null and partnerCode != ''">
          <if test="userType != null and userType != '' and userType == 'VIP'">
            AND FIND_IN_SET(za.bs_user_id,(select conf_value from bs_sys_config where conf_key=concat( #{partnerCode} ,'_SUPER_FINANCE_USER_ID')))
          </if>
          <if test="userType != null and userType != '' and userType == 'NORMAL'">
            AND !FIND_IN_SET(za.bs_user_id,(select conf_value from bs_sys_config where conf_key=concat( #{partnerCode} ,'_SUPER_FINANCE_USER_ID')))
          </if>
        </if>
        <if test="startTime != null and startTime != ''">
            <![CDATA[
                AND zg.loan_time >= #{startTime}
            ]]>
        </if>
        <if test="endTime != null and endTime != ''">
            <![CDATA[
                AND zg.loan_time <= #{endTime}
            ]]>
        </if>
        <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag !='777' and partnerBusinessFlag !='888' and partnerBusinessFlag !='999' ">
          AND zg.partner_business_flag = #{partnerBusinessFlag}
        </if>
        <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag =='777' ">
          AND zg.partner_business_flag IN ('REPAY_ANY_TIME', 'FIXED_INSTALLMENT', 'FIXED_PRINCIPAL_INTEREST')
        </if>
        <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag =='888' ">
          AND zg.partner_business_flag IN ('现金循环贷', 'REPAY_ANY_TIME')
        </if>
    ) t
  </select>

  <!-- 云贷/赞时贷支付融资客户 E  -->
  
	<!--   计提奖励金 S -->
   <select id="calculateRewardsStatistics" resultMap="CalculateRewardsStatisticsMap">
  	SELECT
		(@rowNO := @rowNo + 1) rowno,
		t.*
	FROM
		(SELECT @rowNO := #{position}) b,
		(
				SELECT * FROM ( 
						SELECT 
									a.user_id,
									b.user_name,
									b.mobile,
									a.create_time update_time,
									concat("3.",a.user_id) customer_code,
									concat("41",a.id) order_no,
									a.amount rewards_amount
						FROM 
						bs_bonus_grant_plan a
						LEFT JOIN bs_user b ON a.user_id = b.id
						WHERE 1=1
						<if test="userName != null and userName != ''"> 
							AND b.user_name like concat(concat('%', #{userName}),'%')
						</if>
						<if test="mobile != null and mobile != ''"> 
							AND b.mobile  like concat(concat('%', #{mobile}),'%')
						</if>
						<if test="startTime != null and startTime != ''"> 
							<![CDATA[
								AND a.create_time >= #{startTime}
							]]>
						</if>
						<if test="endTime != null and endTime != ''"> 
							<![CDATA[
								AND a.create_time <= #{endTime}
							]]>
						</if> 
						ORDER BY a.create_time DESC ) p1
					
				UNION
			
			  	SELECT * FROM ( 
						SELECT 
									a.user_id,
									b.user_name,
									b.mobile,
									a.time update_time,
									concat("3.",a.user_id) customer_code,
									concat("40",a.id) order_no,
									a.bonus rewards_amount
						FROM 
						bs_daily_bonus a
						LEFT JOIN bs_user b ON a.user_id = b.id
						WHERE a.time &lt; '2015-12-30 00:00:00' 
						and a.time &gt;= '2015-12-01 00:00:00'
						and a.bonus &gt; 0 
						<if test="userName != null and userName != ''"> 
							AND b.user_name like concat(concat('%', #{userName}),'%')
						</if>
						<if test="mobile != null and mobile != ''"> 
							AND b.mobile  like concat(concat('%', #{mobile}),'%')
						</if>
						<if test="startTime != null and startTime != ''"> 
							<![CDATA[
								AND a.time >= #{startTime}
							]]>
						</if>
						<if test="endTime != null and endTime != ''"> 
							<![CDATA[
								AND a.time <= #{endTime}
							]]>
						</if>
						ORDER BY a.time desc ) p1
		) t
		LIMIT #{position}, #{offset}
  </select>
  
  <select id="calculateRewardsStatisticsCount" resultType="java.lang.Integer">
  	SELECT
		count(*)
	FROM (
						SELECT 
									a.user_id,
									b.user_name,
									b.mobile,
									a.create_time update_time,
									concat("3.",a.user_id) customer_code,
									concat("41",a.id) order_no,
									a.amount rewards_amount
						FROM 
						bs_bonus_grant_plan a
						LEFT JOIN bs_user b ON a.user_id = b.id
						WHERE 1=1
						<if test="userName != null and userName != ''"> 
							AND b.user_name like concat(concat('%', #{userName}),'%')
						</if>
						<if test="mobile != null and mobile != ''"> 
							AND b.mobile  like concat(concat('%', #{mobile}),'%')
						</if>
						<if test="startTime != null and startTime != ''"> 
							<![CDATA[
								AND a.create_time >= #{startTime}
							]]>
						</if>
						<if test="endTime != null and endTime != ''"> 
							<![CDATA[
								AND a.create_time <= #{endTime}
							]]>
						</if> 
					
					UNION
			
						SELECT 
									a.user_id,
									b.user_name,
									b.mobile,
									a.time update_time,
									concat("3.",a.user_id) customer_code,
									concat("40",a.id) order_no,
									a.bonus rewards_amount
						FROM 
						bs_daily_bonus a
						LEFT JOIN bs_user b ON a.user_id = b.id
						WHERE a.time &lt; '2015-12-30 00:00:00' 
						and a.time &gt;= '2015-12-01 00:00:00'
						and a.bonus &gt; 0 
						<if test="userName != null and userName != ''"> 
							AND b.user_name like concat(concat('%', #{userName}),'%')
						</if>
						<if test="mobile != null and mobile != ''"> 
							AND b.mobile  like concat(concat('%', #{mobile}),'%')
						</if>
						<if test="startTime != null and startTime != ''"> 
							<![CDATA[
								AND a.time >= #{startTime}
							]]>
						</if>
						<if test="endTime != null and endTime != ''"> 
							<![CDATA[
								AND a.time <= #{endTime}
							]]>
						</if>
	
	)aa			
  </select>
  
  
    <select id="calculateRewardsStatisticsTotalAmount" resultType="java.lang.Double">
  	SELECT
		SUM(aa.rewards_amount)
	FROM (
						SELECT 
									a.user_id,
									b.user_name,
									b.mobile,
									a.create_time update_time,
									concat("3.",a.user_id) customer_code,
									concat("41",a.id) order_no,
									a.amount rewards_amount
						FROM 
						bs_bonus_grant_plan a
						LEFT JOIN bs_user b ON a.user_id = b.id
						WHERE 1=1
						<if test="userName != null and userName != ''"> 
							AND b.user_name like concat(concat('%', #{userName}),'%')
						</if>
						<if test="mobile != null and mobile != ''"> 
							AND b.mobile  like concat(concat('%', #{mobile}),'%')
						</if>
						<if test="startTime != null and startTime != ''"> 
							<![CDATA[
								AND a.create_time >= #{startTime}
							]]>
						</if>
						<if test="endTime != null and endTime != ''"> 
							<![CDATA[
								AND a.create_time <= #{endTime}
							]]>
						</if> 
					
					UNION
			
						SELECT 
									a.user_id,
									b.user_name,
									b.mobile,
									a.time update_time,
									concat("3.",a.user_id) customer_code,
									concat("40",a.id) order_no,
									a.bonus rewards_amount
						FROM 
						bs_daily_bonus a
						LEFT JOIN bs_user b ON a.user_id = b.id
						WHERE a.time &lt; '2015-12-30 00:00:00' 
						and a.time &gt;= '2015-12-01 00:00:00'
						and a.bonus &gt; 0 
						<if test="userName != null and userName != ''"> 
							AND b.user_name like concat(concat('%', #{userName}),'%')
						</if>
						<if test="mobile != null and mobile != ''"> 
							AND b.mobile  like concat(concat('%', #{mobile}),'%')
						</if>
						<if test="startTime != null and startTime != ''"> 
							<![CDATA[
								AND a.time >= #{startTime}
							]]>
						</if>
						<if test="endTime != null and endTime != ''"> 
							<![CDATA[
								AND a.time <= #{endTime}
							]]>
						</if>
	
	)aa			
  </select>
  <!--   计提奖励金 S -->
  
  <!--   发放本息统计 S  -->
  <resultMap id="userGrantInterestStatisticsMap" type="com.pinting.business.model.vo.UserGrantInterestStatisticsVO">
  	<result column="row_no" jdbcType="INTEGER" property="rowNo" />
  	<result column="id" jdbcType="INTEGER" property="id" />
  	<result column="order_no" jdbcType="VARCHAR" property="orderNo" />
  	<result column="customer_code" jdbcType="VARCHAR" property="customerCode" />
  	<result column="customer_name" jdbcType="VARCHAR" property="customerName" />
  	<result column="balance" jdbcType="DOUBLE" property="balance" /><!-- 本金 -->
  	<result column="interest" jdbcType="DOUBLE" property="interest" /><!-- 利息 -->
  	<result column="amount" jdbcType="DOUBLE" property="amount" /><!-- 本息合计 -->
  	<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  	<result column="total_balance" jdbcType="DOUBLE" property="totalBalance" />
  	<result column="total_interest" jdbcType="DOUBLE" property="totalInterest" />
  </resultMap>
  <!-- 发放本息sql
  	bs_customer_receive_money 中card_no关联用户表中id_card字段，由于数据库中存在脏数据，
  	两个用户的身份证号相同（用户解绑卡，换账户情况可能会发生），加上一个is_bind_name =1 确保不会重复
   -->
  <select id="userGrantInterestStatistics" resultMap="userGrantInterestStatisticsMap">
SELECT
	(@row_no := @row_no + 1) AS row_no,
	aa.*
FROM
	(
	  	SELECT 
			s.id,
			concat("70", s.id) order_no,
			concat("3.", u.id) customer_code,
			u.user_name customer_name , 
			s.balance AS balance,
			s.accumulation_inerest AS interest,
			(s.balance + s.accumulation_inerest) AS amount,
			s.last_finish_interest_date AS update_time
		FROM bs_account a,
		bs_user u ,
		bs_sub_account s,
		bs_product p
		where s.account_id = a.id and  a.user_id = u.id
		AND s.product_id = p.id 
		and s.product_type = 'REG'
		AND s.`status` IN (5,6)
		AND  s.interest_begin_date &gt;= '2015-12-02 00:00:00'
		<if test="customerName != null and customerName != ''"> 
			AND u.user_name LIKE CONCAT(CONCAT('%', #{customerName}),'%')
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND s.last_finish_interest_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND s.last_finish_interest_date <= #{endTime}
			]]>
		</if>
		<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == 'YUN_DAI'"> 
			AND p.property_id = 1   
		</if>
		<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == '7_DAI'"> 
			AND p.property_id = 2   
		</if>
		<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == 'ZAN'"> 
			AND 1=0
		</if>	
		
		UNION
		
		SELECT 
		  ba.id,
		  concat("71", ba.id) order_no,
		  concat("3.", bb.bs_user_id) customer_code,
		  be.user_name customer_name , 
		  ba.plan_principal AS balance,
		  ba.plan_interest AS interest,
		  (ba.plan_principal+ba.plan_interest) AS amount,
		  ba.done_time AS update_time
		FROM 
		ln_finance_repay_schedule ba,
		ln_loan_relation bb,
		bs_sub_account bc,
		bs_account bd,
		bs_user be,
		bs_product bf
		WHERE 
		ba.relation_id = bb.id
		AND bb.bs_sub_account_id = bc.id
		AND bc.account_id = bd.id
		AND bd.user_id = be.id
		AND bc.product_id = bf.id
		AND ba.`status` = 'REPAIED'
		<if test="customerName != null and customerName != ''"> 
			AND be.user_name LIKE CONCAT(CONCAT('%', #{customerName}),'%')
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND  ba.done_time >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND  ba.done_time <= #{endTime}
			]]>
		</if>
		<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == 'YUN_DAI'"> 
			AND 1=0
		</if>
		<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == '7_DAI'"> 
			AND 1=0
		</if>
		<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == 'ZAN'"> 
			AND bf.property_id = 3
		</if>		
		ORDER BY update_time DESC
		LIMIT #{position}, #{offset}
	) AS aa, (SELECT @row_no := #{position}) bb
  </select>
  <select id="userGrantInterestStatisticsCount" resultType="java.lang.Integer">
		SELECT(
			SELECT 
				COUNT(*)
			FROM bs_account a,
			bs_user u ,
			bs_sub_account s,
			bs_product p
			where s.account_id = a.id and  a.user_id = u.id  
			AND s.product_id = p.id 
			and s.product_type = 'REG'
			AND s.`status` IN (5,6)
			AND  s.interest_begin_date &gt;= '2015-12-02 00:00:00'
			<if test="customerName != null and customerName != ''"> 
				AND u.user_name LIKE CONCAT(CONCAT('%', #{customerName}),'%')
			</if>
			<if test="startTime != null and startTime != ''"> 
				<![CDATA[
					AND s.last_finish_interest_date >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''"> 
				<![CDATA[
					AND s.last_finish_interest_date <= #{endTime}
				]]>
			</if>
			<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == 'YUN_DAI'"> 
				AND p.property_id = 1   
			</if>
			<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == '7_DAI'"> 
				AND p.property_id = 2   
			</if>
			<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == 'ZAN'"> 
				AND 1=0
			</if>	
		)+(
			SELECT 
			 COUNT(*)
			FROM 
			ln_finance_repay_schedule ba,
			ln_loan_relation bb,
			bs_sub_account bc,
			bs_account bd,
			bs_user be,
			bs_product bf
			WHERE 
			ba.relation_id = bb.id
			AND bb.bs_sub_account_id = bc.id
			AND bc.account_id = bd.id
			AND bd.user_id = be.id
			AND bc.product_id = bf.id
			AND ba.`status` = 'REPAIED'
			<if test="customerName != null and customerName != ''"> 
				AND be.user_name LIKE CONCAT(CONCAT('%', #{customerName}),'%')
			</if>
			<if test="startTime != null and startTime != ''"> 
				<![CDATA[
					AND  ba.done_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''"> 
				<![CDATA[
					AND  ba.done_time <= #{endTime}
				]]>
			</if>
			<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == 'YUN_DAI'"> 
				AND 1=0
			</if>
			<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == '7_DAI'"> 
				AND 1=0
			</if>
			<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == 'ZAN'"> 
				AND bf.property_id = 3
			</if>			
		)
  </select>
  
  
  <select id="userGrantInterestStatisticsTotalAmount" resultMap="userGrantInterestStatisticsMap">
		SELECT 
				SUM(ca.balance) total_balance,
				SUM(ca.interest) total_interest
		FROM
		(
			SELECT 
				s.id,
				concat("70", s.id) order_no,
				concat("3.", u.id) customer_code,
				u.user_name customer_name , 
				s.balance AS balance,
				s.accumulation_inerest AS interest,
				(s.balance + s.accumulation_inerest) AS amount,
				s.last_finish_interest_date AS update_time
			FROM bs_account a,
			bs_user u ,
			bs_sub_account s,
			bs_product p
			where s.account_id = a.id and  a.user_id = u.id  
			AND s.product_id = p.id
			and s.product_type = 'REG'
			AND s.`status` IN (5,6)
			AND  s.interest_begin_date &gt;= '2015-12-02 00:00:00'
			<if test="customerName != null and customerName != ''"> 
				AND u.user_name LIKE CONCAT(CONCAT('%', #{customerName}),'%')
			</if>
			<if test="startTime != null and startTime != ''"> 
				<![CDATA[
					AND s.last_finish_interest_date >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''"> 
				<![CDATA[
					AND s.last_finish_interest_date <= #{endTime}
				]]>
			</if>
			<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == 'YUN_DAI'"> 
				AND p.property_id = 1   
			</if>
			<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == '7_DAI'"> 
				AND p.property_id = 2   
			</if>
			<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == 'ZAN'"> 
				AND 1=0
			</if>	
			UNION ALL
			
			SELECT 
			  ba.id,
			  concat("71", ba.id) order_no,
			  concat("3.", bb.bs_user_id) customer_code,
			  be.user_name customer_name , 
			  ba.plan_principal AS balance,
			  ba.plan_interest AS interest,
			  (ba.plan_principal+ba.plan_interest) AS amount,
			  ba.done_time AS update_time
			FROM 
			ln_finance_repay_schedule ba,
			ln_loan_relation bb,
			bs_sub_account bc,
			bs_account bd,
			bs_user be,
			bs_product bf
			WHERE 
			ba.relation_id = bb.id
			AND bb.bs_sub_account_id = bc.id
			AND bc.account_id = bd.id
			AND bd.user_id = be.id
			AND bc.product_id = bf.id
			AND ba.`status` = 'REPAIED'
			<if test="customerName != null and customerName != ''"> 
				AND be.user_name LIKE CONCAT(CONCAT('%', #{customerName}),'%')
			</if>
			<if test="startTime != null and startTime != ''"> 
				<![CDATA[
					AND  ba.done_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''"> 
				<![CDATA[
					AND  ba.done_time <= #{endTime}
				]]>
			</if>
			<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == 'YUN_DAI'"> 
				AND 1=0
			</if>
			<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == '7_DAI'"> 
				AND 1=0
			</if>
			<if test="propertySymbol != null and propertySymbol != '' and propertySymbol == 'ZAN'"> 
				AND bf.property_id = 3
			</if>	
		) ca
		
  </select>
  <!--   发放本息统计 E  -->
<!--   奖励金发放 S -->
   <select id="grantRewardsStatistics" resultMap="GrantRewardsStatisticsMap">
  	SELECT
		(@rowNO := @rowNo + 1) rowno,
		t.*
	FROM
		(SELECT @rowNO := #{position}) b,
		(
				SELECT 
							a.user_id,
							b.user_name,
							b.mobile,
							a.time finish_date,
							concat("3.",a.user_id) customer_code,
							concat("50",a.id) bill_no,
							a.bonus rewards_amount
				FROM 
				bs_daily_bonus a
				LEFT JOIN bs_user b ON a.user_id = b.id
				where a.bonus&gt;0
				and  a.time &gt;= '2015-12-01 00:00:00'
				<if test="userName != null and userName != ''"> 
					AND b.user_name like concat(concat('%', #{userName}),'%')
				</if>
				<if test="mobile != null and mobile != ''"> 
					AND b.mobile  like concat(concat('%', #{mobile}),'%')
				</if>
				<if test="startTime != null and startTime != ''"> 
					<![CDATA[
						AND a.time >= #{startTime}
					]]>
				</if>
				<if test="endTime != null and endTime != ''"> 
					<![CDATA[
						AND a.time <= #{endTime}
					]]>
				</if>
				<if test="type != null and type != '' and type != 'INTEREST_TICKET'"> 
					AND a.type != 'INTEREST_TICKET'
				</if>
				<if test="type == 'INTEREST_TICKET'"> 
					AND a.type = 'INTEREST_TICKET'
				</if>
				ORDER BY a.time desc 
		) t LIMIT #{position}, #{offset}
  </select>
  
  <select id="grantRewardsStatisticsCount" resultType="java.lang.Integer">
  	SELECT
		count(*)
	FROM
		(
				SELECT 
							a.user_id,
							b.user_name,
							b.mobile,
							a.time finish_date,
							concat("3.",a.user_id) customer_code,
							concat("50",a.id) bill_no,
							a.bonus rewards_amount
				FROM 
				bs_daily_bonus a
				LEFT JOIN bs_user b ON a.user_id = b.id
				where a.bonus&gt;0
				and  a.time &gt;= '2015-12-01 00:00:00'
				<if test="userName != null and userName != ''"> 
					AND b.user_name like concat(concat('%', #{userName}),'%')
				</if>
				<if test="mobile != null and mobile != ''"> 
					AND b.mobile  like concat(concat('%', #{mobile}),'%')
				</if>
				<if test="startTime != null and startTime != ''"> 
					<![CDATA[
						AND a.time >= #{startTime}
					]]>
				</if>
				<if test="endTime != null and endTime != ''"> 
					<![CDATA[
						AND a.time <= #{endTime}
					]]>
				</if>
				<if test="type != null and type != '' and type != 'INTEREST_TICKET'"> 
					AND a.type != 'INTEREST_TICKET'
				</if>
				<if test="type == 'INTEREST_TICKET'"> 
					AND a.type = 'INTEREST_TICKET'
				</if>
				ORDER BY a.time desc 
		) t
  </select>
  
    <select id="grantRewardsStatisticsTotalAmount" resultType="java.lang.Double">
  	SELECT
		SUM(t.rewards_amount)
	FROM
		(
				SELECT 
							a.user_id,
							b.user_name,
							b.mobile,
							a.time finish_date,
							concat("3.",a.user_id) customer_code,
							concat("50",a.id) bill_no,
							a.bonus rewards_amount
				FROM 
				bs_daily_bonus a
				LEFT JOIN bs_user b ON a.user_id = b.id
				where a.bonus&gt;0
				and  a.time &gt;= '2015-12-01 00:00:00'
				<if test="userName != null and userName != ''"> 
					AND b.user_name like concat(concat('%', #{userName}),'%')
				</if>
				<if test="mobile != null and mobile != ''"> 
					AND b.mobile  like concat(concat('%', #{mobile}),'%')
				</if>
				<if test="startTime != null and startTime != ''"> 
					<![CDATA[
						AND a.time >= #{startTime}
					]]>
				</if>
				<if test="endTime != null and endTime != ''"> 
					<![CDATA[
						AND a.time <= #{endTime}
					]]>
				</if>
				<if test="type != null and type != '' and type != 'INTEREST_TICKET'"> 
					AND a.type != 'INTEREST_TICKET'
				</if>
				<if test="type == 'INTEREST_TICKET'"> 
					AND a.type = 'INTEREST_TICKET'
				</if>
		) t
  </select>
  
<!--   奖励金发放 E -->	
	
<!--  融资客户结算 S -->
  <select id="balanceFinanceStatistics" resultMap="BalanceFinanceStatisticsMap">
    SELECT
    (@rowNO := @rowNo + 1) rowno,
    t.*,t.balance+t.finance_interest  finance_total_amount
    FROM
    (SELECT @rowNO := #{position}) b,
    (

    SELECT *
    FROM(
    SELECT
    f.id user_id,
    CASE WHEN a.type = 'LAST_RETURN' THEN d.balance
    ELSE 0 END  balance,
    f.user_name user_name,
    f.mobile mobile,
    a.pay_finsh_time update_time,
    concat("3.",f.id) customer_code,
    concat("60",a.product_order_no,d.id,a.id) order_no,
    CASE WHEN i.property_symbol = '7_DAI' AND SUBSTR(d.product_code,1,2) NOT IN('24') THEN
    CASE WHEN  a.type = 'LAST_RETURN' AND a.product_return_term = 1 THEN
    CASE WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.2*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.2,2) END
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term > 1 AND a.product_return_term != 12 THEN ROUND(d.balance*0.2*30/365,2)
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term = 12 THEN ROUND(d.balance*0.2*35/365,2)
    WHEN a.type = 'INTEREST_RETURN' THEN ROUND(d.balance*0.2*30/365,2)
    END
    WHEN i.property_symbol = '7_DAI' AND SUBSTR(d.product_code,1,2) IN('24') THEN
    CASE WHEN  a.type = 'LAST_RETURN' AND a.product_return_term = 1 THEN
    CASE WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.18*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.18,2) END
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term > 1 AND a.product_return_term != 12 THEN ROUND(d.balance*0.18*30/365,2)
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term = 12 THEN ROUND(d.balance*0.18*35/365,2)
    WHEN a.type = 'INTEREST_RETURN' THEN ROUND(d.balance*0.18*30/365,2)
    END
    ELSE
    CASE WHEN  a.type = 'LAST_RETURN' AND a.product_return_term = 1 THEN
    CASE WHEN g.term &lt; 0 THEN  ROUND(d.balance*0.2*7/365,2)
    WHEN g.term > 0 AND g.term != 12
    THEN
    CASE WHEN d.product_code IN ('1413','1411','1412','1414') THEN ROUND(d.balance*0.2*(g.term*30)/365,2) ELSE ROUND(d.balance*0.24*(g.term*30)/365,2) END
    ELSE CASE WHEN d.product_code IN ('1413','1411','1412','1414') THEN ROUND(d.balance*0.2,2) ELSE ROUND(d.balance*0.24,2) END END
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term > 1 AND a.product_return_term != 12 THEN
    CASE WHEN d.product_code IN ('1413','1411','1412','1414') THEN ROUND(d.balance*0.2*30/365,2) ELSE ROUND(d.balance*0.24*30/365,2) END
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term = 12 THEN
    CASE WHEN d.product_code IN ('1413','1411','1412','1414') THEN ROUND(d.balance*0.2*35/365,2) ELSE ROUND(d.balance*0.24*35/365,2) END
    WHEN a.type = 'INTEREST_RETURN' THEN
    CASE WHEN d.product_code IN ('1413','1411','1412','1414') THEN ROUND(d.balance*0.2*30/365,2) ELSE ROUND(d.balance*0.24*30/365,2) END

    END
    END
    finance_interest,
    CASE WHEN i.property_symbol = '7_DAI' THEN
    '1.2'
    ELSE
    '1.1'
    END
    property_code,
    null as note,
    null as total_amount,
    null as serial_id,
    null as period,
    null as loan_id,
    null as sum_finance_interest,
    null as sum_finance_interest_all,
    null as is_min

    FROM
    bs_sys_receive_money a,
    bs_batch_buy b,
    bs_batch_buy_detail c,
    bs_sub_account d ,
    bs_account e,
    bs_user f,
    bs_product g  LEFT JOIN bs_property_info i ON g.property_id = i.id
    WHERE
    a.product_order_no = b.send_batch_id
    AND b.id = c.batch_id
    AND c.sub_account_id = d.id
    AND d.account_id = e.id
    AND e.user_id = f.id
    AND d.product_id = g.id
    AND a.`status` = 'SUCC'
    AND d.interest_begin_date >= '2015-12-02 00:00:00'
    AND DATE(d.interest_begin_date) &lt;='2017-09-20'
    <if test="userName != null and userName != ''">
      AND f.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND f.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
						AND a.pay_finsh_time >= #{startTime}
					]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
						AND a.pay_finsh_time <= #{endTime}
					]]>
    </if>
    ORDER BY
    a.pay_finsh_time DESC
    )p1
    UNION	all
    SELECT *
    FROM(
    SELECT
    f.id user_id,
    d.balance balance,
    f.user_name user_name,
    f.mobile mobile,
    b.return_time update_time,
    concat("3.",f.id) customer_code,
    concat("61",b.send_batch_id,d.id) order_no,
    CASE WHEN i.property_symbol = '7_DAI' AND SUBSTR(d.product_code,1,2) IN('24') THEN
    CASE WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.18*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.18,2) END
    WHEN i.property_symbol = '7_DAI' AND SUBSTR(d.product_code,1,2) NOT IN('24') THEN
    CASE WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.2*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.2,2) END
    ELSE
    CASE WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.24*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.24,2) END
    END
    finance_interest,
    CASE WHEN i.property_symbol = '7_DAI' THEN
    '1.2'
    ELSE
    '1.1'
    END
    property_code,
    null as note,
    null as total_amount,
    null as serial_id,
    null as period,
    null as loan_id,
    null as sum_finance_interest,
    null as sum_finance_interest_all,
    null as is_min
    FROM
    bs_batch_buy b,
    bs_batch_buy_detail c,
    bs_sub_account d ,
    bs_account e,
    bs_user f,
    bs_product g  LEFT JOIN bs_property_info i ON g.property_id = i.id
    WHERE
    b.id = c.batch_id
    AND c.sub_account_id = d.id
    AND d.account_id = e.id
    AND e.user_id = f.id
    AND d.product_id = g.id
    AND b.return_time &lt; '2016-01-29 00:00:00'
    AND b.`status` = 'DAFY_RETURN_SUCCESS'
    AND d.interest_begin_date >= '2015-12-02 00:00:00'
    AND DATE(d.interest_begin_date) &lt;='2017-09-20'
    <if test="userName != null and userName != ''">
      AND f.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND f.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
						AND b.return_time >= #{startTime}
					]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
						AND b.return_time <= #{endTime}
					]]>
    </if>

    ORDER BY
    b.return_time DESC
    )p2

    ) t where 1=1
    <if test="note != null and note != ''">
      AND t.note = '逾期'
    </if>
    LIMIT #{position}, #{offset}
  </select>

  <select id="balanceFinanceStatisticsCount" resultType="java.lang.Integer">
    SELECT
    COUNT(*)
    FROM
    (

    SELECT
    f.id user_id,
    d.balance balance,
    f.user_name user_name,
    f.mobile mobile,
    a.pay_finsh_time update_time,
    concat("3.",f.id) customer_code,
    concat("60",a.product_order_no,d.id,a.id) order_no,
    CASE WHEN i.property_symbol = '7_DAI' AND SUBSTR(g.`code`,1,2) NOT IN('24') THEN
    CASE
    WHEN  a.type = 'LAST_RETURN' AND a.product_return_term = 1 THEN
    CASE WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.2*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.2,2) END
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term > 1 AND a.product_return_term != 12 THEN ROUND(d.balance*0.2*30/365,2)
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term = 12 THEN ROUND(d.balance*0.2*35/365,2)
    WHEN a.type = 'INTEREST_RETURN' THEN ROUND(d.balance*0.2*30/365,2)
    END
    WHEN i.property_symbol = '7_DAI' AND SUBSTR(g.`code`,1,2) IN ('24') THEN
    CASE
    WHEN  a.type = 'LAST_RETURN' AND a.product_return_term = 1 THEN
    CASE WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.18*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.18,2)
    END
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term > 1 AND a.product_return_term != 12 THEN ROUND(d.balance*0.18*30/365,2)
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term = 12 THEN ROUND(d.balance*0.18*35/365,2)
    WHEN a.type = 'INTEREST_RETURN' THEN ROUND(d.balance*0.18*30/365,2)
    END
    WHEN i.property_symbol = 'YUN_DAI' AND SUBSTR(g.`code`,1,2) in('14') THEN
    CASE WHEN  a.type = 'LAST_RETURN' AND a.product_return_term = 1 THEN
    CASE WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.2*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.2,2) END
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term > 1 AND a.product_return_term != 12 THEN ROUND(d.balance*0.2*30/365,2)
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term = 12 THEN ROUND(d.balance*0.2*35/365,2)
    WHEN a.type = 'INTEREST_RETURN' THEN ROUND(d.balance*0.2*30/365,2)
    END
    ELSE
    CASE WHEN  a.type = 'LAST_RETURN' AND a.product_return_term = 1 THEN
    CASE WHEN g.term &lt; 0 THEN  ROUND(d.balance*0.2*7/365,2)
    WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.24*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.24,2) END
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term > 1 AND a.product_return_term != 12 THEN ROUND(d.balance*0.24*30/365,2)
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term = 12 THEN ROUND(d.balance*0.24*35/365,2)
    WHEN a.type = 'INTEREST_RETURN' THEN ROUND(d.balance*0.24*30/365,2)
    END
    END
    finance_interest,
    null as note
    FROM
    bs_sys_receive_money a,
    bs_batch_buy b,
    bs_batch_buy_detail c,
    bs_sub_account d ,
    bs_account e,
    bs_user f,
    bs_product g  LEFT JOIN bs_property_info i ON g.property_id = i.id
    WHERE
    a.product_order_no = b.send_batch_id
    AND b.id = c.batch_id
    AND c.sub_account_id = d.id
    AND d.account_id = e.id
    AND e.user_id = f.id
    AND d.product_id = g.id
    AND a.`status` = 'SUCC'
    AND d.interest_begin_date >= '2015-12-02 00:00:00'
    AND DATE(d.interest_begin_date) &lt;='2017-09-20'
    <if test="userName != null and userName != ''">
      AND f.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND f.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
						AND a.pay_finsh_time >= #{startTime}
					]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
						AND a.pay_finsh_time <= #{endTime}
					]]>
    </if>
    UNION	all
    (SELECT
    f.id user_id,
    d.balance balance,
    f.user_name user_name,
    f.mobile mobile,
    b.return_time update_time,
    concat("3.",f.id) customer_code,
    concat("61",b.send_batch_id,d.id) order_no,
    CASE WHEN i.property_symbol = '7_DAI' AND SUBSTR(g.`code`,1,2) NOT IN ('24') THEN
    CASE WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.2*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.2,2) END
    WHEN i.property_symbol = '7_DAI' AND SUBSTR(g.`code`,1,2) IN ('24') THEN
    CASE WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.18*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.18,2) END
    ELSE
    CASE WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.24*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.24,2) END
    END
    finance_interest,
    null as note
    FROM
    bs_batch_buy b,
    bs_batch_buy_detail c,
    bs_sub_account d ,
    bs_account e,
    bs_user f,
    bs_product g LEFT JOIN bs_property_info i ON g.property_id = i.id
    WHERE
    b.id = c.batch_id
    AND c.sub_account_id = d.id
    AND d.account_id = e.id
    AND e.user_id = f.id
    AND d.product_id = g.id
    AND b.return_time &lt; '2016-01-29 00:00:00'
    AND b.`status` = 'DAFY_RETURN_SUCCESS'
    AND d.interest_begin_date >= '2015-12-02 00:00:00'
    AND DATE(d.interest_begin_date) &lt;='2017-09-20'
    <if test="userName != null and userName != ''">
      AND f.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND f.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
						AND b.return_time >= #{startTime}
					]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
						AND b.return_time <= #{endTime}
					]]>
				</if>
				)


    ) t where 1=1
    <if test="note != null and note != ''">
      AND t.note = '逾期'
    </if>
  </select>


  <select id="balanceFinanceStatisticsTotalAmount" resultMap="BalanceFinanceStatisticsMap">
    SELECT
    case when SUM(t.balance) is not null then SUM(t.balance)else 0 end total_balance,
    case when SUM(t.finance_interest) is not null then SUM(t.finance_interest) else 0 end total_finance_interest
    FROM
    (
    SELECT
    f.id user_id,
    d.balance balance,
    f.user_name user_name,
    f.mobile mobile,
    a.pay_finsh_time update_time,
    concat("3.",f.id) customer_code,
    concat("60",a.product_order_no,d.id,a.id) order_no,
    CASE WHEN i.property_symbol = '7_DAI' AND SUBSTR(g.`code`,1,2) NOT IN('24') THEN
    CASE WHEN  a.type = 'LAST_RETURN' AND a.product_return_term = 1 THEN
    CASE WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.2*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.2,2) END
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term > 1 AND a.product_return_term != 12 THEN ROUND(d.balance*0.2*30/365,2)
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term = 12 THEN ROUND(d.balance*0.2*35/365,2)
    WHEN a.type = 'INTEREST_RETURN' THEN ROUND(d.balance*0.2*30/365,2)
    END
    WHEN i.property_symbol = '7_DAI' AND SUBSTR(g.`code`,1,2) IN ('24') THEN
    CASE WHEN  a.type = 'LAST_RETURN' AND a.product_return_term = 1 THEN
    CASE WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.18*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.18,2) END
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term > 1 AND a.product_return_term != 12 THEN ROUND(d.balance*0.2*30/365,2)
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term = 12 THEN ROUND(d.balance*0.2*35/365,2)
    WHEN a.type = 'INTEREST_RETURN' THEN ROUND(d.balance*0.2*30/365,2)
    END
    WHEN i.property_symbol = 'YUN_DAI' AND SUBSTR(g.`code`,1,2) in('14') THEN
    CASE WHEN  a.type = 'LAST_RETURN' AND a.product_return_term = 1 THEN
    CASE WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.2*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.2,2) END
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term > 1 AND a.product_return_term != 12 THEN ROUND(d.balance*0.2*30/365,2)
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term = 12 THEN ROUND(d.balance*0.2*35/365,2)
    WHEN a.type = 'INTEREST_RETURN' THEN ROUND(d.balance*0.2*30/365,2)
    END
    ELSE
    CASE WHEN  a.type = 'LAST_RETURN' AND a.product_return_term = 1 THEN
    CASE WHEN g.term &lt; 0 THEN  ROUND(d.balance*0.2*7/365,2)
    WHEN g.term > 0 AND g.term != 12 THEN  ROUND(d.balance*0.24*(g.term*30)/365,2)
    ELSE ROUND(d.balance*0.24,2) END
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term > 1 AND a.product_return_term != 12 THEN ROUND(d.balance*0.24*30/365,2)
    WHEN a.type = 'LAST_RETURN' AND a.product_return_term = 12 THEN ROUND(d.balance*0.24*35/365,2)
    WHEN a.type = 'INTEREST_RETURN' THEN ROUND(d.balance*0.24*30/365,2)
    END
    END
    finance_interest
    FROM
    bs_sys_receive_money a,
    bs_batch_buy b,
    bs_batch_buy_detail c,
    bs_sub_account d ,
    bs_account e,
    bs_user f,
    bs_product g LEFT JOIN bs_property_info i ON g.property_id = i.id
    WHERE
    a.product_order_no = b.send_batch_id
    AND b.id = c.batch_id
    AND c.sub_account_id = d.id
    AND d.account_id = e.id
    AND e.user_id = f.id
    AND d.product_id = g.id
    AND a.`status` = 'SUCC'
    AND d.interest_begin_date >= '2015-12-02 00:00:00'
    AND DATE(d.interest_begin_date) &lt;='2017-09-20'
    <if test="userName != null and userName != ''">
      AND f.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND f.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
						AND a.pay_finsh_time >= #{startTime}
					]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
						AND a.pay_finsh_time <= #{endTime}
					]]>
    </if>

    ) t
  </select>
  
	<!--   融资客户结算-赞分期（存管前） -->
  <select id="balanceFinanceStatisticsZan" resultMap="BalanceFinanceStatisticsMap">
    SELECT
    (@rowNO := @rowNo + 1) rowno,
    t.*,t.balance+t.finance_interest  finance_total_amount
    FROM
    (SELECT @rowNO := #{position}) b,
    (
    SELECT p3.user_id,p3.balance,p3.user_name,p3.mobile,p3.update_time,p3.customer_code,
    p3.order_no,p3.finance_interest,p3.property_code,p3.note,p3.total_amount,p3.serial_id,p3.period,
    p3.loan_id,p3.sum_finance_interest,p3.sum_finance_interest_all,p3.is_min FROM(
    select zan.*,bu.user_name,bu.mobile,case when min.loan_id is not null then 1 end as is_min
    from(
    SELECT lr.bs_user_id user_id,
    ROUND(ll.approve_amount/ll.period*(lr.total_amount/ll.approve_amount)-0.005,2) as balance,
    case when lrs.`status`='LATE_NOT' or lrs.`status`='LATE_REPAIED' then DATE_ADD(lrs.plan_date,INTERVAL 1 DAY) else
    DATE_FORMAT(lre.done_time, '%Y-%m-%d') end as update_time,
    concat("3.",lr.bs_user_id) customer_code,
    concat("61","00",lr.id,"00",lr.loan_id,"00",lrs.serial_id) order_no,
    ROUND(ll.approve_amount*0.15*(ll.period+1)/(ll.period*24)*(lr.total_amount/ll.approve_amount)-0.005,2) as
    finance_interest,
    '1.3' property_code,
    case when lrs.`status`!='REPAIED' then '逾期' end note,
    lr.total_amount,
    lrs.serial_id,
    ll.period,
    ll.id as loan_id,
    ROUND(ll.approve_amount*0.15*(ll.period+1)/(ll.period*24)-0.005,2) as sum_finance_interest,
    case when lrs.serial_id=ll.period then ROUND(ll.approve_amount*0.15*(ll.period+1)/24-0.005,2) end as
    sum_finance_interest_all
    from ln_loan_relation lr,ln_loan ll,
    (
    	SELECT * FROM ln_repay_schedule a WHERE   
    	a.`status` != 'INIT'  AND  a.`status` != 'PART_REPAY'  
    	AND  IF(`status` IN ('LATE_NOT', 'LATE_REPAIED'),
		DATE_ADD(a.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
		AND DATE_ADD(a.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d')
		,1=1)
	) lrs LEFT JOIN ln_repay lre on lre.repay_plan_id = lrs.id and lre.`status`='REPAIED',
	ln_user lu
    where lr.loan_id = ll.id and ll.id = lrs.loan_id
    AND ll.ln_user_id = lu.id AND lu.partner_code = 'ZAN'
    and lr.`status` in ('REPAID','SUCCESS')
    and lrs.`status` not in( 'INIT','PART_REPAY')
  	AND DATE(lr.create_time) &lt;='2017-09-19'
    AND IF(lrs.`status` in( 'LATE_NOT','LATE_REPAIED'),
    DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(
    #{startTime},
    '%Y-%m-%d'
    )
    AND DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(
    #{endTime},
    '%Y-%m-%d'
    ),
    DATE_FORMAT(lre.done_time, '%Y-%m-%d') >= DATE_FORMAT(
    #{startTime},
    '%Y-%m-%d'
    )
    AND DATE_FORMAT(lre.done_time, '%Y-%m-%d') &lt;= DATE_FORMAT(
    #{endTime},
    '%Y-%m-%d'
    ))
    )zan
    LEFT JOIN
    (   SELECT
    min(ROUND(ll.approve_amount*0.15*(ll.
    period+1)/(ll.period*24)*(
    lr.total_amount/ll.approve_amount)-0.005,2)) as
    finance_interest,
    lr.total_amount,lrs.
    serial_id,ll.period,ll.id as loan_id
    from ln_loan_relation lr,ln_loan ll,ln_user lu,
    (
    	SELECT * FROM ln_repay_schedule a WHERE   
    	a.`status` != 'INIT'  AND  a.`status` != 'PART_REPAY'  
    	AND  IF(`status` IN ('LATE_NOT', 'LATE_REPAIED'),
		DATE_ADD(a.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
		AND DATE_ADD(a.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d')
		,1=1)
    )
    lrs LEFT JOIN ln_repay
    lre on lre.repay_plan_id = lrs.id and lre.`status`
    ='REPAIED'
    where lr.loan_id = ll.id and ll.id = lrs.loan_id
    AND ll.ln_user_id = lu.id and lu.partner_code = 'ZAN'
    and lr.`status` in( 'REPAID','SUCCESS')
    and lrs.`status` not in( 'INIT','PART_REPAY')
    AND DATE(lr.create_time) &lt;='2017-09-19'
    AND IF(lrs.`status` in( 'LATE_NOT','LATE_REPAIED'),
    DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(
    #{startTime},
    '%Y-%m-%d'
    )
    AND DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(
    #{endTime},
    '%Y-%m-%d'
    ),
    DATE_FORMAT(lre.done_time, '%Y-%m-%d') >= DATE_FORMAT(
    #{startTime},
    '%Y-%m-%d'
    )
    AND DATE_FORMAT(lre.done_time, '%Y-%m-%d') &lt;= DATE_FORMAT(
    #{endTime},
    '%Y-%m-%d'
    ))
    GROUP BY
    serial_id,period,loan_id
    ) min on zan.loan_id = min.loan_id
    and zan.serial_id = min.serial_id
    and zan.finance_interest = min.finance_interest,
    bs_user bu
    where
    bu.id=zan.user_id
    <if test="userName != null and userName != ''">
      AND bu.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test=" mobile != null and mobile != ''">
      AND bu.mobile like concat(concat('%', #{mobile}),'%')
    </if>
    ORDER BY update_time DESC,loan_id,serial_id asc,finance_interest DESC
	)p3
    ) t where 1=1
    <if test="note != null and note != ''">
      AND t.note = '逾期'
    </if>
    LIMIT #{position}, #{offset}
  </select>

  <select id="balanceFinanceStatisticsZanCount" resultType="java.lang.Integer">
    SELECT
    COUNT(*)
    FROM
    (
    select zan.user_id, zan.balance, NULL as user_name, NULL as mobile, zan.update_time, zan.customer_code, zan.order_no, zan.finance_interest, zan.note
    from(
    SELECT lr.bs_user_id user_id,
    ROUND(ll.approve_amount/ll.period*(lr.total_amount/ll.approve_amount)-0.005,2) as balance,
    NULL as user_name, NULL as mobile,
    case when lrs.`status`='LATE_NOT' or lrs.`status`='LATE_REPAIED' then DATE_ADD(lrs.plan_date,INTERVAL 1 DAY) else
    DATE_FORMAT(lre.done_time, '%Y-%m-%d') end as update_time,
    concat("3.",lr.bs_user_id) customer_code,
    concat("61","00",lr.id,"00",lr.loan_id,"00",lrs.serial_id) order_no,
    ROUND(ll.approve_amount*0.15*(ll.period+1)/(ll.period*24)*(lr.total_amount/ll.approve_amount)-0.005,2) as
    finance_interest,
    NULL as note
    from ln_loan_relation lr,ln_loan ll,
    (
    	SELECT * FROM ln_repay_schedule a WHERE   
    	a.`status` != 'INIT'  AND  a.`status` != 'PART_REPAY'  
    	AND  IF(`status` IN ('LATE_NOT', 'LATE_REPAIED'),
		DATE_ADD(a.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
		AND DATE_ADD(a.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d')
		,1=1)
    ) lrs LEFT JOIN ln_repay lre on lre.repay_plan_id = lrs.id and lre.`status`='REPAIED',
	ln_user lu
    where lr.loan_id = ll.id and ll.id = lrs.loan_id
    AND ll.ln_user_id = lu.id AND lu.partner_code = 'ZAN'
    and lr.`status` in ('REPAID','SUCCESS')
    and lrs.`status` not in( 'INIT','PART_REPAY')
	AND DATE(lr.create_time) &lt;='2017-09-19'
    AND IF(lrs.`status` in( 'LATE_NOT','LATE_REPAIED'),
    DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(
    #{startTime},
    '%Y-%m-%d'
    )
    AND DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(
    #{endTime},
    '%Y-%m-%d'
    ),
    DATE_FORMAT(lre.done_time, '%Y-%m-%d') >= DATE_FORMAT(
    #{startTime},
    '%Y-%m-%d'
    )
    AND DATE_FORMAT(lre.done_time, '%Y-%m-%d') &lt;= DATE_FORMAT(
    #{endTime},
    '%Y-%m-%d'
    ))
    )zan,
    bs_user bu
    where
    bu.id=zan.user_id
    <if test="userName != null and userName != ''">
      AND bu.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test=" mobile != null and mobile != ''">
      AND bu.mobile like concat(concat('%', #{mobile}),'%')
    </if>
    ) t where 1=1
    <if test="note != null and note != ''">
      AND t.note = '逾期'
    </if>
  </select>


  <select id="balanceFinanceStatisticsZanTotalAmount" resultMap="BalanceFinanceStatisticsMap">
    SELECT
     0 total_balance,
     0 total_finance_interest
   
  </select>
  
<!--  融资客户结算 E --> 	


<!--  7贷投资利息线下结算（4%） S -->
 <select id="financeInterestOffline7Dai" resultMap="FinanceInterestOffline7DaiMap">
  	SELECT
		(@rowNO := @rowNo + 1) rowno,
		t.*,cast(t.balance+t.finance_interest AS decimal(10,2))  finance_total_amount,
		t.start_date update_time
	FROM
		(SELECT @rowNO := #{position}) b,
		(
			SELECT 
			*,
			cast(ta.balance*(datediff(ta.interest_end_date,ta.interest_begin_date)+1)*0.04/365 as decimal(10,2))  finance_interest,
			datediff(ta.interest_end_date,ta.interest_begin_date)+1 finance_interest_days
			FROM (
					SELECT
							p.user_id,
							a.balance,
							p.user_name,
							p.mobile,
							concat("3.",p.user_id) customer_code,
							concat("62",p.order_no) order_no,
							CASE WHEN e.property_symbol = '7_DAI' THEN
								'1.2'
							ELSE
								'1.1'
							END 
							property_code,
							CASE WHEN a.interest_begin_date &gt; DATE(#{startTime}) THEN a.interest_begin_date 
							ELSE DATE(#{startTime}) END interest_begin_date,
							CASE WHEN 
									date_add(a.last_finish_interest_date, interval -1 day) &lt; DATE(#{endTime})
							THEN 
									date_add(a.last_finish_interest_date, interval -1 day)
							ELSE DATE(#{endTime}) END interest_end_date,
			
							a.interest_begin_date  start_date,
							a.last_finish_interest_date  end_date 
			
						FROM
							bs_pay_orders p
							LEFT JOIN bs_sub_account a ON  p.sub_account_id = a.id
							LEFT JOIN bs_product d ON a.product_id = d.id
							LEFT JOIN bs_property_info e ON d.property_id = e.id
						WHERE
						p.`status` = 6
						AND (p.trans_type = 'CARD_BUY_PRODUCT' OR p.trans_type = 'BALANCE_BUY_PRODUCT')
						AND  e.property_symbol = '7_DAI'
						AND  a.interest_begin_date &gt;= '2015-12-02 00:00:00'
						AND a.interest_begin_date &lt;=  DATE(#{endTime})
						<if test="userName != null and userName != ''"> 
							AND p.user_name like concat(concat('%', #{userName}),'%')
						</if>
						<if test="mobile != null and mobile != ''"> 
							AND p.mobile  like concat(concat('%', #{mobile}),'%')
						</if>
					
			) ta
			WHERE ta.end_date &gt;= DATE(#{startTime})
			
		) t LIMIT #{position}, #{offset}
  </select>
  
  <select id="financeInterestOffline7DaiCount" resultType="java.lang.Integer">
  	SELECT
		COUNT(*)
	FROM
	(
			SELECT 
			*,
			cast(ta.balance*(datediff(ta.interest_end_date,ta.interest_begin_date)+1)*0.04/365 as decimal(10,2))   finance_interest,
			datediff(ta.interest_end_date,ta.interest_begin_date)+1 finance_interest_days
			FROM (
					SELECT
							p.user_id,
							a.balance,
							p.user_name,
							p.mobile,
							concat("3.",p.user_id) customer_code,
							concat("62",p.order_no) order_no,
							CASE WHEN e.property_symbol = '7_DAI' THEN
								'1.2'
							ELSE
								'1.1'
							END 
							property_code,
							CASE WHEN a.interest_begin_date &gt; DATE(#{startTime}) THEN a.interest_begin_date 
							ELSE DATE(#{startTime}) END interest_begin_date,
							CASE WHEN 
									date_add(a.last_finish_interest_date, interval -1 day) &lt; DATE(#{endTime})
							THEN 
									date_add(a.last_finish_interest_date, interval -1 day)
							ELSE DATE(#{endTime}) END interest_end_date,
			
							a.interest_begin_date  start_date,
							a.last_finish_interest_date  end_date
			
						FROM
							bs_pay_orders p
							LEFT JOIN bs_sub_account a ON  p.sub_account_id = a.id
							LEFT JOIN bs_product d ON a.product_id = d.id
							LEFT JOIN bs_property_info e ON d.property_id = e.id
						WHERE
						p.`status` = 6
						AND (p.trans_type = 'CARD_BUY_PRODUCT' OR p.trans_type = 'BALANCE_BUY_PRODUCT')
						AND  e.property_symbol = '7_DAI'
						AND  a.interest_begin_date &gt;= '2015-12-02 00:00:00'
						AND a.interest_begin_date &lt;=  DATE(#{endTime})
						<if test="userName != null and userName != ''"> 
							AND p.user_name like concat(concat('%', #{userName}),'%')
						</if>
						<if test="mobile != null and mobile != ''"> 
							AND p.mobile  like concat(concat('%', #{mobile}),'%')
						</if>
					
			) ta
			WHERE ta.end_date &gt;= DATE(#{startTime})
	) t
  </select>

    <select id="financeInterestOffline7DaiTotalAmount" resultMap="FinanceInterestOffline7DaiMap">
  	SELECT
		cast(SUM(t.balance) as decimal(10,2)) total_balance,
		cast(SUM(t.finance_interest) as decimal(10,2)) total_finance_interest
	FROM
	(
			SELECT
			*,
			cast(ta.balance*(datediff(ta.interest_end_date,ta.interest_begin_date)+1)*0.04/365 as decimal(10,2))   finance_interest,
			datediff(ta.interest_end_date,ta.interest_begin_date)+1 finance_interest_days
			FROM (
					SELECT
							p.user_id,
							a.balance,
							p.user_name,
							p.mobile,
							concat("3.",p.user_id) customer_code,
							concat("62",p.order_no) order_no,
							CASE WHEN e.property_symbol = '7_DAI' THEN
								'1.2'
							ELSE
								'1.1'
							END 
							property_code,
							CASE WHEN a.interest_begin_date &gt; DATE(#{startTime}) THEN a.interest_begin_date 
							ELSE DATE(#{startTime}) END interest_begin_date,
							CASE WHEN 
									date_add(a.last_finish_interest_date, interval -1 day)  &lt; DATE(#{endTime})
							THEN 
									date_add(a.last_finish_interest_date, interval -1 day)
							ELSE DATE(#{endTime}) END interest_end_date,
							a.interest_begin_date  start_date,
							a.last_finish_interest_date  end_date
			
						FROM
							bs_pay_orders p
							LEFT JOIN bs_sub_account a ON  p.sub_account_id = a.id
							LEFT JOIN bs_product d ON a.product_id = d.id
							LEFT JOIN bs_property_info e ON d.property_id = e.id
						WHERE
						p.`status` = 6
						AND (p.trans_type = 'CARD_BUY_PRODUCT' OR p.trans_type = 'BALANCE_BUY_PRODUCT')
						AND  e.property_symbol = '7_DAI'
						AND  a.interest_begin_date &gt;= '2015-12-02 00:00:00'
						AND a.interest_begin_date &lt;=  DATE(#{endTime})
						<if test="userName != null and userName != ''"> 
							AND p.user_name like concat(concat('%', #{userName}),'%')
						</if>
						<if test="mobile != null and mobile != ''"> 
							AND p.mobile  like concat(concat('%', #{mobile}),'%')
						</if>
					
			) ta
			WHERE ta.end_date &gt;= DATE(#{startTime})
	) t
  </select>
  
  <select id="selectPayOrdersByUserId" parameterType="java.util.Map" resultMap="BaseResultMapVO">
  	SELECT
	ag.agent_name agentName,
	s.sales_name saleName,
	e.strName managerName,
	bu.user_name recommendName,
	b.amount amount,
	b.status status,
	b.return_msg returnMsg,
	b.bank_name bankName,
	b.order_no orderNo,
	b.trans_type,
	b.create_time,
	b.update_time
	FROM bs_pay_orders b LEFT JOIN bs_user u ON b.user_id = u.id LEFT JOIN bs_agent ag ON u.agent_id = ag.id
	LEFT JOIN bs_sub_account sa ON sa.id = b.sub_account_id LEFT JOIN bs_product p ON p.id = sa.product_id
	LEFT JOIN bs_user bu ON u.recommend_id=bu.id
	LEFT JOIN bs_user_sales us ON u.id=us.user_id
	LEFT JOIN bs_sales s ON s.id=us.sales_id
	LEFT JOIN bs_user_customer_manager cm ON cm.user_id=u.id
	LEFT JOIN tbemployee e ON e.lUserId =cm.customer_manager_dafy_id
	WHERE b.user_id = #{userId}
	ORDER BY b.create_time DESC
  </select>

<!-- 7贷投资利息线下结算（4%） E -->

<!-- =============================赞分期营收代收代付S ======================== -->
   <resultMap id="RevenueCollectionRepayMap" type="com.pinting.business.model.vo.RevenueCollectionRepayVO">
      <result column="rowno" jdbcType="INTEGER" property="rowno" />
      <result column="user_name" jdbcType="VARCHAR" property="userName" />
      <result column="mobile" jdbcType="VARCHAR" property="mobile" />
      <result column="type" jdbcType="VARCHAR" property="type" />
      <result column="revenue_collection" jdbcType="DOUBLE" property="revenueCollection" />
      <result column="revenue_pay" jdbcType="DOUBLE" property="revenuePay" />
      <result column="settle_date" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
 
 
 <select id="revenueCollectionRepayList" resultMap="RevenueCollectionRepayMap">
  	SELECT
		(@rowNO := @rowNo + 1) rowno,
		t.*
	FROM
		(SELECT @rowNO := #{position}) b,
		(
			SELECT
				'-'  user_name,
				'-'  mobile,
				'LIQUIDATION'	type,
				''	revenue_collection,
				a.amount	revenue_pay,
				a.create_time	settle_date
			FROM
				`bs_revenue_trans_record` a
			WHERE 
				a.`status`  = 'SUCCESS'
			
			
			UNION ALL
			
			SELECT 
				bb.user_name  user_name,
				bb.mobile  mobile,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN 'REVENUE' 
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN  'ADVANCE' 
				END	type,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN b.revenue_amount
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN b.repay_amount
				END revenue_collection,
				''	revenue_pay,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN DATE_ADD(b.create_time, INTERVAL -1 DAY)	
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN b.create_time	
				END settle_date
			FROM
			bs_revenue_trans_detail b,
			ln_loan ba,
			ln_user bb
			WHERE
			b.loan_id = ba.id
			AND ba.ln_user_id = bb.id
			AND b.trans_type = 'REVENUE_INCOME' 
			AND b.partner_code = 'ZAN'
			AND b.repay_id is not null
			UNION ALL
			
			SELECT 
				bb.user_name  user_name,
				bb.mobile  mobile,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN 'REVENUE' 
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN  'ADVANCE' 
				END	type,
				'' revenue_collection,
				b.revenue_amount	revenue_pay,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN DATE_ADD(b.create_time, INTERVAL -1 DAY)	
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN b.create_time	
				END settle_date
			FROM
			bs_revenue_trans_detail b,
			ln_loan ba,
			ln_user bb
			WHERE
			b.loan_id = ba.id
			AND ba.ln_user_id = bb.id
			AND b.trans_type = 'REVENUE_DEDUCT'  
			AND b.partner_code = 'ZAN'
			UNION ALL

			SELECT 
				'-'  user_name,
				'-'  mobile,
				'COMPENSATION'	type,
				CASE WHEN c.revenue_amount &lt; 0 THEN -c.revenue_amount ELSE  '' END	revenue_collection,
				CASE WHEN c.revenue_amount > 0 THEN c.revenue_amount ELSE  '' END	revenue_pay,
				c.create_time	settle_date
			FROM
			bs_revenue_trans_detail c
			WHERE c.partner_code = 'ZAN'
			AND c.trans_type = 'REVENUE_DEDUCT'
			
			
		) t WHERE 1=1
		
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
		LIMIT #{position}, #{offset}
  </select>
  
  
  
 <select id="revenueCollectionRepayCount" resultType="java.lang.Integer">
		SELECT 
			COUNT(*)
		FROM
		(
			SELECT
				'-'  user_name,
				'-'  mobile,
				'LIQUIDATION'	type,
				''	revenue_collection,
				a.amount	revenue_pay,
				a.create_time	settle_date
			FROM
				`bs_revenue_trans_record` a
			WHERE 
				a.`status`  = 'SUCCESS'
			
			UNION ALL
			
			SELECT 
				bb.user_name  user_name,
				bb.mobile  mobile,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN 'REVENUE' 
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN  'ADVANCE' 
				END	type,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN b.revenue_amount
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN b.repay_amount
				END revenue_collection,
				''	revenue_pay,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN DATE_ADD(b.create_time, INTERVAL -1 DAY)	
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN b.create_time	
				END settle_date
			FROM
			bs_revenue_trans_detail b,
			ln_loan ba,
			ln_user bb
			WHERE
			b.loan_id = ba.id
			AND ba.ln_user_id = bb.id
			AND b.trans_type = 'REVENUE_INCOME' 
			AND b.partner_code = 'ZAN'
			AND b.repay_id is not null
			UNION ALL
			
			SELECT 
				bb.user_name  user_name,
				bb.mobile  mobile,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN 'REVENUE' 
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN  'ADVANCE' 
				END	type,
				'' revenue_collection,
				b.revenue_amount	revenue_pay,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN DATE_ADD(b.create_time, INTERVAL -1 DAY)	
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN b.create_time	
				END settle_date
			FROM
			bs_revenue_trans_detail b,
			ln_loan ba,
			ln_user bb
			WHERE
			b.loan_id = ba.id
			AND ba.ln_user_id = bb.id
			AND b.trans_type = 'REVENUE_DEDUCT'  
			AND b.partner_code = 'ZAN'
		) t WHERE 1=1
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
		
 </select>
 
 
 
<select id="revenueCollectionRepaySum" resultType="java.lang.Double">
		
	<if test="revenueType != null and revenueType != '' and revenueType == 'REVENUE_COLLECTION'"> 
					
		SELECT 
			SUM(t.revenue_collection)
		FROM
		(
			SELECT
				'-'  user_name,
				'-'  mobile,
				'LIQUIDATION'	type,
				''	revenue_collection,
				a.amount	revenue_pay,
				a.create_time	settle_date
			FROM
				`bs_revenue_trans_record` a
			WHERE 
				a.`status`  = 'SUCCESS'
			
			UNION ALL
			
			SELECT 
				bb.user_name  user_name,
				bb.mobile  mobile,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN 'REVENUE' 
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN  'ADVANCE' 
				END	type,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN b.revenue_amount
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN b.repay_amount
				END revenue_collection,
				''	revenue_pay,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN DATE_ADD(b.create_time, INTERVAL -1 DAY)	
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN b.create_time	
				END settle_date
			FROM
			bs_revenue_trans_detail b,
			ln_loan ba,
			ln_user bb
			WHERE
			b.loan_id = ba.id
			AND ba.ln_user_id = bb.id
			AND b.trans_type = 'REVENUE_INCOME' 
			AND b.partner_code = 'ZAN'
			UNION ALL
			
			SELECT 
				bb.user_name  user_name,
				bb.mobile  mobile,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN 'REVENUE' 
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN  'ADVANCE' 
				END	type,
				'' revenue_collection,
				b.revenue_amount	revenue_pay,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN DATE_ADD(b.create_time, INTERVAL -1 DAY)	
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN b.create_time	
				END settle_date
			FROM
			bs_revenue_trans_detail b,
			ln_loan ba,
			ln_user bb
			WHERE
			b.loan_id = ba.id
			AND ba.ln_user_id = bb.id
			AND b.trans_type = 'REVENUE_DEDUCT'  
			AND b.partner_code = 'ZAN'
		) t WHERE 1=1
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
	</if>
	
	
	<if test="revenueType != null and revenueType != '' and revenueType == 'REVENUE_PAY'"> 
					
		SELECT 
			SUM(t.revenue_pay)
		FROM
		(
			SELECT
				'-'  user_name,
				'-'  mobile,
				'LIQUIDATION'	type,
				''	revenue_collection,
				a.amount	revenue_pay,
				a.create_time	settle_date
			FROM
				`bs_revenue_trans_record` a
			WHERE 
				a.`status`  = 'SUCCESS'
			
			UNION ALL
			
			SELECT 
				bb.user_name  user_name,
				bb.mobile  mobile,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN 'REVENUE' 
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN  'ADVANCE' 
				END	type,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN b.revenue_amount
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN b.repay_amount
				END revenue_collection,
				''	revenue_pay,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN DATE_ADD(b.create_time, INTERVAL -1 DAY)	
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN b.create_time	
				END settle_date
			FROM
			bs_revenue_trans_detail b,
			ln_repay ba,
			ln_user bb
			WHERE
			b.repay_id = ba.id
			AND ba.ln_user_id = bb.id
			AND b.trans_type = 'REVENUE_INCOME' 
			AND b.repay_id is not null
			AND b.partner_code = 'ZAN'
			UNION ALL
			
			SELECT 
				bb.user_name  user_name,
				bb.mobile  mobile,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN 'REVENUE' 
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN  'ADVANCE' 
				END	type,
				'' revenue_collection,
				b.revenue_amount	revenue_pay,
				CASE WHEN b.trans_type = 'REVENUE_INCOME' 
				THEN DATE_ADD(b.create_time, INTERVAL -1 DAY)	
				WHEN   b.trans_type = 'REVENUE_DEDUCT'  
				THEN b.create_time	
				END settle_date
			FROM
			bs_revenue_trans_detail b,
			ln_loan ba,
			ln_user bb
			WHERE
			b.loan_id = ba.id
			AND ba.ln_user_id = bb.id
			AND b.trans_type = 'REVENUE_DEDUCT'  
			AND b.partner_code = 'ZAN'
		) t WHERE 1=1
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
	</if>	

		
 </select>
 
  
<!-- =============================赞分期营收代收代付E ======================== -->


    <select id="sumWithdrawUpperLimit" parameterType="java.util.Map" resultType="java.lang.Double">
        SELECT amount1 + amount2 FROM (
            SELECT CASE WHEN SUM(o.amount) IS NULL THEN 0 ELSE SUM(o.amount) END AS amount1
            FROM bs_pay_orders o WHERE o.user_id = #{userId} AND
            (
              (o.`status` = 5) OR (o.`status` = 6 AND DATE(o.update_time) = DATE(NOW()) )
            )
            AND (o.trans_type = 'RETURN_2_USER_BANK_CARD' OR o.trans_type = 'BALANCE_WITHDRAW')
        ) aa JOIN (
            SELECT CASE WHEN SUM(a.amount) IS NULL THEN 0 ELSE SUM(a.amount) END AS amount2
            FROM bs_withdraw_check a WHERE a.`status` = 'TO_CHECK' AND a.user_id = #{userId} AND DATE(a.create_time) = DATE(NOW())
        ) AS bb
    </select>
    
    <!-- 当日已提现+目前提现中+目前审核中 的金额 -->
    <select id="sumWithdrawCheckAmount" parameterType="java.util.Map" resultType="java.lang.Double">
        SELECT amount1 + amount2 FROM (
            SELECT
			  CASE WHEN SUM(oo.amount+f.done_fee) IS NULL THEN 0 ELSE SUM(oo.amount+f.done_fee) END AS amount1
			FROM
		    (
				SELECT o.amount, o.order_no
                FROM bs_pay_orders o WHERE o.user_id = #{userId}  AND o.trans_type = 'BALANCE_WITHDRAW'
                AND (
                    (o.`status` = 5) OR (o.`status` = 6 AND DATE(o.update_time) = DATE(NOW()) )
                )
			) oo  LEFT JOIN bs_service_fee f ON oo.order_no=f.order_no
        ) aa JOIN (
            SELECT CASE WHEN SUM(a.amount) IS NULL THEN 0 ELSE SUM(a.amount) END AS amount2
            FROM bs_withdraw_check a WHERE a.`status` = 'TO_CHECK' AND a.user_id = #{userId}
        ) AS bb
    </select>
    
    
    <!-- 今天充值成功-今天余额购买 -->
    <select id="topUpSubBuyBalanceToday" parameterType="java.util.Map" resultType="java.lang.Double">
        SELECT amount1 - amount2 FROM (
            SELECT CASE WHEN SUM(o.amount) IS NULL THEN 0 ELSE SUM(o.amount) END AS amount1
            FROM bs_pay_orders o WHERE o.user_id = #{userId}  AND o.trans_type = 'TOP_UP'
            AND o.`status` = 6 AND DATE(o.update_time) = DATE(NOW())
        ) aa JOIN (
            SELECT CASE WHEN SUM(a.amount) IS NULL THEN 0 ELSE SUM(a.amount) END AS amount2
            FROM bs_pay_orders a WHERE a.user_id = #{userId}  AND a.trans_type = 'BALANCE_BUY_PRODUCT'
            AND a.`status` = 6 AND DATE(a.update_time) = DATE(NOW())
        ) AS bb
    </select>

    <select id="selectByPKForLock" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select * from bs_pay_orders where id = #{id} for update
    </select>

    <resultMap id="HFBankPayOrderMap" type="com.pinting.business.model.vo.HFBankPayOrderVO">
        <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="amount" jdbcType="DOUBLE" property="amount" />
        <result column="trans_type" jdbcType="VARCHAR" property="transType" />
        <result column="note" jdbcType="VARCHAR" property="note" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
    </resultMap>

    <resultMap id="HFBankHeadFeeTransferMap" type="com.pinting.business.model.vo.HFBankHeadFeeTransferVO">
      <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
      <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
      <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
      <result column="amount" jdbcType="DOUBLE" property="amount" />
      <result column="trans_type" jdbcType="VARCHAR" property="transType" />
      <result column="note" jdbcType="VARCHAR" property="note" />
      <result column="status" jdbcType="INTEGER" property="status" />
      <result column="user_name" jdbcType="VARCHAR" property="userName" />
    </resultMap>
    
    <select id="selectHFBankSysTopUp" parameterType="com.pinting.business.model.vo.HFBankPayOrderVO" resultMap="HFBankPayOrderMap">
        SELECT
            order_no, create_time, update_time, amount, trans_type, note, status, user_name
        FROM bs_pay_orders
        WHERE trans_type = 'HFBANK_SYS_TOP_UP' AND status IN (5, 6, 7)
        ORDER BY create_time DESC
        <include refid="sql-global.pagination" />
    </select>

    <select id="selectHFBankSysTopUpCount" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM bs_pay_orders
        WHERE trans_type = 'HFBANK_SYS_TOP_UP' AND  status IN (5, 6, 7)
    </select>

    <select id="selectHFBankSysWithdraw" parameterType="com.pinting.business.model.vo.HFBankPayOrderVO" resultMap="HFBankPayOrderMap">
        SELECT
        order_no, create_time, update_time, amount, trans_type, note, status, user_name
        FROM bs_pay_orders
        WHERE trans_type = 'HFBANK_SYS_WITHDRAW' AND status IN (5, 6, 7)
        ORDER BY create_time DESC
        <include refid="sql-global.pagination" />
    </select>

    <select id="selectHFBankSysWithdrawCount" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM bs_pay_orders
        WHERE trans_type = 'HFBANK_SYS_WITHDRAW' AND status IN (5, 6, 7)
    </select>

    <select id="selectHFBankSysAccountTransfer" parameterType="com.pinting.business.model.vo.HFBankPayOrderVO" resultMap="HFBankPayOrderMap">
        SELECT
        order_no, create_time, update_time, amount, trans_type, note, status, user_name
        FROM bs_pay_orders
        WHERE trans_type = 'HFBANK_SYS_ACCOUNT_TRANSFER' AND status IN (5, 6, 7)
        ORDER BY create_time DESC
        <include refid="sql-global.pagination" />
    </select>
	
    <select id="selectHFBankSysAccountTransferCount" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM bs_pay_orders
        WHERE trans_type = 'HFBANK_SYS_ACCOUNT_TRANSFER' AND status IN (5, 6, 7)
    </select>
	
	<!-- 云贷砍头息划转列表 -->
	<select id="selectYunHeadFeeTransfer" parameterType="com.pinting.business.model.vo.HFBankHeadFeeTransferVO" resultMap="HFBankHeadFeeTransferMap">
        SELECT
        order_no, create_time, update_time, amount, trans_type, note, status, user_name
        FROM bs_pay_orders
        WHERE trans_type in ('HFBANK_YUN_HEAD_FEE_TRANSFER', 'HFBANK_ZSD_HEAD_FEE_TRANSFER') AND status IN (6, 7)
        ORDER BY create_time DESC
        <include refid="sql-global.pagination" />
    </select>
    
    <!-- 云贷砍头息划转统计 -->
    <select id="selectYunHeadFeeTransferCount" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM bs_pay_orders
        WHERE trans_type in ('HFBANK_YUN_HEAD_FEE_TRANSFER', 'HFBANK_ZSD_HEAD_FEE_TRANSFER') AND status IN (6, 7)
    </select>
    
    <select id="selectZanCompensateList" parameterType="com.pinting.business.model.vo.HFBankPayOrderVO" resultMap="HFBankPayOrderMap">
        SELECT
          a.order_no, a.create_time, a.update_time, ABS(a.amount) AS amount, a.trans_type, a.trans_status AS status
        FROM bs_user_trans_detail a , bs_sys_config config
        WHERE config.conf_key = 'ZAN_COMPENSATE_USER_ID'
        AND a.user_id = config.conf_value
        AND a.trans_type IN ('TOP_UP', 'DEP_WITHDRAW')
        AND a.trans_status IN (1, 2, 3)
        ORDER BY create_time DESC
        <include refid="sql-global.pagination" />
    </select>
    
    <select id="selectZanCompensateCount" resultType="java.lang.Integer">
        SELECT
		  COUNT(*)
        FROM bs_user_trans_detail a , bs_sys_config config
        WHERE config.conf_key = 'ZAN_COMPENSATE_USER_ID'
        AND a.user_id = config.conf_value
        AND a.trans_type IN ('TOP_UP', 'DEP_WITHDRAW')
        AND a.trans_status IN (1, 2, 3)
    </select>

    <select id="selectFailRedPacketTransfer" resultMap="BaseResultMap">
        SELECT aa.* FROM (
              SELECT a.*
              FROM bs_pay_orders a, bs_sub_account red, bs_sub_account_pair p, bs_sub_account auth_yun
              WHERE a.trans_type = 'RED_PACKET_USED' AND red.id = a.sub_account_id AND p.red_account_id = red.id
              AND auth_yun.id = p.auth_account_id AND auth_yun.`status` NOT IN (1, 6)
              AND DATE(a.update_time) BETWEEN DATE(ADDDATE(NOW(), -1)) AND DATE(NOW())
              ORDER BY a.update_time DESC
        ) aa
        GROUP BY aa.sub_account_id HAVING aa.`status` = 7
    </select>

    <select id="selectHFBankAdvanceTransferCount" resultType="java.lang.Integer">
      SELECT
      COUNT(*)
      FROM bs_pay_orders
      WHERE trans_type = 'HFBANK_ADVANCE_TRANSFER' AND status IN (5, 6, 7)
    </select>

    <select id="selectHFBankAdvanceTransfer" parameterType="com.pinting.business.model.vo.HFBankPayOrderVO" resultMap="HFBankPayOrderMap">
      SELECT
      order_no, create_time, update_time, amount, trans_type, note, status, user_name
      FROM bs_pay_orders
      WHERE trans_type = 'HFBANK_ADVANCE_TRANSFER' AND status IN (5, 6, 7)
      ORDER BY create_time DESC
      <include refid="sql-global.pagination" />
    </select>


<!-- =============================云贷营收代收代付S ======================== -->
 
 <select id="revenueCollectionRepayYunList" resultMap="RevenueCollectionRepayMap">
  	SELECT
		(@rowNO := @rowNo + 1) rowno,
		t.*
	FROM
		(SELECT @rowNO := #{position}) b,
		(
			-- 云贷营收
			SELECT 
				bb.user_name  user_name,
				bb.mobile  mobile,
				'REVENUE'	type,
				b.revenue_amount revenue_collection,
				''	revenue_pay,
				DATE_ADD(b.create_time, INTERVAL -1 DAY) settle_date
			FROM
			bs_revenue_trans_detail b,
			ln_loan ba,
			ln_user bb
			WHERE
			b.loan_id = ba.id
			AND ba.ln_user_id = bb.id
			AND b.trans_type = 'REVENUE_INCOME' 
			AND b.partner_code = 'YUN_DAI_SELF'

			UNION ALL
			-- 重复还款
			SELECT 
				cc.user_name  user_name,
				cc.mobile  mobile,
				'REPEAT_REPAY'	type,
				c.repay_amount	revenue_collection,
				''	revenue_pay,
				c.settle_date	settle_date
			FROM 
			ln_repeat_repay_record c,
			ln_repay_schedule ca,
			ln_loan cb,
			ln_user cc
			WHERE 
			c.repay_plan_id = ca.id
			AND ca.loan_id = cb.id
			AND cb.ln_user_id = cc.id
			AND c.partner_code = 'YUN_DAI_SELF'

			UNION ALL
			-- 补息
			SELECT 
				db.user_name  user_name,
				db.mobile  mobile,
				'FILL_INTEREST'	type,
				''	revenue_collection,
				d.amount	revenue_pay,
				d.fill_date	settle_date
			FROM 
			ln_account_fill_detail d,
			ln_repay da,
			ln_user db
			WHERE 
			d.relative_no = da.id
			AND da.ln_user_id = db.id
			AND d.partner_code = 'YUN_DAI_SELF'
			AND d.fill_type = 'INTEREST'
			AND d.`status` = 'SUCCESS'
			UNION ALL
			-- 补账
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'FILL_ACCOUNT'	type,
				e.amount	revenue_collection,
				''	revenue_pay,
				e.fill_date	settle_date
			FROM 
			ln_account_fill e
			WHERE
			e.`status` = 'SUCCESS'
			UNION ALL
			-- 重复还款清算
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'REPEAT_REPAY_SETTLE'	type,
				''	revenue_collection,
				SUM(f.repay_amount)	revenue_pay,
				f.settle_date	settle_date
			FROM 
			ln_repeat_repay_record f
			WHERE 
			f.partner_code = 'YUN_DAI_SELF'
			AND f.`status` = 'SUCC'
			GROUP BY f.settle_date 
			
			UNION ALL
			-- 营收清算
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'REPAY_REVENUE'	type,
				''	revenue_collection,
				g.amount	revenue_pay,
				g.settle_date	settle_date
			FROM 
			bs_revenue_trans_record  g
			WHERE 
			g.payee_code = 'YUN_DAI_SELF'
			AND g.settle_type = 'REPAY_REVENUE'
			AND g.`status` = 'SUCCESS'
		) t WHERE 1=1
		
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
		LIMIT #{position}, #{offset}
  </select>
  
  
  
 <select id="revenueCollectionRepayYunCount" resultType="java.lang.Integer">
		SELECT 
			COUNT(*)
		FROM
		(
			-- 云贷营收
			SELECT 
				bb.user_name  user_name,
				bb.mobile  mobile,
				'REVENUE'	type,
				b.revenue_amount revenue_collection,
				''	revenue_pay,
				DATE_ADD(b.create_time, INTERVAL -1 DAY) settle_date
			FROM
			bs_revenue_trans_detail b,
			ln_loan ba,
			ln_user bb
			WHERE
			b.loan_id = ba.id
			AND ba.ln_user_id = bb.id
			AND b.trans_type = 'REVENUE_INCOME' 
			AND b.partner_code = 'YUN_DAI_SELF'

			UNION ALL
			-- 重复还款
			SELECT 
				cc.user_name  user_name,
				cc.mobile  mobile,
				'REPEAT_REPAY'	type,
				c.repay_amount	revenue_collection,
				''	revenue_pay,
				c.settle_date	settle_date
			FROM 
			ln_repeat_repay_record c,
			ln_repay_schedule ca,
			ln_loan cb,
			ln_user cc
			WHERE 
			c.repay_plan_id = ca.id
			AND ca.loan_id = cb.id
			AND cb.ln_user_id = cc.id
			AND c.partner_code = 'YUN_DAI_SELF'

			UNION ALL
			-- 补息
			SELECT 
				db.user_name  user_name,
				db.mobile  mobile,
				'FILL_INTEREST'	type,
				''	revenue_collection,
				d.amount	revenue_pay,
				d.fill_date	settle_date
			FROM 
			ln_account_fill_detail d,
			ln_repay da,
			ln_user db
			WHERE 
			d.relative_no = da.id
			AND da.ln_user_id = db.id
			AND d.partner_code = 'YUN_DAI_SELF'
			AND d.fill_type = 'INTEREST'
			AND d.`status` = 'SUCCESS'
			UNION ALL
			-- 补账
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'FILL_ACCOUNT'	type,
				e.amount	revenue_collection,
				''	revenue_pay,
				e.fill_date	settle_date
			FROM 
			ln_account_fill e
			WHERE
			e.`status` = 'SUCCESS'
			UNION ALL
			-- 重复还款清算
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'REPEAT_REPAY_SETTLE'	type,
				''	revenue_collection,
				SUM(f.repay_amount)	revenue_pay,
				f.settle_date	settle_date
			FROM 
			ln_repeat_repay_record f
			WHERE 
			f.partner_code = 'YUN_DAI_SELF'
			AND f.`status` = 'SUCC'
			GROUP BY f.settle_date 
			
			UNION ALL
			-- 营收清算
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'REPAY_REVENUE'	type,
				''	revenue_collection,
				g.amount	revenue_pay,
				g.settle_date	settle_date
			FROM 
			bs_revenue_trans_record  g
			WHERE 
			g.payee_code = 'YUN_DAI_SELF'
			AND g.settle_type = 'REPAY_REVENUE'
			AND g.`status` = 'SUCCESS'
		) t WHERE 1=1
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
		
 </select>
 
 
 
<select id="revenueCollectionRepayYunSum" resultType="java.lang.Double">
		
	<if test="revenueType != null and revenueType != '' and revenueType == 'REVENUE_COLLECTION'"> 			
		SELECT 
			SUM(t.revenue_collection)
		FROM
		(
			-- 云贷营收
			SELECT 
				bb.user_name  user_name,
				bb.mobile  mobile,
				'REVENUE'	type,
				b.revenue_amount revenue_collection,
				''	revenue_pay,
				DATE_ADD(b.create_time, INTERVAL -1 DAY) settle_date
			FROM
			bs_revenue_trans_detail b,
			ln_loan ba,
			ln_user bb
			WHERE
			b.loan_id = ba.id
			AND ba.ln_user_id = bb.id
			AND b.trans_type = 'REVENUE_INCOME' 
			AND b.partner_code = 'YUN_DAI_SELF'

			UNION ALL
			-- 重复还款
			SELECT 
				cc.user_name  user_name,
				cc.mobile  mobile,
				'REPEAT_REPAY'	type,
				c.repay_amount	revenue_collection,
				''	revenue_pay,
				c.settle_date	settle_date
			FROM 
			ln_repeat_repay_record c,
			ln_repay_schedule ca,
			ln_loan cb,
			ln_user cc
			WHERE 
			c.repay_plan_id = ca.id
			AND ca.loan_id = cb.id
			AND cb.ln_user_id = cc.id
			AND c.partner_code = 'YUN_DAI_SELF'

			
			UNION ALL
			-- 补账
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'FILL_ACCOUNT'	type,
				e.amount	revenue_collection,
				''	revenue_pay,
				e.fill_date	settle_date
			FROM 
			ln_account_fill e
			WHERE
			e.`status` = 'SUCCESS'
			
		) t WHERE 1=1
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
	</if>
	
	
	<if test="revenueType != null and revenueType != '' and revenueType == 'REVENUE_PAY'"> 
					
		SELECT 
			SUM(t.revenue_pay)
		FROM
		(

			-- 补息
			SELECT 
				db.user_name  user_name,
				db.mobile  mobile,
				'FILL_INTEREST'	type,
				''	revenue_collection,
				d.amount	revenue_pay,
				d.fill_date	settle_date
			FROM 
			ln_account_fill_detail d,
			ln_repay da,
			ln_user db
			WHERE 
			d.relative_no = da.id
			AND da.ln_user_id = db.id
			AND d.partner_code = 'YUN_DAI_SELF'
			AND d.fill_type = 'INTEREST'
			AND d.`status` = 'SUCCESS'
			UNION ALL
			-- 重复还款清算
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'REPEAT_REPAY_SETTLE'	type,
				''	revenue_collection,
				SUM(f.repay_amount)	revenue_pay,
				f.settle_date	settle_date
			FROM 
			ln_repeat_repay_record f
			WHERE 
			f.partner_code = 'YUN_DAI_SELF'
			AND f.`status` = 'SUCC'
			GROUP BY f.settle_date 
			
			UNION ALL
			-- 营收清算
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'REPAY_REVENUE'	type,
				''	revenue_collection,
				g.amount	revenue_pay,
				g.settle_date	settle_date
			FROM 
			bs_revenue_trans_record  g
			WHERE 
			g.payee_code = 'YUN_DAI_SELF'
			AND g.settle_type = 'REPAY_REVENUE'
			AND g.`status` = 'SUCCESS'
			
		) t WHERE 1=1
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
	</if>	
 </select>
  
<!-- =============================云贷营收代收代付E ======================== -->

  <!-- =============================归集户收代收代付S ======================== -->	
  <resultMap id="InfluxCollectionRepayMap" type="com.pinting.business.model.vo.InfluxCollectionRepayVO">
      <result column="rowno" jdbcType="INTEGER" property="rowno" />
      <result column="user_name" jdbcType="VARCHAR" property="userName" />
      <result column="mobile" jdbcType="VARCHAR" property="mobile" />
      <result column="type" jdbcType="VARCHAR" property="type" />
      <result column="influx_collection" jdbcType="DOUBLE" property="influxCollection" />
      <result column="influx_repay" jdbcType="DOUBLE" property="influxRepay" />
      <result column="settle_date" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  	
 <select id="influxCollectionRepayList" resultMap="InfluxCollectionRepayMap">
  	SELECT
		(@rowNO := @rowNo + 1) rowno, t.*
	FROM
		(SELECT @rowNO := #{position}) b,
		(
			SELECT 
				a.user_name  user_name,
				a.mobile  mobile,
				'COLLECTION'	type,
				a.amount influx_collection,
				a.update_time settle_date
			FROM
			ln_pay_orders a
			WHERE
			a.channel_trans_type = 'DF' 
			AND a.trans_type = 'WITHDRAW_2_DEP_REPAY_CARD'
			and a.status='6'
			UNION ALL
			SELECT 
				a.user_name  user_name,
				a.mobile  mobile,
				'REPAY'	type,
				a.amount influx_repay,
				a.update_time settle_date
			FROM
			ln_pay_orders a
			WHERE
			a.channel_trans_type = 'DK' 
			AND a.trans_type = 'CUT_REPAY_2_BORROWER'
			and a.status='6'
		) t WHERE 1=1		
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
		LIMIT #{position}, #{offset}
  </select>
  
  
 <select id="influxCollectionRepayCount" resultType="java.lang.Integer">
		SELECT 
			COUNT(*)
		FROM
		(
			SELECT 
				a.user_name  user_name,
				a.mobile  mobile,
				'COLLECTION'	type,
				a.amount influx_collection,
				a.update_time settle_date
			FROM
			ln_pay_orders a
			WHERE
			a.channel_trans_type = 'DF' 
			AND a.trans_type = 'WITHDRAW_2_DEP_REPAY_CARD'
			and a.status='6'
			UNION ALL
			-- 
			SELECT 
				a.user_name  user_name,
				a.mobile  mobile,
				'REPAY'	type,
				a.amount influx_repay,
				a.update_time settle_date
			FROM
			ln_pay_orders a
			WHERE
			a.channel_trans_type = 'DK' 
			AND a.trans_type = 'CUT_REPAY_2_BORROWER'
			and a.status='6'
		) t WHERE 1=1
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>		
 	</select>
 
	<select id="influxCollectionRepaySum" resultType="java.lang.Double">
		<if test="influxType != null and influxType != '' and influxType == 'COLLECTION'"> 			
		SELECT 
			SUM(t.influx_collection)
		FROM
		(
			SELECT 
				a.user_name  user_name,
				a.mobile  mobile,
				'COLLECTION'	type,
				a.amount influx_collection,
				a.update_time settle_date
			FROM
			ln_pay_orders a
			WHERE
			a.channel_trans_type = 'DF' 
			AND a.trans_type = 'WITHDRAW_2_DEP_REPAY_CARD'
			and a.status='6'
		) t WHERE 1=1
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
	 	</if>
	 	
	 	<if test="influxType != null and influxType != '' and influxType == 'REPAY'"> 			
		SELECT 
			SUM(t.influx_repay)
		FROM
		(
			SELECT 
				a.user_name  user_name,
				a.mobile  mobile,
				'REPAY'	type,
				a.amount influx_repay,
				a.update_time settle_date
			FROM
			ln_pay_orders a
			WHERE
			a.channel_trans_type = 'DK' 
			AND a.trans_type = 'CUT_REPAY_2_BORROWER'
			and a.status='6'
		) t WHERE 1=1
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
	 	</if>
 </select>
 <!-- =============================归集户收代收代付E ======================== -->	
 
 
 
 
  <!-- =============================云贷自主放款未来30天待兑付查询S ======================== -->	
  <resultMap id="Cash30YunVOMap" type="com.pinting.business.model.vo.Cash30YunVO">
      <result column="last_finish_interest_date" jdbcType="TIMESTAMP" property="finishDate" />
      <result column="total_amount" jdbcType="DOUBLE" property="totalAmount" />
      <result column="return_amount" jdbcType="DOUBLE" property="returnedAmount" />
      <result column="prepare_amount" jdbcType="DOUBLE" property="prepareAmount" />
  </resultMap>
  	
 <select id="cash30Yun" resultMap="Cash30YunVOMap">
SELECT
*,total_amount + return_amount prepare_amount
FROM (
	SELECT 
		SUM(aa.left_amount) + SUM(aa.return_interest) total_amount,aa.last_finish_interest_date
	FROM(
			SELECT ab.*,CASE WHEN ab.serial_id = 1 THEN ab.left_amount * TIMESTAMPDIFF(DAY,ab.loan_time,ab.last_finish_interest_date)*ab.product_rate/36500 ELSE 
					ab.left_amount * TIMESTAMPDIFF(DAY,ab.last_repay_date,ab.last_finish_interest_date)*ab.product_rate/36500 END  return_interest
			FROM (
				SELECT 
				c.last_finish_interest_date,
				b.left_amount,
				a.serial_id,
				b.id relation_id,
				b.loan_id,
				a.id repay_schedule_id,
				(SELECT f.plan_date FROM ln_repay_schedule f WHERE f.loan_id = a.loan_id AND f.serial_id = a.serial_id -1)   last_repay_date,
				e.loan_time,
				c.product_rate
				FROM
				ln_repay_schedule a,
				ln_loan_relation b,
				bs_sub_account c,
				ln_loan e
				WHERE 
				1=1
				AND a.loan_id = b.loan_id
				AND b.bs_sub_account_id = c.id
				AND a.loan_id = e.id
				AND a.`status` = 'INIT'
				AND c.product_type = 'AUTH_YUN'
				AND c.last_finish_interest_date &lt; #{cashDateString}
				AND c.last_finish_interest_date > NOW()
				AND a.plan_date > c.last_finish_interest_date
				GROUP BY a.loan_id
			)ab
	) aa GROUP BY aa.last_finish_interest_date

) aaa LEFT JOIN  (
	SELECT bb.plan_date plan_date,SUM(bb.principal_amount+bb.interest_amount) return_amount FROM
	(
		SELECT 
			d.plan_date,
			e.plan_amount principal_amount,
			ROUND(ROUND(f.plan_amount*h.product_rate,2)/43.8,2)  interest_amount
		FROM 
		ln_repay_schedule d LEFT JOIN ln_repay_schedule_detail e ON d.id = e.plan_id AND e.subject_code = 'PRINCIPAL'
		LEFT JOIN ln_repay_schedule_detail f ON d.id = f.plan_id AND f.subject_code = 'INTEREST',
		ln_loan_relation g,
		bs_sub_account h
		WHERE 
		d.loan_id = g.loan_id
		AND g.bs_sub_account_id = h.id
		AND d.`status` = 'INIT' AND   d.plan_date IS NOT NULL
		AND d.plan_date >= NOW()  
		GROUP BY d.id
	)bb GROUP BY bb.plan_date
) bbb ON date_sub(aaa.last_finish_interest_date,interval 1 day) = bbb.plan_date
 </select>
 
  <select id="debtVipYun" resultType="java.lang.Double">
  	SELECT CASE WHEN SUM(c.left_amount) IS NULL THEN 0 ELSE SUM(c.left_amount) END  FROM 
	bs_sub_account a,
	bs_account b,
	ln_loan_relation c 
	WHERE 
	a.account_id = b.id
	AND a.id = c.bs_sub_account_id
	AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'YUN_DAI_SELF_SUPER_FINANCE_USER_ID')) 
	AND  product_type = 'AUTH_YUN'
  </select>
  
  <select id="standVipYun" resultType="java.lang.Double">
	SELECT SUM(a.available_balance) FROM 
	bs_sub_account a,
	bs_account b
	WHERE 
	a.account_id = b.id
	AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'YUN_DAI_SELF_SUPER_FINANCE_USER_ID')) 
	AND  product_type = 'AUTH_YUN'
  </select>
 
 <!-- =============================云贷自主放款未来30天待兑付查询E ======================== -->	
 
	 
    
    <!-- ================钱报178 APP平台接入S================== -->

  <resultMap id="OrderListMap" type="com.pinting.gateway.hessian.message.qb178.model.OrderListDataResModel">
      <result column="delegation_code" property="delegation_code" jdbcType="VARCHAR"/>
      <result column="product_code" property="product_code" jdbcType="VARCHAR"/>
      <result column="product_name" property="product_name" jdbcType="VARCHAR"/>
      <result column="user_account" property="user_account" jdbcType="VARCHAR"/>
      <result column="order_balance" property="order_balance" jdbcType="BIGINT"/>
      <result column="delegate_type" property="delegate_type" jdbcType="VARCHAR"/>
      <result column="delegate_status" property="delegate_status" jdbcType="VARCHAR"/>
      <result column="order_time" property="order_time" jdbcType="VARCHAR"/>
      <result column="channel" property="channel" jdbcType="VARCHAR"/>
  </resultMap>
    
    <select id="queryOrderListApp178"  parameterType="java.util.Map" resultMap="OrderListMap">
		SELECT 
			a.order_no delegation_code,
			c.product_id product_code,
			c.product_name product_name,
			b.mobile user_account,
			c.open_balance*100 order_balance,
			'applyTrade' delegate_type,
			CASE WHEN (c.`status` = 2 OR c.`status` = 7 )THEN 'delegating' 
			WHEN c.`status` = 5 THEN 'success'  
			WHEN c.`status` = 6 THEN 'closed'  END delegate_status,
			DATE_FORMAT(a.create_time,'%Y%m%d%H%i%s')  order_time,
			substring(order_no,21) channel
		FROM
		bs_pay_orders a,
		bs_user b,
		bs_sub_account c
		WHERE 
		a.user_id = b.id
		AND a.sub_account_id = c.id
		and a.trans_type IN ('CARD_BUY_PRODUCT','BALANCE_BUY_PRODUCT')
		AND c.product_type in ('REG', 'AUTH_YUN' ,'AUTH_ZSD','AUTH_7')
		AND a.`status` = 6
		AND b.agent_id = 15
		<if test="productCode != null and productCode != ''"> 
			AND c.product_id  = #{productCode}
		</if>
		<if test="userAccount != null and userAccount != ''"> 
			AND b.mobile  = #{userAccount}
		</if>
		<if test="createTimeBegin != null and createTimeBegin != ''"> 
			AND a.create_time  >= #{createTimeBegin}
		</if>
		<if test="createTimeEnd != null and createTimeEnd != ''"> 
			AND a.create_time  &lt;=  #{createTimeEnd}
		</if>
		ORDER BY a.create_time DESC
		LIMIT #{position}, #{offset}
    </select>
    <select id="countOrderListApp178"  parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT 
			COUNT(a.id)
		FROM
		bs_pay_orders a,
		bs_user b,
		bs_sub_account c
		WHERE 
		a.user_id = b.id
		AND a.sub_account_id = c.id
		and a.trans_type IN ('CARD_BUY_PRODUCT','BALANCE_BUY_PRODUCT')
		AND c.product_type in ('REG', 'AUTH_YUN' ,'AUTH_ZSD','AUTH_7')
		AND a.`status` = 6
		AND b.agent_id = 15
		<if test="productCode != null and productCode != ''"> 
			AND c.product_id  = #{productCode}
		</if>
		<if test="userAccount != null and userAccount != ''"> 
			AND b.mobile  = #{userAccount}
		</if>
		<if test="createTimeBegin != null and createTimeBegin != ''"> 
			AND a.create_time  >= #{createTimeBegin}
		</if>
		<if test="createTimeEnd != null and createTimeEnd != ''"> 
			AND a.create_time  &lt;=  #{createTimeEnd}
		</if>
    </select>
    
    <!-- ================钱报178 APP平台接入E================== -->
    
     <select id="sumBalanceByTransType" resultType="java.lang.Double">
     	select IFNULL(sum(amount),0) from bs_pay_orders where trans_type=#{transType} 
     	and `status` = 6 and update_time >= #{beginTime} and update_time &lt;=#{endTime}
     </select>

<!-- ================存管-云贷-本金购买统计 S======= -->
  <select id="yunZSDCorpusBuyStatistics" resultMap="CorpusBuyStatisticsMap">
    SELECT
    (@rowNO := @rowNo + 1) rowno,
    t.*
    FROM
    (SELECT @rowNO := #{position}) b,
    (
    	select a.id,b.amount+IFNULL(red.open_balance,0) balance,concat("020",b.order_no) order_no,
		a.interest_begin_date time,concat("3.",b.user_id) customer_code,c.mobile,c.user_name
		from bs_sub_account a,bs_pay_orders b,bs_user c,
		bs_sub_account_pair pair LEFT JOIN bs_sub_account red 
		ON red.id = pair.red_account_id 
		where 
		<if test="partnerCode != null and partnerCode != '' and partnerCode == 'YUN_DAI_SELF'">
			a.product_type = 'AUTH_YUN' 
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode == '7_DAI_SELF'">
			a.product_type = 'AUTH_7' 
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode == 'ZSD'">
			a.product_type = 'AUTH_ZSD' 
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode == 'FREE'">
			a.product_type = 'AUTH_FREE' 
		</if>
		and a.`status` in(2,5,7)
		and a.id = b.sub_account_id and a.id = pair.auth_account_id 
		and b.user_id = c.id
		and b.trans_type = 'BALANCE_BUY_PRODUCT' 
		<if test="partnerCode != null and partnerCode != '' and partnerCode == 'FREE'">
		 	<if test="userType != null and userType != '' and userType == 'VIP'">
		 		AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'FREE_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 
		 	<if test="userType != null and userType != '' and userType == 'NORMAL'">
		 		AND !FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'FREE_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 </if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode == 'YUN_DAI_SELF'">
		 	<if test="userType != null and userType != '' and userType == 'VIP'">
		 		AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'YUN_DAI_SELF_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 
		 	<if test="userType != null and userType != '' and userType == 'NORMAL'">
		 		AND !FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'YUN_DAI_SELF_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 </if>
		 <if test="partnerCode != null and partnerCode != '' and partnerCode == '7_DAI_SELF'">
		 	<if test="userType != null and userType != '' and userType == 'VIP'">
		 		AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = '7_DAI_SELF_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 
		 	<if test="userType != null and userType != '' and userType == 'NORMAL'">
		 		AND !FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = '7_DAI_SELF_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 </if>
		 <if test="partnerCode != null and partnerCode != '' and partnerCode == 'ZSD'">
		 	<if test="userType != null and userType != '' and userType == 'VIP'">
		 		AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'ZSD_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 
		 	<if test="userType != null and userType != '' and userType == 'NORMAL'">
		 		AND !FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'ZSD_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 </if>
		 
		
		<if test="userName != null and userName != ''">
	      AND c.user_name like concat(concat('%', #{userName}),'%')
	    </if>
	    <if test="mobile != null and mobile != ''">
	      AND c.mobile  like concat(concat('%', #{mobile}),'%')
	    </if>
	    <if test="startTime != null and startTime != ''">
	      <![CDATA[
				AND a.interest_begin_date >= #{startTime}
			]]>
	    </if>
	    <if test="endTime != null and endTime != ''">
	      <![CDATA[
				AND a.interest_begin_date <= #{endTime}
			]]>
	    </if>
		ORDER BY a.interest_begin_date desc,a.id desc
    	LIMIT #{position}, #{offset}
    ) t
  </select>
  
   <select id="yunZSDCorpusBuyStatisticsCount" resultType="java.lang.Integer">
   		select count(a.id)
		from bs_sub_account a,bs_pay_orders b,bs_user c,
		bs_sub_account_pair pair
		where 
		<if test="partnerCode != null and partnerCode != '' and partnerCode == 'YUN_DAI_SELF'">
			a.product_type = 'AUTH_YUN' 
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode == '7_DAI_SELF'">
			a.product_type = 'AUTH_7' 
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode == 'ZSD'">
			a.product_type = 'AUTH_ZSD' 
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode == 'FREE'">
			a.product_type = 'AUTH_FREE' 
		</if>
		and a.`status` in(2,5,7)
		and a.id = b.sub_account_id and a.id = pair.auth_account_id 
		and b.user_id = c.id
		and b.trans_type = 'BALANCE_BUY_PRODUCT'
		<if test="partnerCode != null and partnerCode != '' and partnerCode == 'FREE'">
		 	<if test="userType != null and userType != '' and userType == 'VIP'">
		 		AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'FREE_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 
		 	<if test="userType != null and userType != '' and userType == 'NORMAL'">
		 		AND !FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'FREE_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 </if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode == 'YUN_DAI_SELF'">
		 	<if test="userType != null and userType != '' and userType == 'VIP'">
		 		AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'YUN_DAI_SELF_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 
		 	<if test="userType != null and userType != '' and userType == 'NORMAL'">
		 		AND !FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'YUN_DAI_SELF_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 </if>
		 <if test="partnerCode != null and partnerCode != '' and partnerCode == '7_DAI_SELF'">
		 	<if test="userType != null and userType != '' and userType == 'VIP'">
		 		AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = '7_DAI_SELF_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 
		 	<if test="userType != null and userType != '' and userType == 'NORMAL'">
		 		AND !FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = '7_DAI_SELF_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 </if>
		 <if test="partnerCode != null and partnerCode != '' and partnerCode == 'ZSD'">
		 	<if test="userType != null and userType != '' and userType == 'VIP'">
		 		AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'ZSD_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 
		 	<if test="userType != null and userType != '' and userType == 'NORMAL'">
		 		AND !FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'ZSD_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 </if> 

		<if test="userName != null and userName != ''">
	      AND c.user_name like concat(concat('%', #{userName}),'%')
	    </if>
	    <if test="mobile != null and mobile != ''">
	      AND c.mobile  like concat(concat('%', #{mobile}),'%')
	    </if>
	    <if test="startTime != null and startTime != ''">
	      <![CDATA[
				AND a.interest_begin_date >= #{startTime}
			]]>
	    </if>
	    <if test="endTime != null and endTime != ''">
	      <![CDATA[
				AND a.interest_begin_date <= #{endTime}
			]]>
	    </if>
   
   </select>
   
   
   <select id="yunZSDCorpusBuyStatisticsSumBalance" resultType="java.lang.Double">
    select sum(b.amount+IFNULL(red.open_balance,0))
		from bs_sub_account a,bs_pay_orders b,bs_user c,
		bs_sub_account_pair pair LEFT JOIN bs_sub_account red 
		ON red.id = pair.red_account_id 
		where 
		<if test="partnerCode != null and partnerCode != '' and partnerCode == 'YUN_DAI_SELF'">
			a.product_type = 'AUTH_YUN' 
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode == '7_DAI_SELF'">
			a.product_type = 'AUTH_7' 
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode == 'ZSD'">
			a.product_type = 'AUTH_ZSD' 
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode == 'FREE'">
			a.product_type = 'AUTH_FREE' 
		</if>
		and a.`status` in(2,5,7)
		and a.id = b.sub_account_id and a.id = pair.auth_account_id 
		and b.user_id = c.id
		and b.trans_type = 'BALANCE_BUY_PRODUCT' 
		<if test="partnerCode != null and partnerCode != '' and partnerCode == 'FREE'">
		 	<if test="userType != null and userType != '' and userType == 'VIP'">
		 		AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'FREE_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 
		 	<if test="userType != null and userType != '' and userType == 'NORMAL'">
		 		AND !FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'FREE_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 </if>
		 <if test="partnerCode != null and partnerCode != '' and partnerCode == 'YUN_DAI_SELF'">
		 	<if test="userType != null and userType != '' and userType == 'VIP'">
		 		AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'YUN_DAI_SELF_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 
		 	<if test="userType != null and userType != '' and userType == 'NORMAL'">
		 		AND !FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'YUN_DAI_SELF_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 </if>
		 <if test="partnerCode != null and partnerCode != '' and partnerCode == '7_DAI_SELF'">
		 	<if test="userType != null and userType != '' and userType == 'VIP'">
		 		AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = '7_DAI_SELF_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 
		 	<if test="userType != null and userType != '' and userType == 'NORMAL'">
		 		AND !FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = '7_DAI_SELF_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 </if>
		 <if test="partnerCode != null and partnerCode != '' and partnerCode == '7_DAI_SELF'">
		 	<if test="userType != null and userType != '' and userType == 'VIP'">
		 		AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = '7_DAI_SELF_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 
		 	<if test="userType != null and userType != '' and userType == 'NORMAL'">
		 		AND !FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = '7_DAI_SELF_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 </if>
		 <if test="partnerCode != null and partnerCode != '' and partnerCode == 'ZSD'">
		 	<if test="userType != null and userType != '' and userType == 'VIP'">
		 		AND FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'ZSD_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 
		 	<if test="userType != null and userType != '' and userType == 'NORMAL'">
		 		AND !FIND_IN_SET(b.user_id,(SELECT conf_value FROM bs_sys_config WHERE conf_key = 'ZSD_SUPER_FINANCE_USER_ID')) 
		 	</if>
		 </if> 
		
		<if test="userName != null and userName != ''">
	      AND c.user_name like concat(concat('%', #{userName}),'%')
	    </if>
	    <if test="mobile != null and mobile != ''">
	      AND c.mobile  like concat(concat('%', #{mobile}),'%')
	    </if>
	    <if test="startTime != null and startTime != ''">
	      <![CDATA[
				AND a.interest_begin_date >= #{startTime}
			]]>
	    </if>
	    <if test="endTime != null and endTime != ''">
	      <![CDATA[
				AND a.interest_begin_date <= #{endTime}
			]]>
	    </if>
		
  </select>
  
  <!-- ================存管-云贷-本金购买统计 E======= -->


  <!-- ================ 恒丰、宝付客户支取统计 S ================ -->

  <resultMap id="HfbankCustomerWithdrawalMap" type="com.pinting.business.model.vo.HfbankCustomerWithdrawalVO">
    <result column="rowno" property="rowno" javaType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="customer_code" property="customerCode" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
    <result column="done_fee" property="doneFee" jdbcType="DOUBLE" />
    <result column="revenue_amount" property="revenueAmount" jdbcType="DOUBLE" />
    <result column="channel" property="channel" jdbcType="VARCHAR" />
    <result column="update_time"  property="updateTime" jdbcType="TIMESTAMP" />
    <result column="trans_type" property="transType" jdbcType="VARCHAR" />
  </resultMap>

  <select id="selectHfbankWithdrawalList" resultMap="HfbankCustomerWithdrawalMap">
    SELECT
      (@rowNO := @rowNo + 1) rowno,
      t.*
    FROM
    (SELECT @rowNO := #{position}) b,
    (
      SELECT
        p.order_no,
        concat("3.",p.user_id) customer_code,
        p.user_name,
        p.amount,
        IFNULL(s.done_fee, 0) AS done_fee,
        (p.amount-IFNULL(s.done_fee, 0)) AS revenue_amount,
        p.channel,
        p.update_time
      FROM bs_pay_orders p
      LEFT JOIN
      (select order_no, done_fee from bs_service_fee where fee_type = 'HF_FINANCE_WITHDRAW'
      and create_time >= '2017-09-19 00:00:00') s ON p.order_no = s.order_no
      WHERE p.trans_type IN ('RETURN_2_USER_BANK_CARD', 'RETURN_REG_D_2_USER_BANK_CARD', 'BALANCE_WITHDRAW')
      AND p.channel = 'HFBANK'
      AND p.`status` = 6
      <if test="userName != null and userName != ''">
        AND p.user_name like concat(concat('%', #{userName}),'%')
      </if>
      <if test="startTime != null and startTime != ''">
        <![CDATA[
            AND p.update_time >= #{startTime}
        ]]>
      </if>
      <if test="endTime != null and endTime != ''">
        <![CDATA[
            AND p.update_time <= #{endTime}
        ]]>
      </if>
      ORDER BY p.update_time DESC
      LIMIT #{position}, #{offset}
    ) t
  </select>

  <select id="selectHfbankWithdrawalCount" resultType="java.lang.Integer">
    SELECT
      COUNT(*)
    FROM bs_pay_orders p
    LEFT JOIN
    (select order_no, done_fee from bs_service_fee where fee_type = 'HF_FINANCE_WITHDRAW'
    and create_time >= '2017-09-19 00:00:00') s ON p.order_no = s.order_no
    WHERE p.trans_type IN ('RETURN_2_USER_BANK_CARD', 'RETURN_REG_D_2_USER_BANK_CARD', 'BALANCE_WITHDRAW')
    AND p.channel = 'HFBANK'
    AND p.`status` = 6
    <if test="userName != null and userName != ''">
      AND p.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
          AND p.update_time >= #{startTime}
      ]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
          AND p.update_time <= #{endTime}
      ]]>
    </if>
  </select>

  <select id="selectHfbankWithdrawalSumAmount" resultType="java.lang.Double">
    SELECT
      SUM(p.amount) AS total_amount
    FROM bs_pay_orders p
    LEFT JOIN
    (select order_no, done_fee from bs_service_fee where fee_type = 'HF_FINANCE_WITHDRAW'
    and create_time >= '2017-09-19 00:00:00') s ON p.order_no = s.order_no
    WHERE p.trans_type IN ('RETURN_2_USER_BANK_CARD', 'RETURN_REG_D_2_USER_BANK_CARD', 'BALANCE_WITHDRAW')
    AND p.channel = 'HFBANK'
    AND p.`status` = 6
    <if test="userName != null and userName != ''">
      AND p.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
          AND p.update_time >= #{startTime}
      ]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
          AND p.update_time <= #{endTime}
      ]]>
    </if>
  </select>

  <select id="selectHfbankWithdrawalSumFee" resultType="java.lang.Double">
    SELECT
      SUM(IFNULL(s.done_fee, 0)) AS fee_amount
    FROM bs_pay_orders p
    LEFT JOIN
    (select order_no, done_fee from bs_service_fee where fee_type = 'HF_FINANCE_WITHDRAW'
    and create_time >= '2017-09-19 00:00:00') s ON p.order_no = s.order_no
    WHERE p.trans_type IN ('RETURN_2_USER_BANK_CARD', 'RETURN_REG_D_2_USER_BANK_CARD', 'BALANCE_WITHDRAW')
    AND p.channel = 'HFBANK'
    AND p.`status` = 6
    <if test="userName != null and userName != ''">
      AND p.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
          AND p.update_time >= #{startTime}
      ]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
          AND p.update_time <= #{endTime}
      ]]>
    </if>
  </select>

  <select id="selectBaofooWithdrawalList" resultMap="HfbankCustomerWithdrawalMap">
    SELECT
    (@rowNO := @rowNo + 1) rowno,
    t.*
    FROM
    (SELECT @rowNO := #{position}) b,
    (
      SELECT
        p.order_no,
        concat("3.",p.user_id) customer_code,
        p.user_name,
        (p.amount+IFNULL(s.done_fee, 0)) AS amount,
        IFNULL(s.done_fee, 0) AS done_fee,
        p.amount AS revenue_amount,
        p.channel,
        p.update_time,
        p.trans_type
      FROM bs_pay_orders p
      LEFT JOIN
      (select order_no, done_fee from bs_service_fee where fee_type = 'FINANCE_WITHDRAW'
      and create_time >= '2017-09-19 00:00:00') s ON p.order_no = s.order_no
      WHERE  
      p.trans_type IN ('BONUS_WITHDRAW', 'BALANCE_WITHDRAW')
      AND p.channel = 'BAOFOO'
      AND p.`status` = 6
      <if test="userName != null and userName != ''">
        AND p.user_name like concat(concat('%', #{userName}),'%')
      </if>
      <if test="startTime != null and startTime != ''">
        <![CDATA[
              AND p.update_time >= #{startTime}
          ]]>
      </if>
      <if test="endTime != null and endTime != ''">
        <![CDATA[
              AND p.update_time <= #{endTime}
          ]]>
      </if>
      <if test="transType != null and transType != ''">
        AND p.trans_type = #{transType}
      </if>
      ORDER BY p.update_time DESC
      LIMIT #{position}, #{offset}
    ) t
  </select>

  <select id="selectBaofooWithdrawalCount" resultType="java.lang.Integer">
    SELECT
      COUNT(*)
    FROM bs_pay_orders p
    LEFT JOIN
    (select order_no, done_fee from bs_service_fee where fee_type = 'FINANCE_WITHDRAW'
    and create_time >= '2017-09-19 00:00:00') s ON p.order_no = s.order_no
    WHERE p.trans_type IN ('BONUS_WITHDRAW', 'BALANCE_WITHDRAW')
    AND p.channel = 'BAOFOO'
    AND p.`status` = 6
    <if test="userName != null and userName != ''">
      AND p.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
          AND p.update_time >= #{startTime}
      ]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
          AND p.update_time <= #{endTime}
      ]]>
    </if>
    <if test="transType != null and transType != ''">
      AND p.trans_type = #{transType}
    </if>
  </select>

  <select id="selectBaofooWithdrawalSumAmount" resultType="java.lang.Double">
    SELECT
      SUM(p.amount+IFNULL(s.done_fee, 0)) AS total_amount
    FROM bs_pay_orders p
    LEFT JOIN
    (select order_no, done_fee from bs_service_fee where fee_type = 'FINANCE_WITHDRAW'
    and create_time >= '2017-09-19 00:00:00') s ON p.order_no = s.order_no
    WHERE p.trans_type IN ('BONUS_WITHDRAW', 'BALANCE_WITHDRAW')
    AND p.channel = 'BAOFOO'
    AND p.`status` = 6
    <if test="userName != null and userName != ''">
      AND p.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
          AND p.update_time >= #{startTime}
      ]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
          AND p.update_time <= #{endTime}
      ]]>
    </if>
    <if test="transType != null and transType != ''">
      AND p.trans_type = #{transType}
    </if>
  </select>

  <select id="selectBaofooWithdrawalSumFee" resultType="java.lang.Double">
    SELECT
      SUM(IFNULL(s.done_fee, 0)) AS fee_amount
    FROM bs_pay_orders p
    LEFT JOIN
    (select order_no, done_fee from bs_service_fee where fee_type = 'FINANCE_WITHDRAW'
    and create_time >= '2017-09-19 00:00:00') s ON p.order_no = s.order_no
    WHERE p.trans_type IN ('BONUS_WITHDRAW', 'BALANCE_WITHDRAW')
    AND p.channel = 'BAOFOO'
    AND p.`status` = 6
    <if test="userName != null and userName != ''">
      AND p.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
          AND p.update_time >= #{startTime}
      ]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
          AND p.update_time <= #{endTime}
      ]]>
    </if>
    <if test="transType != null and transType != ''">
      AND p.trans_type = #{transType}
    </if>
  </select>

  <!-- ================ 恒丰、宝付客户支取统计 E ================ -->
  	
	<!-- ================ 融资客户结算 ================ -->
	<select id="depBalanceFinanceStatisticsCount" resultMap="DepBalanceFinanceStatisticsMap">
			select 
				count(*) as total_count, 
				sum(cc.plan_principal) as total_plan_principal, 
				sum(cc.loan_interest) as total_loan_interest, 
				
				sum(cc.plan_interest) as total_plan_interest, 
				sum(cc.plan_fee) as total_plan_fee 
				
				from ( 
					select x.relation_id, x.repay_serial, 
								
							x.plan_total,
							x.plan_principal, 
							(x.plan_total-x.plan_principal) as loan_interest,
							case when x.left_plan_interest is null then 
									x.plan_interest+IFNULL(x.plan_trans_interest,0)+IFNULL(x.diff_amount,0) 
								else 
									(case when left_plan_interest > (x.plan_interest+IFNULL(x.plan_trans_interest,0)+IFNULL(x.diff_amount,0)) 
										then x.plan_interest+IFNULL(x.plan_trans_interest,0)+IFNULL(x.diff_amount,0) else x.left_plan_interest end) 		
							end plan_interest,
							case when x.left_plan_interest is null then 
									x.plan_fee-IFNULL(x.diff_amount,0) 
								else 
									(case when left_plan_interest > (x.plan_interest+IFNULL(x.plan_trans_interest,0)+IFNULL(x.diff_amount,0)) 
										then x.plan_total-x.plan_principal-x.plan_interest-IFNULL(x.plan_trans_interest,0)-IFNULL(x.diff_amount,0) 
											else x.plan_total-x.plan_principal-x.left_plan_interest end) 		
							end plan_fee, 
							x.create_time,x.`status`,bb.bs_sub_account_id,bb.bs_user_id,
							bb.ln_user_id, bb.loan_id, x.plan_date   
						from ln_finance_repay_schedule x left join ln_loan_relation bb on x.relation_id=bb.id  
							where 1=1 
							<if test="startTime != null and startTime != ''">
						      <![CDATA[
									and x.done_time >= #{startTime} 
								]]>
						    </if>
						    <if test="endTime != null and endTime != ''">
						      <![CDATA[
									and x.done_time <= #{endTime} 
								]]>
						    </if>
				) cc , ln_deposition_repay_schedule ff left join (select id,partner_repay_id from ln_compensate_detail where `status`='SUCC') lld on ff.partner_repay_id = lld.partner_repay_id, 
				bs_user dd, ln_user ee,ln_loan aa 
				where cc.loan_id=aa.id and aa.`status`='PAIED' 
						and cc.loan_id = ff.loan_id 
						and cc.repay_serial=ff.serial_id 
						and ff.`status`='REPAIED' 
						and cc.bs_user_id=dd.id 
						and cc.ln_user_id=ee.id 
						and ee.partner_code=#{partnerCode} 
				<if test="userName != null and userName != ''">
			      	and dd.user_name like concat(concat('%', #{userName}),'%')
			    </if>
			    <if test="mobile != null and mobile != ''">
			      	and dd.mobile like concat(concat('%', #{mobile}),'%')
			    </if>
			    <if test="note=='LATE_REPAIED'">
					and lld.id is not null 
			    </if>
			    <if test="custType == 'vip'">
			 		and FIND_IN_SET(dd.id,(select conf_value from bs_sys_config where conf_key=concat( #{partnerCode} ,'_SUPER_FINANCE_USER_ID')))
			    </if>
			    <if test="custType == 'others'">
				 	and !FIND_IN_SET(dd.id,(select conf_value from bs_sys_config where conf_key=concat( #{partnerCode} ,'_SUPER_FINANCE_USER_ID')))
			    </if>
                <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag !='777' and partnerBusinessFlag !='888' and partnerBusinessFlag !='999' ">
                  AND aa.partner_business_flag = #{partnerBusinessFlag}
                </if>
                <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag =='777' ">
                  AND aa.partner_business_flag IN ('REPAY_ANY_TIME', 'FIXED_INSTALLMENT', 'FIXED_PRINCIPAL_INTEREST')
                </if>
                <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag =='888' ">
                  AND aa.partner_business_flag IN ('现金循环贷', 'REPAY_ANY_TIME')
                </if>
	</select>
	<!-- ================ 融资客户结算 ================ -->
	<select id="depBalanceFinanceStatistics" resultMap="DepBalanceFinanceStatisticsMap">
			SELECT 
				(@rowNO := @rowNo + 1) rowno,
				t.* 
			FROM 
				(SELECT @rowNO := 0) b,
			(
				select 
					dd.user_name as fn_user_name,
					ee.user_name as loan_user_name,
					dd.mobile,
					concat("3.",cc.bs_user_id) fn_customer_id,
					case ee.partner_code when 'YUN_DAI_SELF' then 1.4 when 'ZSD' then 1.5 when '7_DAI_SELF' then 1.6 else 1.7 end ln_customer_id,
					concat("060",ff.partner_repay_id,cc.id) billNo,
					cc.plan_principal,
					cc.loan_interest,
					cc.plan_interest as plan_interest,
					cc.plan_fee as plan_fee,
					DATE_FORMAT(cc.done_time,'%Y-%m-%d') as finish_time,
					if(lld.id is null , '正常', '逾期' ) as repayNote,
                    aa.partner_business_flag
					from (
						select x.id,x.relation_id, x.repay_serial,	x.plan_principal, (x.plan_total-x.plan_principal) as loan_interest,
								case when x.left_plan_interest is null then 
										x.plan_interest+IFNULL(x.plan_trans_interest,0)+IFNULL(x.diff_amount,0) 
									else 
										(case when left_plan_interest > (x.plan_interest+IFNULL(x.plan_trans_interest,0)+IFNULL(x.diff_amount,0)) 
											then x.plan_interest+IFNULL(x.plan_trans_interest,0)+IFNULL(x.diff_amount,0) else x.left_plan_interest end) 		
								end plan_interest,
								case when x.left_plan_interest is null then 
										x.plan_fee-IFNULL(x.diff_amount,0) 
									else 
										(case when left_plan_interest > (x.plan_interest+IFNULL(x.plan_trans_interest,0)+IFNULL(x.diff_amount,0)) 
											then x.plan_total-x.plan_principal-x.plan_interest-IFNULL(x.plan_trans_interest,0)-IFNULL(x.diff_amount,0) 
												else x.plan_total-x.plan_principal-x.left_plan_interest end) 		
								end plan_fee,
								x.done_time,x.`status`,bb.bs_sub_account_id,bb.bs_user_id,bb.ln_user_id, bb.loan_id,x.plan_date 
							from ln_finance_repay_schedule x left join ln_loan_relation bb on x.relation_id=bb.id  
								where 1=1  										
										<if test="startTime != null and startTime != ''">
									      	<![CDATA[
												and x.done_time >= #{startTime} 
											]]>
						    			</if>
						    			<if test="endTime != null and endTime != ''">
									      	<![CDATA[
												and x.done_time <= #{endTime} 
											]]>
						    			</if>
					) cc, ln_deposition_repay_schedule ff left join (select id,partner_repay_id from ln_compensate_detail where `status`='SUCC') lld on ff.partner_repay_id = lld.partner_repay_id, 
					bs_user dd, ln_user ee,ln_loan aa 
					where cc.loan_id=aa.id and aa.`status`='PAIED' 
						and cc.loan_id = ff.loan_id 
						and cc.repay_serial=ff.serial_id 
						and ff.`status`='REPAIED' 
						and cc.bs_user_id=dd.id 
						and cc.ln_user_id=ee.id 
						and ee.partner_code=#{partnerCode} 
						<if test="userName != null and userName != ''"> 
					      and dd.user_name like concat(concat('%', #{userName}),'%') 
					    </if>
					    <if test="mobile != null and mobile != ''"> 
					      and dd.mobile like concat(concat('%', #{mobile}),'%') 
					    </if> 
					    <if test="note=='LATE_REPAIED'">
							and lld.id is not null 
					    </if>
					    <if test="custType == 'vip'">
					 		and FIND_IN_SET(dd.id,(select conf_value from bs_sys_config where conf_key=concat( #{partnerCode} ,'_SUPER_FINANCE_USER_ID')))
					    </if>
					    <if test="custType == 'others'">
						 	and !FIND_IN_SET(dd.id,(select conf_value from bs_sys_config where conf_key=concat( #{partnerCode} ,'_SUPER_FINANCE_USER_ID')))
					    </if>
                        <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag !='777' and partnerBusinessFlag !='888' and partnerBusinessFlag !='999' ">
                          AND aa.partner_business_flag = #{partnerBusinessFlag}
                        </if>
                        <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag =='777' ">
                          AND aa.partner_business_flag IN ('REPAY_ANY_TIME', 'FIXED_INSTALLMENT', 'FIXED_PRINCIPAL_INTEREST')
                        </if>
                        <if test="partnerBusinessFlag != null and partnerBusinessFlag != '' and partnerBusinessFlag =='888' ">
                          AND aa.partner_business_flag IN ('现金循环贷', 'REPAY_ANY_TIME')
                        </if>
			order by cc.done_time desc
		) t limit #{position}, #{offset} 
	</select>
	<!-- ================ 币港湾-恒丰-宝付对账数据 ================================ -->
	<select id="depBaoFooBalanceStatisticsCount" resultType="Integer">
		select count(*) from (
		select t.* from (  
			select DATE_FORMAT(create_time,'%Y-%m-%d') trans_date,trans_type,amount from bs_pay_orders 
				where channel='BAOFOO' and `status`='6' 
					and trans_type in('BALANCE_WITHDRAW','BONUS_WITHDRAW','SYS_PARTNER_REVENUE','SYS_YUN_REPAY_REVENUE','SYS_ZSD_REPAY_REVENUE','SYS_SEVEN_REPAY_REVENUE',
						'SYS_YUN_REPEAT','SYS_ZSD_REPEAT','SYS_SEVEN_REPEAT')
					and DATE_FORMAT(create_time,'%Y-%m-%d') = DATE_FORMAT(update_time,'%Y-%m-%d') 
					<if test="startTime != null and startTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') >= #{startTime} 
						]]>
				    </if>
				    <if test="endTime != null and endTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') <= #{endTime} 
						]]>
				    </if> 
			union all 
			select DATE_FORMAT(create_time,'%Y-%m-%d') trans_date,if(trans_type='REPAY',CONCAT(partner_code,'_',trans_type),trans_type) as trans_type,
				amount from ln_pay_orders 
				where channel='BAOFOO' and `status`=6 
					and (trans_type='WITHDRAW_2_DEP_REPAY_CARD'  or ((payment_channel_id =1 or payment_channel_id is null) and trans_type='REPAY' and channel_trans_type='DK'))
					and DATE_FORMAT(create_time,'%Y-%m-%d') = DATE_FORMAT(update_time,'%Y-%m-%d') 
					<if test="startTime != null and startTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') >= #{startTime} 
						]]>
				    </if>
				    <if test="endTime != null and endTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') <= #{endTime} 
						]]>
				    </if>
			union all 
			select DATE_FORMAT(create_time,'%Y-%m-%d') trans_date,trans_type,amount from ln_pay_orders
				where channel='HFBANK' and `status`=6
					and trans_type='CUT_REPAY_2_BORROWER'
					and DATE_FORMAT(create_time,'%Y-%m-%d') = DATE_FORMAT(update_time,'%Y-%m-%d')
					<if test="startTime != null and startTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') >= #{startTime}
						]]>
				    </if>
				    <if test="endTime != null and endTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') <= #{endTime}
						]]>
				    </if>
			union all 
			select DATE_FORMAT(create_time,'%Y-%m-%d') trans_date,if(trans_type='REPAY',CONCAT(partner_code,'_',trans_type,'_2'),trans_type) as trans_type,
				amount from ln_pay_orders
				where channel='BAOFOO' and `status`=6
					and payment_channel_id =2 and trans_type='REPAY' and channel_trans_type='DK'
					and DATE_FORMAT(create_time,'%Y-%m-%d') = DATE_FORMAT(update_time,'%Y-%m-%d')
					<if test="startTime != null and startTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') >= #{startTime}
						]]>
				    </if>
				    <if test="endTime != null and endTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') <= #{endTime}
						]]>
				    </if>
			union all
			select DATE_FORMAT(create_time,'%Y-%m-%d') trans_date,if(trans_type='REPAY',CONCAT(partner_code,'_',trans_type,'_2_',channel_trans_type),trans_type) as trans_type,
				amount from ln_pay_orders
				where channel='BAOFOO' and `status`=6
					and payment_channel_id =2 and trans_type='REPAY' and channel_trans_type='TRANSFER'
					and DATE_FORMAT(create_time,'%Y-%m-%d') = DATE_FORMAT(update_time,'%Y-%m-%d')
					<if test="startTime != null and startTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') >= #{startTime}
						]]>
				    </if>
				    <if test="endTime != null and endTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') <= #{endTime}
						]]>
				    </if>
			union all
			select DATE_FORMAT(apply_time,'%Y-%m-%d') trans_date,'COMPENSATE' as trans_type,total_mount
				from ln_compensate where 1=1
				<if test="startTime != null and startTime != ''">
			      <![CDATA[
						and DATE_FORMAT(apply_time,'%Y-%m-%d') >= #{startTime}
					]]>
			    </if>
			    <if test="endTime != null and endTime != ''">
			      <![CDATA[
						and DATE_FORMAT(apply_time,'%Y-%m-%d') <= #{endTime}
					]]>
			    </if>
			union all 
			select DATE_FORMAT(a.pay_finsh_time,'%Y-%m-%d') trans_date ,concat(b.property_symbol,'_BACK') as trans_type,a.amount 
			from `bs_sys_receive_money` a, (select product_code,property_symbol 
				from bs_batch_buy group by product_code) b 
				where a.product_code=b.product_code 
				<if test="startTime != null and startTime != ''">
			      	<![CDATA[
						and DATE_FORMAT(a.pay_finsh_time,'%Y-%m-%d') >= #{startTime} 
					]]>
			    </if>
			    <if test="endTime != null and endTime != ''">
			      	<![CDATA[
						and DATE_FORMAT(a.pay_finsh_time,'%Y-%m-%d') <= #{endTime} 
					]]>
			    </if>	
		) t group by t.trans_date ) a
	</select>
	<select id="depBaoFooBalanceStatistics" resultMap="DepBaoFooBalanceStatisticsMap">
		SELECT
				(@rowNO := @rowNo + 1) rowno,
				t.* 
			FROM
				(SELECT @rowNO := 0) b,(
		select a.trans_date,
            sum( case a.trans_type when 'BALANCE_WITHDRAW' then amount else 0 end ) as user_withdraw,
            sum( case a.trans_type when 'BALANCE_WITHDRAW' then 1 else 0 end ) as user_withdraw_count,
            sum( case a.trans_type when 'BONUS_WITHDRAW' then amount else 0 end ) as bonus_withdraw,
            sum( case a.trans_type when 'BONUS_WITHDRAW' then 1 else 0 end ) as bonus_withdraw_count,
            sum( case a.trans_type when 'SYS_PARTNER_REVENUE' then amount else 0 end ) as sys_partner_revenue,
            sum( case a.trans_type when 'SYS_YUN_REPAY_REVENUE' then amount else 0 end ) as sys_yun_repay_revenue,
            sum( case a.trans_type when 'SYS_YUN_REPEAT' then amount else 0 end ) as sys_yun_repeat,
            sum( case a.trans_type when 'SYS_ZSD_REPAY_REVENUE' then amount else 0 end ) as sys_zsd_repay_revenue,
            sum( case a.trans_type when 'SYS_ZSD_REPEAT' then amount else 0 end ) as sys_zsd_repeat,
            sum( case a.trans_type when 'SYS_SEVEN_REPAY_REVENUE' then amount else 0 end ) as sys_seven_repay_revenue,
            sum( case a.trans_type when 'SYS_SEVEN_REPEAT' then amount else 0 end ) as sys_seven_repeat,
            sum( case a.trans_type when 'WITHDRAW_2_DEP_REPAY_CARD' then  amount else  0 end ) as withdraw_2_dep_repay_card,
            sum( case a.trans_type when 'WITHDRAW_2_DEP_REPAY_CARD' then  1 else  0 end ) as withdraw_2_dep_repay_card_count,
            sum( case a.trans_type when 'CUT_REPAY_2_BORROWER' then  amount else  0 end ) as cut_repay_2_borrower,
            sum( case a.trans_type when 'CUT_REPAY_2_BORROWER' then  1 else  0 end ) as cut_repay_2_borrower_count,
            sum( case a.trans_type when 'YUN_DAI_BACK' then  amount else  0 end ) as yun_dai_back,
            sum( case a.trans_type when 'YUN_DAI_BACK' then  1 else  0 end ) as yun_dai_back_count,
            sum( case a.trans_type when '7_DAI_BACK' then  amount else  0 end ) as seven_dai_back,
            sum( case a.trans_type when '7_DAI_BACK' then  1 else  0 end ) as seven_dai_back_count,
            sum( case a.trans_type when 'YUN_DAI_SELF_REPAY' then  amount else  0 end ) as dep_yun_back,
            sum( case a.trans_type when 'YUN_DAI_SELF_REPAY' then  1 else  0 end ) as dep_yun_back_count,
            sum( case a.trans_type when 'ZAN_REPAY' then  amount else  0 end ) as dep_zan_back,
            sum( case a.trans_type when 'ZAN_REPAY' then  1 else  0 end ) as dep_zan_back_count,
            sum( case a.trans_type when 'ZSD_REPAY' then  amount else  0 end ) as dep_zsd_back,
            sum( case a.trans_type when 'ZSD_REPAY' then  1 else  0 end ) as dep_zsd_back_count,
            sum( case a.trans_type when '7_DAI_SELF_REPAY' then  amount else  0 end ) as dep_seven_back,
            sum( case a.trans_type when '7_DAI_SELF_REPAY' then  1 else  0 end ) as dep_seven_back_count,
            sum( case a.trans_type when 'YUN_DAI_SELF_REPAY_2' then  amount else  0 end ) as dep_yun_back_2,
            sum( case a.trans_type when 'YUN_DAI_SELF_REPAY_2' then  1 else  0 end ) as dep_yun_back_count_2,
            sum( case a.trans_type when 'ZAN_REPAY_2' then  amount else  0 end ) as dep_zan_back_2,
            sum( case a.trans_type when 'ZAN_REPAY_2' then  1 else  0 end ) as dep_zan_back_count_2,
            sum( case a.trans_type when 'ZSD_REPAY_2' then  amount else  0 end ) as dep_zsd_back_2,
            sum( case a.trans_type when 'ZSD_REPAY_2' then  1 else  0 end ) as dep_zsd_back_count_2,
            sum( case a.trans_type when '7_DAI_SELF_REPAY_2' then  amount else  0 end ) as dep_seven_back_2,
            sum( case a.trans_type when '7_DAI_SELF_REPAY_2' then  1 else  0 end ) as dep_seven_back_count_2,
            sum( case a.trans_type when 'YUN_DAI_SELF_REPAY_2_TRANSFER' then  amount else  0 end ) as dep_yun_back_2_transfer,
            sum( case a.trans_type when 'YUN_DAI_SELF_REPAY_2_TRANSFER' then  1 else  0 end ) as dep_yun_back_count_2_transfer,
            sum( case a.trans_type when 'ZAN_REPAY_2_TRANSFER' then  amount else  0 end ) as dep_zan_back_2_transfer,
            sum( case a.trans_type when 'ZAN_REPAY_2_TRANSFER' then  1 else  0 end ) as dep_zan_back_count_2_transfer,
            sum( case a.trans_type when 'ZSD_REPAY_2_TRANSFER' then  amount else  0 end ) as dep_zsd_back_2_transfer,
            sum( case a.trans_type when 'ZSD_REPAY_2_TRANSFER' then  1 else  0 end ) as dep_zsd_back_count_2_transfer,
            sum( case a.trans_type when 'COMP_YUN_DAI_SELF' then  amount else  0 end ) as dep_yun_compensate,
            sum( case a.trans_type when 'COMP_YUN_DAI_SELF' then  1 else  0 end ) as dep_yun_compensate_count,
            sum( case a.trans_type when 'COMP_ZSD' then amount else 0 end ) as dep_zsd_compensate,
            sum( case a.trans_type when 'COMP_ZSD' then 1 else 0 end ) as dep_zsd_compensate_count,
            sum( case a.trans_type when 'COMP_7_DAI_SELF' then  amount else  0 end ) as dep_seven_compensate,
            sum( case a.trans_type when 'COMP_7_DAI_SELF' then  1 else  0 end ) as dep_seven_compensate_count
		from (
			select DATE_FORMAT(create_time,'%Y-%m-%d') trans_date,trans_type,amount from bs_pay_orders 
				where channel='BAOFOO' and `status`='6' 
					and trans_type in('BALANCE_WITHDRAW','BONUS_WITHDRAW','SYS_PARTNER_REVENUE','SYS_YUN_REPAY_REVENUE','SYS_ZSD_REPAY_REVENUE','SYS_SEVEN_REPAY_REVENUE',
						'SYS_YUN_REPEAT','SYS_ZSD_REPEAT','SYS_SEVEN_REPEAT')
					and DATE_FORMAT(create_time,'%Y-%m-%d') = DATE_FORMAT(update_time,'%Y-%m-%d') 
					<if test="startTime != null and startTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') >= #{startTime} 
						]]>
				    </if>
				    <if test="endTime != null and endTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') <= #{endTime} 
						]]>
				    </if> 
			union all 
			select DATE_FORMAT(create_time,'%Y-%m-%d') trans_date,if(trans_type='REPAY',CONCAT(partner_code,'_',trans_type),trans_type) as trans_type,
				amount from ln_pay_orders 
				where channel='BAOFOO' and `status`=6 
					and (trans_type='WITHDRAW_2_DEP_REPAY_CARD'  or ((payment_channel_id =1 or payment_channel_id is null) and trans_type='REPAY' and channel_trans_type='DK'))
					and DATE_FORMAT(create_time,'%Y-%m-%d') = DATE_FORMAT(update_time,'%Y-%m-%d')
					<if test="startTime != null and startTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') >= #{startTime} 
						]]>
				    </if>
				    <if test="endTime != null and endTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') <= #{endTime} 
						]]>
				    </if>
			union all 
			select DATE_FORMAT(create_time,'%Y-%m-%d') trans_date,trans_type,
				amount from ln_pay_orders
				where channel='HFBANK' and `status`=6
					and trans_type='CUT_REPAY_2_BORROWER'
					and DATE_FORMAT(create_time,'%Y-%m-%d') = DATE_FORMAT(update_time,'%Y-%m-%d')
					<if test="startTime != null and startTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') >= #{startTime}
						]]>
				    </if>
				    <if test="endTime != null and endTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') <= #{endTime}
						]]>
				    </if>
			union all 
			select DATE_FORMAT(create_time,'%Y-%m-%d') trans_date,if(trans_type='REPAY',CONCAT(partner_code,'_',trans_type,'_2'),trans_type) as trans_type,
				amount from ln_pay_orders
				where channel='BAOFOO' and `status`=6
					and payment_channel_id =2 and trans_type='REPAY' and channel_trans_type='DK'
					and DATE_FORMAT(create_time,'%Y-%m-%d') = DATE_FORMAT(update_time,'%Y-%m-%d')
					<if test="startTime != null and startTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') >= #{startTime}
						]]>
				    </if>
				    <if test="endTime != null and endTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') <= #{endTime}
						]]>
				    </if>
			union all
			select DATE_FORMAT(create_time,'%Y-%m-%d') trans_date,if(trans_type='REPAY',CONCAT(partner_code,'_',trans_type,'_2_',channel_trans_type),trans_type) as trans_type,
				amount from ln_pay_orders
				where channel='BAOFOO' and `status`=6
					and payment_channel_id =2 and trans_type='REPAY' and channel_trans_type='TRANSFER'
					and DATE_FORMAT(create_time,'%Y-%m-%d') = DATE_FORMAT(update_time,'%Y-%m-%d')
					<if test="startTime != null and startTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') >= #{startTime}
						]]>
				    </if>
				    <if test="endTime != null and endTime != ''">
				      <![CDATA[
							and DATE_FORMAT(create_time,'%Y-%m-%d') <= #{endTime}
						]]>
				    </if>
			union all
			select DATE_FORMAT(apply_time,'%Y-%m-%d') trans_date,concat('COMP_',partner_code) as trans_type,total_mount
				from ln_compensate where 1=1
				<if test="startTime != null and startTime != ''">
			      <![CDATA[
						and DATE_FORMAT(apply_time,'%Y-%m-%d') >= #{startTime}
					]]>
			    </if>
			    <if test="endTime != null and endTime != ''">
			      <![CDATA[
						and DATE_FORMAT(apply_time,'%Y-%m-%d') <= #{endTime}
					]]>
			    </if>
			union all 
			select DATE_FORMAT(a.pay_finsh_time,'%Y-%m-%d') trans_date ,concat(b.property_symbol,'_BACK') as trans_type,a.amount 
			from `bs_sys_receive_money` a, (select product_code,property_symbol 
				from bs_batch_buy group by product_code) b 
				where a.product_code=b.product_code 
				<if test="startTime != null and startTime != ''">
			      	<![CDATA[
						and DATE_FORMAT(a.pay_finsh_time,'%Y-%m-%d') >= #{startTime} 
					]]>
			    </if>
			    <if test="endTime != null and endTime != ''">
			      	<![CDATA[
						and DATE_FORMAT(a.pay_finsh_time,'%Y-%m-%d') <= #{endTime} 
					]]>
			    </if>
		) a group by a.trans_date 
	) t limit #{position}, #{offset} 
	</select>

    <!-- 出借匹配统计S -->
    <select id="selectLendingMatchForZan" resultMap="CorpusBuyStatisticsMap">
      SELECT
      (@rowNO := @rowNo + 1) rowno,
      t.*
      FROM
      (SELECT @rowNO := #{position}) b,
      (
      SELECT
      za.bs_user_id user_id,
      CASE WHEN zj.id IS NOT NULL THEN
      zj.amount
      ELSE
      za.total_amount
      END  amount,
      CASE WHEN zj.id IS NOT NULL THEN
      zj.amount
      ELSE
      za.total_amount
      END  balance,
      zb.user_name,
      zb.mobile mobile,
      zg.loan_time update_time,
      concat("3.",za.bs_user_id) customer_code,
      concat(zg.pay_order_no,za.id) order_no,
      CASE WHEN zj.id IS NOT NULL THEN
      (SELECT
      ROUND((zj.amount*ca.base_rate/1200*POW((1+ca.base_rate/1200),zg.period))/(POW((1+ca.base_rate/1200),zg.period)-1),2) * zg.period -zj.amount
      FROM(
      SELECT * FROM
      bs_product bb
      WHERE
      id= (SELECT
      ba.conf_value
      FROM bs_sys_config ba
      WHERE  ba.conf_key = 'SUPER_PRODUCT_ID')
      ) ca)
      ELSE
      (SELECT SUM(zc.plan_interest) FROM ln_finance_repay_schedule zc WHERE zc.relation_id = za.id)
      END user_interest,
      CASE WHEN zj.id IS NOT NULL THEN
      ROUND(zj.amount*0.15*(zg.period +1)/24,2)
      ELSE
      ROUND(za.total_amount*0.15*(zg.period +1)/24,2)
      END
      finance_interest,
      CASE WHEN zf.property_symbol  = 'ZAN' THEN
      '1.3'
      ELSE
      NULL
      END
      property_code
      FROM
      ln_loan_relation za LEFT JOIN ln_credit_transfer zi ON za.id = zi.in_loan_relation_id
      LEFT JOIN ln_credit_transfer zj ON za.id = zj.out_loan_relation_id,
      bs_user zb,
      bs_sub_account zd,
      bs_product ze,
      bs_property_info zf,
      ln_loan zg
      WHERE
      zi.id IS NULL
      AND za.bs_user_id = zb.id
      AND za.bs_sub_account_id = zd.id
      AND zd.product_id = ze.id
      AND ze.property_id = zf.id
      AND za.loan_id = zg.id
      AND (za.`status` = 'SUCCESS' OR za.`status` = 'REPAID')
      AND zf.property_symbol = 'ZAN'
      <if test="userType != null and userType != '' and userType == 'VIP'">
        and za.bs_user_id in
        <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
          #{userId}
        </foreach>
      </if>
      <if test="userType != null and userType != '' and userType == 'NORMAL'">
        and za.bs_user_id not in
        <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
          #{userId}
        </foreach>
      </if>
      <if test="userName != null and userName != ''">
        AND zb.user_name like concat(concat('%', #{userName}),'%')
      </if>
      <if test="mobile != null and mobile != ''">
        AND zb.mobile  like concat(concat('%', #{mobile}),'%')
      </if>
      <if test="startTime != null and startTime != ''">
        <![CDATA[ AND zg.loan_time >= #{startTime} ]]>
      </if>
      <if test="endTime != null and endTime != ''">
        <![CDATA[ AND zg.loan_time <= #{endTime} ]]>
      </if>
      ORDER BY update_time DESC, za.id DESC
      LIMIT #{position}, #{offset}
      ) t
    </select>

    <select id="selectLendingMatchForZanCount" resultType="java.lang.Integer">
      SELECT
      COUNT(*)
      FROM
      ln_loan_relation za LEFT JOIN ln_credit_transfer zi ON za.id = zi.in_loan_relation_id
      LEFT JOIN ln_credit_transfer zj ON za.id = zj.out_loan_relation_id,
      bs_user zb,
      bs_sub_account zd,
      bs_product ze,
      bs_property_info zf,
      ln_loan zg
      WHERE
      zi.id IS NULL
      AND za.bs_user_id = zb.id
      AND za.bs_sub_account_id = zd.id
      AND zd.product_id = ze.id
      AND ze.property_id = zf.id
      AND za.loan_id = zg.id
      AND (za.`status` = 'SUCCESS' OR za.`status` = 'REPAID')
      AND zf.property_symbol = 'ZAN'
      <if test="userType != null and userType != '' and userType == 'VIP'">
        and za.bs_user_id in
        <foreach close=")" collection="userIdList" index="index" item="userId" open="(" separator=",">
          #{userId}
        </foreach>
      </if>
      <if test="userType != null and userType != '' and userType == 'NORMAL'">
        and za.bs_user_id not in
        <foreach close=")" collection="userIdList" index="index" item="userId" open="(" separator=",">
          #{userId}
        </foreach>
      </if>
      <if test="userName != null and userName != ''">
        AND zb.user_name like concat(concat('%', #{userName}),'%')
      </if>
      <if test="mobile != null and mobile != ''">
        AND zb.mobile  like concat(concat('%', #{mobile}),'%')
      </if>
      <if test="startTime != null and startTime != ''">
        <![CDATA[ AND zg.loan_time >= #{startTime} ]]>
      </if>
      <if test="endTime != null and endTime != ''">
        <![CDATA[ AND zg.loan_time <= #{endTime} ]]>
      </if>
    </select>

    <select id="selectLendingMatchForZanTotalAmount" resultMap="CorpusBuyStatisticsMap">
      SELECT
      SUM(t.balance) corpus_buy_total_amount,
      SUM(t.finance_interest) corpus_buy_total_finance_interest ,
      SUM(t.user_interest) corpus_buy_total_user_interest
      FROM
      (
      SELECT
      za.bs_user_id user_id,
      CASE WHEN zj.id IS NOT NULL THEN
      zj.amount
      ELSE
      za.total_amount
      END  amount,
      CASE WHEN zj.id IS NOT NULL THEN
      zj.amount
      ELSE
      za.total_amount
      END  balance,
      zb.user_name,
      zb.mobile mobile,
      zg.loan_time update_time,
      concat("3.",za.bs_user_id) customer_code,
      concat(zg.pay_order_no,za.id) order_no,
      CASE WHEN zj.id IS NOT NULL THEN
      (SELECT
      ROUND((zj.amount*ca.base_rate/1200*POW((1+ca.base_rate/1200),zg.period))/(POW((1+ca.base_rate/1200),zg.period)-1),2) * zg.period -zj.amount
      FROM(
      SELECT * FROM
      bs_product bb
      WHERE
      id= (SELECT
      ba.conf_value
      FROM bs_sys_config ba
      WHERE  ba.conf_key = 'SUPER_PRODUCT_ID')
      ) ca)
      ELSE
      (SELECT SUM(zc.plan_interest) FROM ln_finance_repay_schedule zc WHERE zc.relation_id = za.id)
      END user_interest,
      CASE WHEN zj.id IS NOT NULL THEN
      ROUND(zj.amount*0.15*(zg.period +1)/24,2)
      ELSE
      ROUND(za.total_amount*0.15*(zg.period +1)/24,2)
      END
      finance_interest
      FROM
      ln_loan_relation za LEFT JOIN ln_credit_transfer zi ON za.id = zi.in_loan_relation_id
      LEFT JOIN ln_credit_transfer zj ON za.id = zj.out_loan_relation_id,
      bs_user zb,
      bs_sub_account zd,
      bs_product ze,
      bs_property_info zf, 
      ln_loan zg
      WHERE
      zi.id IS NULL
      AND za.bs_user_id = zb.id
      AND za.bs_sub_account_id = zd.id
      AND zd.product_id = ze.id
      AND za.loan_id = zg.id
      AND (za.`status` = 'SUCCESS' OR za.`status` = 'REPAID')
      AND ze.property_id = zf.id
      AND zf.property_symbol = 'ZAN'
      <if test="userType != null and userType != '' and userType == 'VIP'">
        and za.bs_user_id in
        <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
          #{userId}
        </foreach>
      </if>
      <if test="userType != null and userType != '' and userType == 'NORMAL'">
        and za.bs_user_id not in
        <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
          #{userId}
        </foreach>
      </if>
      <if test="userName != null and userName != ''">
        AND zb.user_name like concat(concat('%', #{userName}),'%')
      </if>
      <if test="mobile != null and mobile != ''">
        AND zb.mobile  like concat(concat('%', #{mobile}),'%')
      </if>
      <if test="startTime != null and startTime != ''">
        <![CDATA[ AND zg.loan_time >= #{startTime} ]]>
      </if>
      <if test="endTime != null and endTime != ''">
        <![CDATA[ AND zg.loan_time <= #{endTime} ]]>
      </if>
      ) t
    </select>
    <!-- 出借匹配统计E -->

    <!-- 支付融资客户赞分期出借 S  -->
    <select id="payFinanceStatisticsForZan" resultMap="PayFinanceStatisticsMap">
      SELECT
      (@rowNO := @rowNo + 1) rowno,
      t.*,t.balance+t.finance_interest  finance_total_amount,
      cast(cast(t.finance_interest as decimal(10,2))-cast(t.user_interest as decimal(10,2)) AS decimal(10,2)) interest_income
      FROM
      (SELECT @rowNO := #{position}) b,
      (
      SELECT
      za.bs_user_id user_id,
      CASE WHEN zj.id IS NOT NULL THEN
      zj.amount
      ELSE
      za.total_amount
      END  amount,
      CASE WHEN zj.id IS NOT NULL THEN
      zj.amount
      ELSE
      za.total_amount
      END  balance,
      zb.user_name,
      zb.mobile mobile,
      zg.loan_time update_time,
      concat("3.",za.bs_user_id) customer_code,
      concat(zg.pay_order_no,za.id)	order_no,
      CASE WHEN zj.id IS NOT NULL THEN
      (SELECT
      ROUND((zj.amount*ca.base_rate/1200*POW((1+ca.base_rate/1200),zg.period))/(POW((1+ca.base_rate/1200),zg.period)-1),2) * zg.period -zj.amount
      FROM(
      SELECT * FROM
      bs_product bb
      WHERE
      id= (SELECT
      ba.conf_value
      FROM bs_sys_config ba
      WHERE  ba.conf_key = 'SUPER_PRODUCT_ID')
      ) ca)
      ELSE
      (SELECT SUM(zc.plan_interest) FROM ln_finance_repay_schedule zc WHERE zc.relation_id = za.id)
      END user_interest,
      CASE WHEN zj.id IS NOT NULL THEN
      ROUND(zj.amount*0.15*(zg.period +1)/24,2)
      ELSE
      ROUND(za.total_amount*0.15*(zg.period +1)/24,2)
      END
      finance_interest,
      CASE WHEN zf.property_symbol  = 'ZAN' THEN
      '1.3'
      ELSE
      NULL
      END
      property_code
      FROM
      `ln_loan_relation` za LEFT JOIN ln_credit_transfer zi ON za.id = zi.in_loan_relation_id
      LEFT JOIN ln_credit_transfer zj ON za.id = zj.out_loan_relation_id,
      bs_user zb,
      bs_sub_account zd ,
      bs_product ze,
      bs_property_info zf,
      ln_loan zg
      WHERE
      zi.id IS NULL
      AND za.bs_user_id = zb.id
      AND za.bs_sub_account_id = zd.id
      AND zd.product_id = ze.id
      AND ze.property_id = zf.id
      AND za.loan_id = zg.id
      AND (za.`status` = 'SUCCESS' OR za.`status` = 'REPAID')
      AND zf.property_symbol = 'ZAN'
      <if test="userName != null and userName != ''">
        AND zb.user_name like concat(concat('%', #{userName}),'%')
      </if>
      <if test="mobile != null and mobile != ''">
        AND zb.mobile  like concat(concat('%', #{mobile}),'%')
      </if>
      <if test="startTime != null and startTime != ''">
        <![CDATA[ AND zg.loan_time >= #{startTime} ]]>
      </if>
      <if test="endTime != null and endTime != ''">
        <![CDATA[ AND zg.loan_time <= #{endTime} ]]>
      </if>
      ORDER BY
      update_time DESC
      LIMIT #{position}, #{offset}
      ) t
    </select>

    <select id="payFinanceStatisticsCountForZan" resultType="java.lang.Integer">
      SELECT
      COUNT(*)
      FROM
      `ln_loan_relation` za LEFT JOIN ln_credit_transfer zi ON  za.id = zi.in_loan_relation_id,
      bs_user zb,
      bs_sub_account zd ,
      bs_product ze,
      bs_property_info zf,
      ln_loan zg
      WHERE
      zi.id IS NULL
      AND za.bs_user_id = zb.id
      AND za.bs_sub_account_id = zd.id
      AND zd.product_id = ze.id
      AND ze.property_id = zf.id
      AND za.loan_id = zg.id
      AND (za.`status` = 'SUCCESS' OR za.`status` = 'REPAID')
      AND zf.property_symbol = 'ZAN'
      <if test="userName != null and userName != ''">
        AND zb.user_name like concat(concat('%', #{userName}),'%')
      </if>
      <if test="mobile != null and mobile != ''">
        AND zb.mobile  like concat(concat('%', #{mobile}),'%')
      </if>
      <if test="startTime != null and startTime != ''">
        <![CDATA[ AND zg.loan_time >= #{startTime} ]]>
      </if>
      <if test="endTime != null and endTime != ''">
        <![CDATA[ AND zg.loan_time <= #{endTime} ]]>
      </if>
    </select>

    <select id="payFinanceStatisticsTotalAmountForZan" resultMap="PayFinanceStatisticsMap">
      SELECT
      SUM(t.balance) total_balance,
      SUM(t.finance_interest) total_finance_interest,
      SUM(t.user_interest) total_user_interest
      FROM
      (
      SELECT
      za.bs_user_id user_id,
      CASE WHEN zj.id IS NOT NULL THEN
      zj.amount
      ELSE
      za.total_amount
      END  amount,
      CASE WHEN zj.id IS NOT NULL THEN
      zj.amount
      ELSE
      za.total_amount
      END  balance,
      zb.user_name,
      zb.mobile mobile,
      zg.loan_time update_time,
      concat("3.",za.bs_user_id) customer_code,
      concat(zg.pay_order_no,za.id)	order_no,
      CASE WHEN zj.id IS NOT NULL THEN
      (SELECT
      ROUND((zj.amount*ca.base_rate/1200*POW((1+ca.base_rate/1200),zg.period))/(POW((1+ca.base_rate/1200),zg.period)-1),2) * zg.period -zj.amount
      FROM(
      SELECT * FROM
      bs_product bb
      WHERE
      id= (SELECT
      ba.conf_value
      FROM bs_sys_config ba
      WHERE  ba.conf_key = 'SUPER_PRODUCT_ID')
      ) ca)
      ELSE
      (SELECT SUM(zc.plan_interest) FROM ln_finance_repay_schedule zc WHERE zc.relation_id = za.id)
      END user_interest,
      CASE WHEN zj.id IS NOT NULL THEN
      ROUND(zj.amount*0.15*(zg.period +1)/24,2)
      ELSE
      ROUND(za.total_amount*0.15*(zg.period +1)/24,2)
      END
      finance_interest
      FROM
      `ln_loan_relation` za LEFT JOIN ln_credit_transfer zi ON za.id = zi.in_loan_relation_id
      LEFT JOIN ln_credit_transfer zj ON za.id = zj.out_loan_relation_id,
      bs_user zb,
      bs_sub_account zd ,
      bs_product ze,
      bs_property_info zf,
      ln_loan zg
      WHERE
      zi.id IS NULL
      AND za.bs_user_id = zb.id
      AND za.bs_sub_account_id = zd.id
      AND zd.product_id = ze.id
      AND ze.property_id = zf.id
      AND za.loan_id = zg.id
      AND (za.`status` = 'SUCCESS' OR za.`status` = 'REPAID')
      AND zf.property_symbol = 'ZAN'
      <if test="userName != null and userName != ''">
        AND zb.user_name like concat(concat('%', #{userName}),'%')
      </if>
      <if test="mobile != null and mobile != ''">
        AND zb.mobile  like concat(concat('%', #{mobile}),'%')
      </if>
      <if test="startTime != null and startTime != ''">
        <![CDATA[ AND zg.loan_time >= #{startTime} ]]>
      </if>
      <if test="endTime != null and endTime != ''">
        <![CDATA[ AND zg.loan_time <= #{endTime} ]]>
      </if>
      ) t
    </select>
    <!-- 支付融资客户赞分期出借 E  -->
     <!-- 返还投资人手续费 S  -->
  <resultMap id="ReturnFeeToInvestorMap" type="com.pinting.business.model.vo.ReturnFeeToInvestorVO">
    <result column="rowno" jdbcType="INTEGER" property="rowno" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="update_time" jdbcType="TIMESTAMP" property="time" />
    <result column="partner_code" jdbcType="VARCHAR" property="partnerCode" />
    <result column="return_fee_amount" jdbcType="DOUBLE" property="returnFeeAmount" />
  </resultMap>

  <select id="returnFeeToInvestor" resultMap="ReturnFeeToInvestorMap">
    SELECT
    (@rowNO := @rowNo + 1) rowno,
    t.*
    FROM
    (SELECT @rowNO := #{position}) b,
    (
        SELECT concat("3.",a.user_id) user_id, a.user_name, a.mobile, a.order_no, a.update_time,
               CASE b.product_type WHEN 'AUTH_ZSD' THEN 'ZSD'
               WHEN 'AUTH_YUN' THEN 'YUN_DAI_SELF'
               WHEN 'AUTH_7' THEN '7_DAI_SELF'
               WHEN 'AUTH_FREE' THEN 'FREE'
               END partner_code,
               a.amount as return_fee_amount
        FROM bs_pay_orders a
        LEFT JOIN bs_sub_account b ON a.sub_account_id = b.id
        WHERE a.trans_type = 'DEP_FILL_INTEREST' AND a.status = 6
        <if test="partnerCode != null and partnerCode != '' and partnerCode == 'zsd' ">
          AND b.product_type = 'AUTH_ZSD'
        </if>
        <if test="partnerCode != null and partnerCode != '' and partnerCode == 'yun' ">
          AND b.product_type = 'AUTH_YUN'
        </if>
        <if test="partnerCode != null and partnerCode != '' and partnerCode == 'seven' ">
          AND b.product_type = 'AUTH_7'
        </if>
        <if test="partnerCode != null and partnerCode != '' and partnerCode == 'free' ">
          AND b.product_type = 'AUTH_FREE'
        </if>
        <if test="partnerCode == null or partnerCode == '' ">
          AND (b.product_type = 'AUTH_ZSD' OR b.product_type = 'AUTH_YUN' OR b.product_type = 'AUTH_7' OR b.product_type = 'AUTH_FREE')
        </if>
        <if test="userName != null and userName != ''">
          AND a.user_name like concat(concat('%', #{userName}),'%')
        </if>
        <if test="mobile != null and mobile != ''">
          AND a.mobile  like concat(concat('%', #{mobile}),'%')
        </if>
        <if test="startTime != null and startTime != ''">
          <![CDATA[
                        AND a.update_time >= #{startTime}
                    ]]>
        </if>
        <if test="endTime != null and endTime != ''">
          <![CDATA[
                        AND a.update_time <= #{endTime}
                    ]]>
        </if>

        ORDER BY
        update_time DESC
        LIMIT #{position}, #{offset}
    ) t
  </select>

  <select id="returnFeeToInvestorCount" resultType="java.lang.Integer">
    SELECT COUNT(a.id)
    FROM bs_pay_orders a
    LEFT JOIN bs_sub_account b ON a.sub_account_id = b.id
    WHERE a.trans_type = 'DEP_FILL_INTEREST' AND a.status = 6
    <if test="partnerCode != null and partnerCode != '' and partnerCode == 'zsd' ">
      AND b.product_type = 'AUTH_ZSD'
    </if>
    <if test="partnerCode != null and partnerCode != '' and partnerCode == 'yun' ">
      AND b.product_type = 'AUTH_YUN'
    </if>
    <if test="partnerCode != null and partnerCode != '' and partnerCode == 'seven' ">
      AND b.product_type = 'AUTH_7'
    </if>
    <if test="partnerCode != null and partnerCode != '' and partnerCode == 'free' ">
      AND b.product_type = 'AUTH_FREE'
    </if>
    <if test="partnerCode == null or partnerCode == '' ">
      AND (b.product_type = 'AUTH_ZSD' OR b.product_type = 'AUTH_YUN' OR b.product_type = 'AUTH_7' OR b.product_type = 'AUTH_FREE')
    </if>
    <if test="userName != null and userName != ''">
      AND a.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND a.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
                        AND a.update_time >= #{startTime}
                    ]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
                        AND a.update_time <= #{endTime}
                    ]]>
    </if>
  </select>

  <select id="returnFeeToInvestorTotalAmount" resultType="java.lang.Double">
    SELECT IFNULL(SUM(a.amount),0)
    FROM bs_pay_orders a
    LEFT JOIN bs_sub_account b ON a.sub_account_id = b.id
    WHERE a.trans_type = 'DEP_FILL_INTEREST' AND a.status = 6
    <if test="partnerCode != null and partnerCode != '' and partnerCode == 'zsd' ">
      AND b.product_type = 'AUTH_ZSD'
    </if>
    <if test="partnerCode != null and partnerCode != '' and partnerCode == 'yun' ">
      AND b.product_type = 'AUTH_YUN'
    </if>
    <if test="partnerCode != null and partnerCode != '' and partnerCode == 'seven' ">
      AND b.product_type = 'AUTH_7'
    </if>
    <if test="partnerCode != null and partnerCode != '' and partnerCode == 'free' ">
      AND b.product_type = 'AUTH_FREE'
    </if>
    <if test="partnerCode == null or partnerCode == '' ">
      AND (b.product_type = 'AUTH_ZSD' OR b.product_type = 'AUTH_YUN' OR b.product_type = 'AUTH_7' OR b.product_type = 'AUTH_FREE')
    </if>
    <if test="userName != null and userName != ''">
      AND a.user_name like concat(concat('%', #{userName}),'%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND a.mobile  like concat(concat('%', #{mobile}),'%')
    </if>
    <if test="startTime != null and startTime != ''">
      <![CDATA[
                        AND a.update_time >= #{startTime}
                    ]]>
    </if>
    <if test="endTime != null and endTime != ''">
      <![CDATA[
                        AND a.update_time <= #{endTime}
                    ]]>
    </if>
  </select>

  <!-- 返还投资人手续费 E  -->
  
  <!-- =============================云贷/赞时贷营收代收代付S ======================== -->
 
 <select id="revenueCollectionRepayYunZSDList" resultMap="RevenueCollectionRepayMap">
  	SELECT
		(@rowNO := @rowNo + 1) rowno,
		t.*
	FROM
		(SELECT @rowNO := #{position}) b,
		(
			-- 云贷，赞时贷营收
			SELECT 
				bb.user_name  user_name,
				bb.mobile  mobile,
				'REVENUE'	type,
				b.revenue_amount revenue_collection,
				''	revenue_pay,
				b.create_time settle_date
			FROM
			bs_revenue_trans_detail b,
			ln_loan ba,
			ln_user bb
			WHERE
			b.loan_id = ba.id
			AND ba.ln_user_id = bb.id
			AND b.trans_type = 'REVENUE_INCOME' 
			AND b.partner_code = #{partnerCode}

			UNION ALL
			-- 重复还款
			SELECT 
				cc.user_name  user_name,
				cc.mobile  mobile,
				'REPEAT_REPAY'	type,
				c.repay_amount	revenue_collection,
				''	revenue_pay,
				c.settle_date	settle_date
			FROM 
			ln_repeat_repay_record c,
			ln_repay_schedule ca,
			ln_loan cb,
			ln_user cc
			WHERE 
			c.repay_plan_id = ca.id
			AND ca.loan_id = cb.id
			AND cb.ln_user_id = cc.id
			AND c.partner_code = #{partnerCode}

			UNION ALL
			<if test="partnerCode!='ZSD' and partnerCode!='YUN_DAI_SELF' and partnerCode !='7_DAI_SELF' ">
				-- 补息，已取消
				SELECT 
					db.user_name  user_name,
					db.mobile  mobile,
					'FILL_INTEREST'	type,
					''	revenue_collection,
					d.amount	revenue_pay,
					d.fill_date	settle_date
				FROM 
				ln_account_fill_detail d,
				ln_repay da,
				ln_user db
				WHERE 
				d.relative_no = da.id
				AND da.ln_user_id = db.id
				AND d.partner_code = 'YUN_DAI_SELF'
				AND d.fill_type = 'INTEREST'
				AND d.`status` = 'SUCCESS'
				UNION ALL
				-- 补账，已取消
				SELECT 
					'-'  user_name,
					'-'  mobile,
					'FILL_ACCOUNT'	type,
					e.amount	revenue_collection,
					''	revenue_pay,
					e.fill_date	settle_date
				FROM 
				ln_account_fill e
				WHERE
				e.`status` = 'SUCCESS'
				UNION ALL
			</if>
			-- 重复还款清算
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'REPEAT_REPAY_SETTLE'	type,
				''	revenue_collection,
				SUM(f.repay_amount)	revenue_pay,
				f.finish_time	settle_date
			FROM 
			ln_repeat_repay_record f
			WHERE 
			f.partner_code = #{partnerCode}
			AND f.`status` = 'SUCC'
			GROUP BY f.settle_date 
			
			UNION ALL
			-- 营收清算
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'REPAY_REVENUE'	type,
				''	revenue_collection,
				g.amount	revenue_pay,
				g.settle_date	settle_date
			FROM 
			bs_revenue_trans_record  g
			WHERE 
			g.payee_code =  #{partnerCode}
			AND g.settle_type = 'REPAY_REVENUE'
			AND g.`status` = 'SUCCESS'
		) t WHERE 1=1
		
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
		LIMIT #{position}, #{offset}
  </select>
  
  
  
 <select id="revenueCollectionRepayYunZSDCount" resultType="java.lang.Integer">
		SELECT 
			COUNT(*)
		FROM
		(
			-- 云贷，赞时贷营收
			SELECT 
				bb.user_name  user_name,
				bb.mobile  mobile,
				'REVENUE'	type,
				b.revenue_amount revenue_collection,
				''	revenue_pay,
				b.create_time settle_date
			FROM
			bs_revenue_trans_detail b,
			ln_loan ba,
			ln_user bb
			WHERE
			b.loan_id = ba.id
			AND ba.ln_user_id = bb.id
			AND b.trans_type = 'REVENUE_INCOME' 
			AND b.partner_code =  #{partnerCode}

			UNION ALL
			-- 重复还款
			SELECT 
				cc.user_name  user_name,
				cc.mobile  mobile,
				'REPEAT_REPAY'	type,
				c.repay_amount	revenue_collection,
				''	revenue_pay,
				c.settle_date	settle_date
			FROM 
			ln_repeat_repay_record c,
			ln_repay_schedule ca,
			ln_loan cb,
			ln_user cc
			WHERE 
			c.repay_plan_id = ca.id
			AND ca.loan_id = cb.id
			AND cb.ln_user_id = cc.id
			AND c.partner_code =  #{partnerCode}
			<if test="partnerCode!='ZSD' and partnerCode!='YUN_DAI_SELF' and partnerCode !='7_DAI_SELF' ">
				UNION ALL
				-- 补息，已取消
				SELECT 
					db.user_name  user_name,
					db.mobile  mobile,
					'FILL_INTEREST'	type,
					''	revenue_collection,
					d.amount	revenue_pay,
					d.fill_date	settle_date
				FROM 
				ln_account_fill_detail d,
				ln_repay da,
				ln_user db
				WHERE 
				d.relative_no = da.id
				AND da.ln_user_id = db.id
				AND d.partner_code = 'YUN_DAI_SELF'
				AND d.fill_type = 'INTEREST'
				AND d.`status` = 'SUCCESS'
				UNION ALL
				-- 补账，已取消
				SELECT 
					'-'  user_name,
					'-'  mobile,
					'FILL_ACCOUNT'	type,
					e.amount	revenue_collection,
					''	revenue_pay,
					e.fill_date	settle_date
				FROM 
				ln_account_fill e
				WHERE
				e.`status` = 'SUCCESS'
			</if>
			UNION ALL
			-- 重复还款清算
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'REPEAT_REPAY_SETTLE'	type,
				''	revenue_collection,
				SUM(f.repay_amount)	revenue_pay,
				f.finish_time	settle_date
			FROM 
			ln_repeat_repay_record f
			WHERE 
			f.partner_code = #{partnerCode}
			AND f.`status` = 'SUCC'
			GROUP BY f.settle_date 
			
			UNION ALL
			-- 营收清算
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'REPAY_REVENUE'	type,
				''	revenue_collection,
				g.amount	revenue_pay,
				g.settle_date	settle_date
			FROM 
			bs_revenue_trans_record  g
			WHERE 
			g.payee_code =  #{partnerCode}
			AND g.settle_type = 'REPAY_REVENUE'
			AND g.`status` = 'SUCCESS'
		) t WHERE 1=1
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
		
 </select>
 
 
 
<select id="revenueCollectionRepayYunZSDSum" resultType="java.lang.Double">
		
	<if test="revenueType != null and revenueType != '' and revenueType == 'REVENUE_COLLECTION'"> 			
		SELECT 
			SUM(t.revenue_collection)
		FROM
		(
			-- 云贷，赞时贷 营收
			SELECT 
				bb.user_name  user_name,
				bb.mobile  mobile,
				'REVENUE'	type,
				b.revenue_amount revenue_collection,
				''	revenue_pay,
				b.create_time settle_date
			FROM
			bs_revenue_trans_detail b,
			ln_loan ba,
			ln_user bb
			WHERE
			b.loan_id = ba.id
			AND ba.ln_user_id = bb.id
			AND b.trans_type = 'REVENUE_INCOME' 
			AND b.partner_code =  #{partnerCode}

			UNION ALL
			-- 重复还款
			SELECT 
				cc.user_name  user_name,
				cc.mobile  mobile,
				'REPEAT_REPAY'	type,
				c.repay_amount	revenue_collection,
				''	revenue_pay,
				c.settle_date	settle_date
			FROM 
			ln_repeat_repay_record c,
			ln_repay_schedule ca,
			ln_loan cb,
			ln_user cc
			WHERE 
			c.repay_plan_id = ca.id
			AND ca.loan_id = cb.id
			AND cb.ln_user_id = cc.id
			AND c.partner_code =  #{partnerCode}

			<if test="partnerCode!='ZSD' and partnerCode!='YUN_DAI_SELF' and partnerCode !='7_DAI_SELF' ">
				UNION ALL
				-- 补账，已取消
				SELECT 
					'-'  user_name,
					'-'  mobile,
					'FILL_ACCOUNT'	type,
					e.amount	revenue_collection,
					''	revenue_pay,
					e.fill_date	settle_date
				FROM 
				ln_account_fill e
				WHERE
				e.`status` = 'SUCCESS'
			</if>	
			
		) t WHERE 1=1
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
	</if>
	
	
	<if test="revenueType != null and revenueType != '' and revenueType == 'REVENUE_PAY'"> 
					
		SELECT 
			SUM(t.revenue_pay)
		FROM
		(

			<if test="partnerCode!='ZSD' and partnerCode!='YUN_DAI_SELF' and partnerCode !='7_DAI_SELF'  ">
				-- 补息，已取消
				SELECT 
					db.user_name  user_name,
					db.mobile  mobile,
					'FILL_INTEREST'	type,
					''	revenue_collection,
					d.amount	revenue_pay,
					d.fill_date	settle_date
				FROM 
				ln_account_fill_detail d,
				ln_repay da,
				ln_user db
				WHERE 
				d.relative_no = da.id
				AND da.ln_user_id = db.id
				AND d.partner_code = 'YUN_DAI_SELF'
				AND d.fill_type = 'INTEREST'
				AND d.`status` = 'SUCCESS'
				UNION ALL
			</if>
			-- 重复还款清算
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'REPEAT_REPAY_SETTLE'	type,
				''	revenue_collection,
				SUM(f.repay_amount)	revenue_pay,
				f.finish_time settle_date
			FROM 
			ln_repeat_repay_record f
			WHERE 
			f.partner_code =  #{partnerCode}
			AND f.`status` = 'SUCC'
			GROUP BY f.settle_date 
			
			UNION ALL
			-- 营收清算
			SELECT 
				'-'  user_name,
				'-'  mobile,
				'REPAY_REVENUE'	type,
				''	revenue_collection,
				g.amount	revenue_pay,
				g.settle_date	settle_date
			FROM 
			bs_revenue_trans_record  g
			WHERE 
			g.payee_code =  #{partnerCode}
			AND g.settle_type = 'REPAY_REVENUE'
			AND g.`status` = 'SUCCESS'
			
		) t WHERE 1=1
		<if test="userName != null and userName != ''"> 
			AND t.user_name like concat(concat('%', #{userName}),'%')
		</if>
		<if test="mobile != null and mobile != ''"> 
			AND t.mobile  like concat(concat('%', #{mobile}),'%')
		</if>
		<if test="type != null and type != ''"> 
			AND t.type  = #{type}
		</if>
		<if test="startTime != null and startTime != ''"> 
			<![CDATA[
				AND t.settle_date >= #{startTime}
			]]>
		</if>
		<if test="endTime != null and endTime != ''"> 
			<![CDATA[
				AND t.settle_date <= #{endTime}
			]]>
		</if>
	</if>	
 </select>
  
<!-- =============================云贷/赞时贷 营收代收代付E ======================== -->
	<!--  赞分期产品统计-融资客户结算 S -->
  <select id="depZanBalanceFinanceStatistics" resultMap="BalanceFinanceStatisticsMap">
    SELECT
    (@rowNO := @rowNo + 1) rowno,
    t.*,t.balance+t.finance_interest  finance_total_amount
    FROM
    (SELECT @rowNO := #{position}) b,
    (
		    SELECT p3.user_id,p3.balance,p3.user_name,p3.mobile,p3.update_time,p3.customer_code,
		    p3.order_no,p3.finance_interest,p3.property_code,p3.note,p3.total_amount,p3.serial_id,p3.period,
		    p3.loan_id,p3.sum_finance_interest,p3.sum_finance_interest_all,p3.is_min,
		    CASE WHEN  p4.trans_amount_total IS NOT NULL THEN p4.trans_amount_total 
						WHEN p5.trans_amount_total IS NOT NULL THEN p5.trans_amount_total ELSE 0 END  trans_amount_total FROM(
		    select zan.*,bu.user_name,bu.mobile,case when min.loan_id is not null then 1 end as is_min
		    from(
			    SELECT lr.bs_user_id user_id,
			    ROUND(ll.approve_amount/ll.period*(lr.total_amount/ll.approve_amount)-0.005,2) as balance,
			    case when lrs.`status`='LATE_NOT' or lrs.`status`='LATE_REPAIED' then DATE_ADD(lrs.plan_date,INTERVAL 1 DAY) else
			    DATE_FORMAT(lre.done_time, '%Y-%m-%d') end as update_time,
			    concat("3.",lr.bs_user_id) customer_code,
			    concat("160","00",lr.id,"00",lr.loan_id,"00",lrs.serial_id) order_no,
			    ROUND(ll.approve_amount*0.15*(ll.period+1)/(ll.period*24)*(lr.total_amount/ll.approve_amount)-0.005,2) as
			    finance_interest,
			    '1.3' property_code,
			    case when lrs.`status`!='REPAIED' then '逾期' else '正常' end note,
			    lr.total_amount,
			    lrs.serial_id,
			    ll.period,
			    ll.id as loan_id,
			    ROUND(ll.approve_amount*0.15*(ll.period+1)/(ll.period*24)-0.005,2) as sum_finance_interest,
			    case when lrs.serial_id=ll.period then ROUND(ll.approve_amount*0.15*(ll.period+1)/24-0.005,2) end as
			    sum_finance_interest_all
			    from ln_loan_relation lr,ln_loan ll,
			    (
					    SELECT * FROM ln_repay_schedule a WHERE   
					    a.`status` != 'INIT'  AND  a.`status` != 'PART_REPAY'  
					    AND  IF(`status` IN ('LATE_NOT', 'LATE_REPAIED'),
					    DATE_ADD(a.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
					    AND DATE_ADD(a.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d')
					    ,DATE_FORMAT(a.finish_time, '%Y-%m-%d')  >= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
					    AND DATE_FORMAT(a.finish_time, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d'))
			    ) lrs LEFT JOIN ln_repay lre on lre.repay_plan_id = lrs.id and lre.`status`='REPAIED',
				ln_user lu
			    where lr.loan_id = ll.id and ll.id = lrs.loan_id
			    AND ll.ln_user_id = lu.id AND lu.partner_code = 'ZAN'
			    and lr.`status` in ('REPAID','SUCCESS')
			    and lrs.`status` not in( 'INIT','PART_REPAY')
				AND lr.total_amount > 0
			    AND IF(lrs.`status` in( 'LATE_NOT','LATE_REPAIED'),
			    DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(
			    #{startTime},
			    '%Y-%m-%d'
			    )
			    AND DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(
			    #{endTime},
			    '%Y-%m-%d'
			    ),
			    DATE_FORMAT(lre.done_time, '%Y-%m-%d') >= DATE_FORMAT(
			    #{startTime},
			    '%Y-%m-%d'
			    )
			    AND DATE_FORMAT(lre.done_time, '%Y-%m-%d') &lt;= DATE_FORMAT(
			    #{endTime},
			    '%Y-%m-%d'
			    ))
		    )zan
		    LEFT JOIN
		    (   SELECT
		    min(ROUND(ll.approve_amount*0.15*(ll.
		    period+1)/(ll.period*24)*(
		    lr.total_amount/ll.approve_amount)-0.005,2)) as
		    finance_interest,
		    lr.total_amount,lrs.
		    serial_id,ll.period,ll.id as loan_id
		    from ln_loan_relation lr,ln_loan ll,ln_user lu,
		    (
			    SELECT * FROM ln_repay_schedule a WHERE   
			    a.`status` != 'INIT'  AND  a.`status` != 'PART_REPAY'  
			    AND  IF(`status` IN ('LATE_NOT', 'LATE_REPAIED'),
			    DATE_ADD(a.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
			    AND DATE_ADD(a.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d')
			    ,DATE_FORMAT(a.finish_time, '%Y-%m-%d') >= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
					    AND DATE_FORMAT(a.finish_time, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d'))
		    )
		    lrs LEFT JOIN ln_repay
		    lre on lre.repay_plan_id = lrs.id and lre.`status`
		    ='REPAIED'
		    where lr.
		    loan_id = ll.id and ll.id = lrs.loan_id
		    AND ll.ln_user_id = lu.id and lu.partner_code = 'ZAN'
		    and lr.`status` in( 'REPAID','SUCCESS')
		    and lrs.`status` not in( 'INIT','PART_REPAY')
		    AND lr.total_amount > 0
		    AND IF(lrs.`status` in( 'LATE_NOT','LATE_REPAIED'),
		    DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(
		    #{startTime},
		    '%Y-%m-%d'
		    )
		    AND DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(
		    #{endTime},
		    '%Y-%m-%d'
		    ),
		    DATE_FORMAT(lre.done_time, '%Y-%m-%d') >= DATE_FORMAT(
		    #{startTime},
		    '%Y-%m-%d'
		    )
		    AND DATE_FORMAT(lre.done_time, '%Y-%m-%d') &lt;= DATE_FORMAT(
		    #{endTime},
		    '%Y-%m-%d'
		    ))
		    GROUP BY
		    serial_id,period,loan_id
		    ) min on zan.loan_id = min.loan_id
		    and zan.serial_id = min.serial_id
		    and zan.finance_interest = min.finance_interest,
		    bs_user bu
		    where
		    bu.id=zan.user_id
		    <if test="userName != null and userName != ''">
		      AND bu.user_name like concat(concat('%', #{userName}),'%')
		    </if>
		    <if test=" mobile != null and mobile != ''">
		      AND bu.mobile like concat(concat('%', #{mobile}),'%')
		    </if>
		    ORDER BY update_time DESC,loan_id,serial_id asc,finance_interest DESC
		    ) p3  LEFT JOIN (
						SELECT 
							-a.trans_amount trans_amount_total,
							a.id sys_account_jnl_id,
							b.id repay_schedule_id,
							b.loan_id,
							MIN(d.bs_user_id) user_id,
							b.serial_id
						FROM 
						`bs_sys_account_jnl` a,
						ln_repay_schedule b,
						ln_loan c,
						ln_loan_relation d
						WHERE 
						a.op_id = b.id
						AND b.loan_id = c.id
						AND c.id = d.loan_id
						AND a.trans_code = 'SYS_HTD_HD_BGW_REVENUE_ZAN'
						AND sys_time >= '2017-11-08 00:00:00'
						AND a.trans_amount &lt; 0 
						AND d.total_amount > 0
						GROUP BY  a.op_id
				) p4 ON p3.user_id = p4.user_id AND p3.loan_id = p4.loan_id and p3.serial_id =  p4.serial_id
				LEFT JOIN (
						SELECT 
							-b.bgw_service_fee trans_amount_total,
							a.id repay_schedule_id,
							a.loan_id,
							MIN(d.bs_user_id) user_id,
							a.serial_id
						FROM 
						ln_repay_schedule a,
						bs_revenue_trans_detail b,
						ln_loan c,
						ln_loan_relation d
						WHERE 
						a.id = b.repay_schedule_id
						AND a.loan_id = c.id
						AND c.id = d.loan_id
						AND b.partner_code = 'ZAN'
						AND b.create_time &lt; '2017-11-08 00:00:00'
						AND b.repay_id IS NOT NULL
						AND b.bgw_service_fee &lt; 0 
						AND d.total_amount > 0
						AND ((b.trans_type = 'REVENUE_INCOME'  AND a.`status` = 'REPAIED')
							OR (b.trans_type = 'REVENUE_DEDUCT')
						) GROUP BY  b.repay_schedule_id
						
				)p5 ON p3.user_id = p5.user_id AND p3.loan_id = p5.loan_id and p3.serial_id =  p5.serial_id

    ) t where 1=1
    <if test="note != null and note != ''">
      AND t.note = '逾期'
    </if>
    LIMIT #{position}, #{offset}
  </select>

  <select id="depZanBalanceFinanceStatisticsCount" resultType="java.lang.Integer">
    SELECT
    COUNT(*)
    FROM
    (
		    SELECT p3.user_id,p3.balance,p3.user_name,p3.mobile,p3.update_time,p3.customer_code,
		    p3.order_no,p3.finance_interest,p3.property_code,p3.note,p3.total_amount,p3.serial_id,p3.period,
		    p3.loan_id,p3.sum_finance_interest,p3.sum_finance_interest_all FROM(
		    select zan.*,bu.user_name,bu.mobile
		    from(
		    SELECT lr.bs_user_id user_id,
		    ROUND(ll.approve_amount/ll.period*(lr.total_amount/ll.approve_amount)-0.005,2) as balance,
		    case when lrs.`status`='LATE_NOT' or lrs.`status`='LATE_REPAIED' then DATE_ADD(lrs.plan_date,INTERVAL 1 DAY) else
		    DATE_FORMAT(lre.done_time, '%Y-%m-%d') end as update_time,
		    concat("3.",lr.bs_user_id) customer_code,
		    concat("160","00",lr.id,"00",lr.loan_id,"00",lrs.serial_id) order_no,
		    ROUND(ll.approve_amount*0.15*(ll.period+1)/(ll.period*24)*(lr.total_amount/ll.approve_amount)-0.005,2) as
		    finance_interest,
		    '1.3' property_code,
		    case when lrs.`status`!='REPAIED' then '逾期' end note,
		    lr.total_amount,
		    lrs.serial_id,
		    ll.period,
		    ll.id as loan_id,
		    ROUND(ll.approve_amount*0.15*(ll.period+1)/(ll.period*24)-0.005,2) as sum_finance_interest,
		    case when lrs.serial_id=ll.period then ROUND(ll.approve_amount*0.15*(ll.period+1)/24-0.005,2) end as
		    sum_finance_interest_all
		    from ln_loan_relation lr,ln_loan ll,
		    (
				    SELECT * FROM ln_repay_schedule a WHERE   
				    a.`status` != 'INIT'  AND  a.`status` != 'PART_REPAY'  
				    AND  IF(`status` IN ('LATE_NOT', 'LATE_REPAIED'),
				    DATE_ADD(a.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
				    AND DATE_ADD(a.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d')
				    ,DATE_FORMAT(a.finish_time, '%Y-%m-%d') >= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
					    AND DATE_FORMAT(a.finish_time, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d'))
		    ) lrs LEFT JOIN ln_repay lre on lre.repay_plan_id = lrs.id and lre.`status`='REPAIED',
			ln_user lu
		    where lr.loan_id = ll.id and ll.id = lrs.loan_id
		    AND ll.ln_user_id = lu.id AND lu.partner_code = 'ZAN'
		    and lr.`status` in ('REPAID','SUCCESS')
		    and lrs.`status` not in( 'INIT','PART_REPAY')
			AND lr.total_amount > 0
		    AND IF(lrs.`status` in( 'LATE_NOT','LATE_REPAIED'),
		    DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(
		    #{startTime},
		    '%Y-%m-%d'
		    )
		    AND DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(
		    #{endTime},
		    '%Y-%m-%d'
		    ),
		    DATE_FORMAT(lre.done_time, '%Y-%m-%d') >= DATE_FORMAT(
		    #{startTime},
		    '%Y-%m-%d'
		    )
		    AND DATE_FORMAT(lre.done_time, '%Y-%m-%d') &lt;= DATE_FORMAT(
		    #{endTime},
		    '%Y-%m-%d'
		    ))
		    )zan, bs_user bu
		    where
		    bu.id=zan.user_id
		    <if test="userName != null and userName != ''">
		      AND bu.user_name like concat(concat('%', #{userName}),'%')
		    </if>
		    <if test=" mobile != null and mobile != ''">
		      AND bu.mobile like concat(concat('%', #{mobile}),'%')
		    </if>
		    ORDER BY update_time DESC,loan_id,serial_id asc,finance_interest DESC
		    ) p3

    ) t where 1=1
    <if test="note != null and note != ''">
      AND t.note = '逾期'
    </if>
  </select>


  <select id="depZanBalanceFinanceStatisticsTotalAmount" resultMap="BalanceFinanceStatisticsMap">
    SELECT
    case when SUM(t.balance) is not null then SUM(t.balance)else 0 end total_balance,
    case when SUM(t.finance_interest) is not null then SUM(t.finance_interest) else 0 end total_finance_interest
    FROM
    (
		    SELECT p3.user_id,p3.balance,p3.user_name,p3.mobile,p3.update_time,p3.customer_code,
		    p3.order_no,p3.finance_interest,p3.property_code,p3.note,p3.total_amount,p3.serial_id,p3.period,
		    p3.loan_id,p3.sum_finance_interest,p3.sum_finance_interest_all,p3.is_min FROM(
		    select zan.*,bu.user_name,bu.mobile,case when min.loan_id is not null then 1 end as is_min
		    from(
		    SELECT lr.bs_user_id user_id,
		    ROUND(ll.approve_amount/ll.period*(lr.total_amount/ll.approve_amount)-0.005,2) as balance,
		    case when lrs.`status`='LATE_NOT' or lrs.`status`='LATE_REPAIED' then DATE_ADD(lrs.plan_date,INTERVAL 1 DAY) else
		    DATE_FORMAT(lre.done_time, '%Y-%m-%d') end as update_time,
		    concat("3.",lr.bs_user_id) customer_code,
		    concat("160","00",lr.id,"00",lr.loan_id,"00",lrs.serial_id) order_no,
		    ROUND(ll.approve_amount*0.15*(ll.period+1)/(ll.period*24)*(lr.total_amount/ll.approve_amount)-0.005,2) as
		    finance_interest,
		    '1.3' property_code,
		    case when lrs.`status`!='REPAIED' then '逾期' end note,
		    lr.total_amount,
		    lrs.serial_id,
		    ll.period,
		    ll.id as loan_id,
		    ROUND(ll.approve_amount*0.15*(ll.period+1)/(ll.period*24)-0.005,2) as sum_finance_interest,
		    case when lrs.serial_id=ll.period then ROUND(ll.approve_amount*0.15*(ll.period+1)/24-0.005,2) end as
		    sum_finance_interest_all
		    from ln_loan_relation lr,ln_loan ll,
		    (
			    SELECT * FROM ln_repay_schedule a WHERE   
			    a.`status` != 'INIT'  AND  a.`status` != 'PART_REPAY'  
			    AND  IF(`status` IN ('LATE_NOT', 'LATE_REPAIED'),
			    DATE_ADD(a.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
			    AND DATE_ADD(a.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d')
			    ,DATE_FORMAT(a.finish_time, '%Y-%m-%d') >= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
					    AND DATE_FORMAT(a.finish_time, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d'))
		    ) lrs LEFT JOIN ln_repay lre on lre.repay_plan_id = lrs.id and lre.`status`='REPAIED',
			ln_user lu
		    where lr.loan_id = ll.id and ll.id = lrs.loan_id
		    AND ll.ln_user_id = lu.id AND lu.partner_code = 'ZAN'
		    and lr.`status` in ('REPAID','SUCCESS')
		    and lrs.`status` not in( 'INIT','PART_REPAY')
			and ll.loan_time >= '2017-09-19 00:00:00'
			AND lr.total_amount > 0
		    AND IF(lrs.`status` in( 'LATE_NOT','LATE_REPAIED'),
		    DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(
		    #{startTime},
		    '%Y-%m-%d'
		    )
		    AND DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(
		    #{endTime},
		    '%Y-%m-%d'
		    ),
		    DATE_FORMAT(lre.done_time, '%Y-%m-%d') >= DATE_FORMAT(
		    #{startTime},
		    '%Y-%m-%d'
		    )
		    AND DATE_FORMAT(lre.done_time, '%Y-%m-%d') &lt;= DATE_FORMAT(
		    #{endTime},
		    '%Y-%m-%d'
		    ))
		    )zan
		    LEFT JOIN
		    (   SELECT
		    min(ROUND(ll.approve_amount*0.15*(ll.
		    period+1)/(ll.period*24)*(
		    lr.total_amount/ll.approve_amount)-0.005,2)) as
		    finance_interest,
		    lr.total_amount,lrs.
		    serial_id,ll.period,ll.id as loan_id
		    from ln_loan_relation lr,ln_loan ll,ln_user lu,
		    (
					    SELECT * FROM ln_repay_schedule a WHERE   
					    a.`status` != 'INIT'  AND  a.`status` != 'PART_REPAY'  
					    AND  IF(`status` IN ('LATE_NOT', 'LATE_REPAIED'),
					    DATE_ADD(a.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
					    AND DATE_ADD(a.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d')
					    ,DATE_FORMAT(a.finish_time, '%Y-%m-%d') >= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
					    AND DATE_FORMAT(a.finish_time, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d'))
		    )
		    lrs LEFT JOIN ln_repay
		    lre on lre.repay_plan_id = lrs.id and lre.`status`
		    ='REPAIED'
		    where lr.
		    loan_id = ll.id and ll.id = lrs.loan_id
		    AND ll.ln_user_id = lu.id and lu.partner_code = 'ZAN'
		    and lr.`status` in( 'REPAID','SUCCESS')
		    and lrs.`status` not in( 'INIT','PART_REPAY')
		    and ll.loan_time >= '2017-09-19 00:00:00'
		    AND lr.total_amount > 0
		    AND IF(lrs.`status` in( 'LATE_NOT','LATE_REPAIED'),
		    DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) >= DATE_FORMAT(
		    #{startTime},
		    '%Y-%m-%d'
		    )
		    AND DATE_ADD(lrs.plan_date, INTERVAL 1 DAY) &lt;= DATE_FORMAT(
		    #{endTime},
		    '%Y-%m-%d'
		    ),
		    DATE_FORMAT(lre.done_time, '%Y-%m-%d') >= DATE_FORMAT(
		    #{startTime},
		    '%Y-%m-%d'
		    )
		    AND DATE_FORMAT(lre.done_time, '%Y-%m-%d') &lt;= DATE_FORMAT(
		    #{endTime},
		    '%Y-%m-%d'
		    ))
		    GROUP BY
		    serial_id,period,loan_id
		    ) min on zan.loan_id = min.loan_id
		    and zan.serial_id = min.serial_id
		    and zan.finance_interest = min.finance_interest,
		    bs_user bu
		    where
		    bu.id=zan.user_id
		    <if test="userName != null and userName != ''">
		      AND bu.user_name like concat(concat('%', #{userName}),'%')
		    </if>
		    <if test=" mobile != null and mobile != ''">
		      AND bu.mobile like concat(concat('%', #{mobile}),'%')
		    </if>
		    ORDER BY update_time DESC,loan_id,serial_id asc,finance_interest DESC
		    ) p3
    ) t
  </select>

<!--  赞分期产品统计-融资客户结算 E -->

  <resultMap id="LnChannelVO" type="com.pinting.business.model.vo.LnChannelVO">
      <result column="id" property="id" jdbcType="INTEGER"/>
      <result column="merchant_no" property="merchantNo" jdbcType="VARCHAR"/>
      <result column="is_main" property="isMain" jdbcType="INTEGER"/>
  </resultMap>

  <select id="queryBsMerchantInfoOfOrder"  resultMap="LnChannelVO">
      SELECT b.merchant_no, b.is_main
      FROM bs_pay_orders a
      LEFT JOIN bs_payment_channel b
      ON a.payment_channel_id = b.id
      WHERE a.order_no = #{payOrderNo}
      AND a.status = '5'
  </select>
  
  <select id="baoFooCheckAccountOrders"  resultMap="BaseResultMap">
	select id, payment_channel_id, order_no, amount, user_id, sub_account_id, type, channel, pay_path, status, bank_name, money_type, 
	terminal_type, create_time, update_time, start_jnl_no, end_jnl_no, bank_id, bank_card_no, account_type, trans_type, channel_trans_type, 
	mobile, id_card, user_name, return_code, return_msg, note
	from bs_pay_orders 
	WHERE update_time is not null and DATE_FORMAT(update_time,'%Y-%m-%d')= DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 1 DAY),'%Y-%m-%d') 
	and channel = 'BAOFOO' 
	and (payment_channel_id  in (
			SELECT id FROM bs_payment_channel WHERE trans_type = 'DK'
			AND is_main = 1
		) OR payment_channel_id IS NULL
	)
  </select>
  
  <select id="countCheckAccountOrders" parameterType="java.util.HashMap" resultType="java.lang.Integer">
	select count(id)
	from bs_pay_orders
	<where>
	 	<if test="transType != null and transType != '' ">
        	and trans_type = #{transType}
    	</if>
		<if test="status != null and status &gt; 0 ">
	     	and status = #{status}
		</if>
		<if test="channel != null and channel != '' ">
	         and channel = #{channel}
	    </if>
	    <if test="checkDate != null and checkDate != '' ">
	         and DATE_FORMAT(update_time, '%Y-%m-%d') = DATE_FORMAT(#{checkDate}, '%Y-%m-%d')
	    </if>
	</where>    
  </select>

  <select id="sumCheckAccountOrders" parameterType="java.util.HashMap" resultType="java.lang.Double">
	select IFNULL(sum(amount), 0)
	from bs_pay_orders
	<where> 
		<if test="transType != null and transType != '' ">
        	and trans_type = #{transType}
    	</if>
		<if test="status != null and status &gt; 0 ">
	     	and status = #{status}
		</if>
		<if test="channel != null and channel != '' ">
	         and channel = #{channel}
	    </if>
	    <if test="checkDate != null and checkDate != '' ">
	         and DATE_FORMAT(update_time, '%Y-%m-%d') = DATE_FORMAT(#{checkDate}, '%Y-%m-%d')
	    </if>
	</where>    
  </select>
		
 <select id="queryGachaCheckDailyCount" parameterType="com.pinting.business.model.vo.DailyCheckGachaVO" resultType="java.lang.Integer">
 	SELECT COUNT(id) from
 	(SELECT a.id
  	from bs_pay_orders a
	<where>
		a.channel='BAOFOO' 
		<if test="startTime != null and startTime != ''"> 
			and date(a.update_time) &gt;= #{startTime} 
		</if>
		<if test="endTime != null and endTime != ''"> 
			and date(a.update_time) &lt;= #{endTime}
		</if>
		<if test="orderNo != null and orderNo != ''"> 
			and a.order_no = #{orderNo}
		</if>
		<if test="thdOrderNo != null and thdOrderNo != ''"> 
			and 1>2
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode== 'ZAN'"> 
			and a.trans_type = 'SYS_PARTNER_REVENUE'
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode== 'YUN_DAI_SELF'"> 
			and (a.trans_type = 'SYS_YUN_REPAY_REVENUE' or a.trans_type = 'SYS_YUN_REPEAT')
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode== 'ZSD'"> 
			and (a.trans_type = 'SYS_ZSD_REPAY_REVENUE' or a.trans_type = 'SYS_ZSD_REPEAT')
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode== '7_DAI_SELF'"> 
			and (a.trans_type = 'SYS_SEVEN_REPAY_REVENUE' or a.trans_type = 'SYS_SEVEN_REPEAT')
		</if>
		<if test="status != null and status != '' and status== 'SUCC'"> 
			and a.status = 6
		</if>
		<if test="status != null and status != '' and status== 'FAIL'"> 
			and a.status = 7
		</if>
		<if test="status != null and status != '' and status== 'PROCESS'"> 
			and a.status = 5
		</if>
		<if test="status != null and status != '' and (status== 'REPEAT' or status== 'INIT' or status== 'PRE_SUCC')"> 
			and 1>2
		</if>
		<if test="paymentChannelId != null and paymentChannelId != ''"> 
			and 1>2
		</if>
		<if test="transType != null and transType != '' and transType=='PARTNER_REVENUE'"> 
			and a.trans_type in ('SYS_PARTNER_REVENUE', 'SYS_YUN_REPAY_REVENUE', 'SYS_ZSD_REPAY_REVENUE', 'SYS_SEVEN_REPAY_REVENUE')
		</if>
		<if test="transType != null and transType != '' and transType=='PARTNER_REPEAT'"> 
			and a.trans_type in ('SYS_YUN_REPEAT', 'SYS_ZSD_REPEAT', 'SYS_SEVEN_REPEAT')
		</if>
		<if test="transType != null and transType != '' and (transType=='BALANCE_WITHDRAW' or transType=='BONUS_WITHDRAW')"> 
			and a.trans_type = #{transType}
		</if>
		<if test="transType == null or transType == ''"> 
  			and a.trans_type in ('BALANCE_WITHDRAW', 'BONUS_WITHDRAW', 'SYS_PARTNER_REVENUE', 'SYS_YUN_REPAY_REVENUE', 'SYS_ZSD_REPAY_REVENUE', 
			'SYS_SEVEN_REPAY_REVENUE', 'SYS_YUN_REPEAT', 'SYS_ZSD_REPEAT', 'SYS_SEVEN_REPEAT')
  		</if>
  		<if test="transType != null and transType != '' and (transType=='WITHDRAW_2_DEP_REPAY_CARD' or transType=='CUT_REPAY_2_BORROW'
  			or transType=='SYS_RECEIVE_MONEY' or transType=='LN_COMPENSATE' or transType=='REPAY_TRANSFER_2_MAIN'
  			or transType=='DEPREPAY_MAIN_WITHHOLD_REPAY' or transType=='DEPREPAY_ASSIST_WITHHOLD_REPAY' or transType=='PARTNER_OFFLINE_REPAY')"> 
			and 1>2
		</if>
  	</where>
  	UNION ALL
  	
  	SELECT a.id 
	from bs_sys_receive_money a
  	<where>
  		<if test="startTime != null and startTime != ''"> 
			and date(a.pay_finsh_time) &gt;= #{startTime} 
		</if>
		<if test="endTime != null and endTime != ''"> 
			and date(a.pay_finsh_time) &lt;= #{endTime}
		</if>
		<if test="orderNo != null and orderNo != ''"> 
			and a.pay_order_no = #{orderNo}
		</if>
		<if test="thdOrderNo != null and thdOrderNo != ''"> 
			and 1>2
		</if>
		<if test="status != null and status != '' and status != 'REPEAT'"> 
			and a.status = #{status}
		</if>
		<if test="status != null and status != '' and status== 'REPEAT'"> 
			and 1>2
		</if>
		<if test="transType != null and transType != '' and transType== 'SYS_RECEIVE_MONEY'"> 
			and 1=1
		</if>
		<if test="transType != null and transType != '' and transType!= 'SYS_RECEIVE_MONEY'"> 
			and 1>2
		</if>
		<if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'MAIN'"> 
			and 1=1
		</if>
		<if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'ASSIST'"> 
			and 1>2
		</if>
		<if test="partnerCode != null and partnerCode != ''"> 
			and 1>2
		</if>
  	</where>
  	UNION ALL
  	
  	SELECT 
		b.id
	FROM
		ln_compensate a, ln_compensate_detail b 
	<where>
		a.id = b.compensate_id and 
		(a.partner_code = 'YUN_DAI_SELF' OR a.partner_code = 'ZSD' OR a.partner_code = '7_DAI_SELF')
		<if test="startTime != null and startTime != ''"> 
			and date(a.finish_time) &gt;= #{startTime} 
		</if>
		<if test="endTime != null and endTime != ''"> 
			and date(a.finish_time) &lt;= #{endTime}
		</if>
		<if test="orderNo != null and orderNo != ''"> 
			and a.order_no = #{orderNo}
		</if>
		<if test="thdOrderNo != null and thdOrderNo != ''"> 
			and a.pay_order_no = #{thdOrderNo}
		</if>
		<if test="partnerCode != null and partnerCode != ''"> 
			and a.partner_code = #{partnerCode}
		</if>
		<if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'MAIN'"> 
			and 1=1
		</if>
		<if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'ASSIST'"> 
			and 1>2
		</if>
		<if test="status != null and status != ''"> 
			and b.status = #{status}
		</if>
		<if test="transType != null and transType != '' and transType== 'LN_COMPENSATE'"> 
			and 1=1
		</if>
		<if test="transType != null and transType != '' and transType!= 'LN_COMPENSATE'"> 
			and 1>2
		</if>
	</where>
		UNION ALL
	
		SELECT 
			a.id
	  	from ln_pay_orders a 
  		<where>
  			<if test="transType != null and transType != '' and transType== 'WITHDRAW_2_DEP_REPAY_CARD'"> 
				and a.channel='BAOFOO' and a.trans_type='WITHDRAW_2_DEP_REPAY_CARD' and a.channel_trans_type = 'DF'
			</if>
			<if test="transType != null and transType != '' and transType== 'CUT_REPAY_2_BORROW'"> 
				and a.channel='HFBANK' and a.trans_type='CUT_REPAY_2_BORROWER' and a.channel_trans_type = 'DK'
			</if>
			<if test="transType != null and transType != '' and transType== 'REPAY_TRANSFER_2_MAIN'"> 
				and a.channel='BAOFOO' and a.trans_type='REPAY' and a.channel_trans_type = 'TRANSFER'
			</if>
			<if test="transType != null and transType != '' and (transType!= 'CUT_REPAY_2_BORROW' and 
				transType!= 'WITHDRAW_2_DEP_REPAY_CARD' and transType!= 'REPAY_TRANSFER_2_MAIN')"> 
				and 1>2
			</if>
			<if test="transType == null or transType == ''"> 
				and (a.trans_type in ('WITHDRAW_2_DEP_REPAY_CARD', 'CUT_REPAY_2_BORROWER') or ( a.trans_type='REPAY' and a.channel_trans_type = 'TRANSFER'))
			</if>
	  		<if test="startTime != null and startTime != ''"> 
				and date(a.update_time) &gt;= #{startTime} 
			</if>
			<if test="endTime != null and endTime != ''"> 
				and date(a.update_time) &lt;= #{endTime}
			</if>
			<if test="orderNo != null and orderNo != ''"> 
				and a.order_no = #{orderNo}
			</if>
			<if test="thdOrderNo != null and thdOrderNo != ''"> 
				and 1>2
			</if>
			<if test="partnerCode != null and partnerCode != ''"> 
				and a.partner_code = #{partnerCode}
			</if>
			<if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'MAIN'"> 
				and (a.payment_channel_id = 1 or a.payment_channel_id is null)
			</if>
			<if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'ASSIST'"> 
				and a.payment_channel_id = 2
			</if>
			<if test="status != null and status != '' and status== 'SUCC'"> 
				and a.status = 6
			</if>
			<if test="status != null and status != '' and status== 'FAIL'"> 
				and a.status = 7
			</if>
			<if test="status != null and status != '' and status== 'PROCESS'"> 
				and a.status = 5
			</if>
			<if test="status != null and status != '' and (status== 'REPEAT' or status== 'INIT' or status== 'PRE_SUCC')"> 
				and 1>2
			</if>
  		</where>  
  		UNION ALL
	
		SELECT 
			a.id
	  	from ln_repay b LEFT JOIN ln_pay_orders a ON a.order_no = b.pay_order_no
  		<where>
  			a.channel='BAOFOO' 
  			<if test="transType != null and transType != '' and (transType== 'DEPREPAY_MAIN_WITHHOLD_REPAY' or transType== 'DEPREPAY_ASSIST_WITHHOLD_REPAY')"> 
				and a.trans_type='REPAY' and channel_trans_type='DK' and b.repay_type is NULL
			</if>
			<if test="transType != null and transType != '' and transType== 'PARTNER_OFFLINE_REPAY'"> 
				and a.trans_type = 'REPAY' and b.repay_type ='OFFLINE_REPAY'
			</if>
			<if test="transType != null and transType != '' and (transType!= 'DEPREPAY_MAIN_WITHHOLD_REPAY' and transType!= 'DEPREPAY_ASSIST_WITHHOLD_REPAY'
				and transType!= 'PARTNER_OFFLINE_REPAY')"> 
				and 1>2
			</if>
			<if test="transType == null or transType == ''"> 
				and a.trans_type = 'REPAY'
			</if>
	  		<if test="startTime != null and startTime != ''"> 
				and date(a.update_time) &gt;= #{startTime} 
			</if>
			<if test="endTime != null and endTime != ''"> 
				and date(a.update_time) &lt;= #{endTime}
			</if>
			<if test="orderNo != null and orderNo != ''"> 
				and a.order_no = #{orderNo}
			</if>
			<if test="thdOrderNo != null and thdOrderNo != ''"> 
				and b.partner_order_no = #{thdOrderNo}
			</if>
			<if test="partnerCode != null and partnerCode != ''"> 
				and a.partner_code = #{partnerCode}
			</if>
			<if test="(paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'MAIN') or (transType== 'DEPREPAY_MAIN_WITHHOLD_REPAY')"> 
				and (a.payment_channel_id = 1 or a.payment_channel_id is null)
			</if>
			<if test="(paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'ASSIST') or (transType== 'DEPREPAY_ASSIST_WITHHOLD_REPAY')"> 
				and a.payment_channel_id = 2
			</if>
			<if test="status != null and status != '' and status== 'SUCC'"> 
				and a.status = 6
			</if>
			<if test="status != null and status != '' and status== 'FAIL'"> 
				and a.status = 7
			</if>
			<if test="status != null and status != '' and status== 'PROCESS'"> 
				and a.status = 5
			</if>
			<if test="status != null and status != '' and (status== 'REPEAT' or status== 'INIT' or status== 'PRE_SUCC')"> 
				and 1>2
			</if>
  		</where>
        GROUP BY a.id
    ) t 
  </select>
  
  <select id="queryGachaCheckDailyInfo" parameterType="com.pinting.business.model.vo.DailyCheckGachaVO" resultMap="DailyCheckGachaVOMap">
  	SELECT
		(@rowNO := @rowNo + 1) serialNo,
		t.*
	FROM
		(SELECT @rowNO := #{start}) b,
		(
  	SELECT 
  		case when a.trans_type = 'BALANCE_WITHDRAW' or a.trans_type = 'BONUS_WITHDRAW' then ''
  		when a.trans_type = 'SYS_PARTNER_REVENUE' then '赞分期'
  		when a.trans_type = 'SYS_YUN_REPAY_REVENUE' or a.trans_type = 'SYS_YUN_REPEAT' then '云贷' 
		when a.trans_type = 'SYS_ZSD_REPAY_REVENUE' or a.trans_type = 'SYS_ZSD_REPEAT' then '赞时贷'
		when a.trans_type = 'SYS_SEVEN_REPAY_REVENUE' or a.trans_type = 'SYS_SEVEN_REPEAT' then '7贷'
  		else '' end as partner_code, 
  		a.trans_type, a.order_no, '' as thd_order_no, a.amount as trans_amount, IFNULL(a.return_msg, '') as status_remark, 
  		case when a.status = 5 then '处理中'
  		when a.status = 6 then '成功'
  		when a.status = 7 then '失败' 
  		when a.status = 1 then '创建'
  		when a.status = 3 then '预下单成功'
  		when a.status = 4 then '预下单失败'
  		else '未知或无' end as `status`, 
  		'' as payment_channel_id,
  		a.create_time as request_time, a.update_time as finish_time, 'bs_pay_orders' as select_name  
  	from bs_pay_orders a
	<where>
		a.channel='BAOFOO' 
		<if test="startTime != null and startTime != ''"> 
			and date(a.update_time) &gt;= #{startTime} 
		</if>
		<if test="endTime != null and endTime != ''"> 
			and date(a.update_time) &lt;= #{endTime}
		</if>
		<if test="orderNo != null and orderNo != ''"> 
			and a.order_no = #{orderNo}
		</if>
		<if test="thdOrderNo != null and thdOrderNo != ''"> 
			and 1>2
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode== 'ZAN'"> 
			and a.trans_type = 'SYS_PARTNER_REVENUE'
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode== 'YUN_DAI_SELF'"> 
			and (a.trans_type = 'SYS_YUN_REPAY_REVENUE' or a.trans_type = 'SYS_YUN_REPEAT')
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode== 'ZSD'"> 
			and (a.trans_type = 'SYS_ZSD_REPAY_REVENUE' or a.trans_type = 'SYS_ZSD_REPEAT')
		</if>
		<if test="partnerCode != null and partnerCode != '' and partnerCode== '7_DAI_SELF'"> 
			and (a.trans_type = 'SYS_SEVEN_REPAY_REVENUE' or a.trans_type = 'SYS_SEVEN_REPEAT')
		</if>
		<if test="status != null and status != '' and status== 'SUCC'"> 
			and a.status = 6
		</if>
		<if test="status != null and status != '' and status== 'FAIL'"> 
			and a.status = 7
		</if>
		<if test="status != null and status != '' and status== 'PROCESS'"> 
			and a.status = 5
		</if>
		<if test="status != null and status != '' and (status== 'REPEAT' or status== 'INIT' or status== 'PRE_SUCC')"> 
			and 1>2
		</if>
		<if test="paymentChannelId != null and paymentChannelId != ''"> 
			and 1>2
		</if>
		<if test="transType != null and transType != '' and transType=='PARTNER_REVENUE'"> 
			and a.trans_type in ('SYS_PARTNER_REVENUE', 'SYS_YUN_REPAY_REVENUE', 'SYS_ZSD_REPAY_REVENUE', 'SYS_SEVEN_REPAY_REVENUE')
		</if>
		<if test="transType != null and transType != '' and transType=='PARTNER_REPEAT'"> 
			and a.trans_type in ('SYS_YUN_REPEAT', 'SYS_ZSD_REPEAT', 'SYS_SEVEN_REPEAT')
		</if>
		<if test="transType != null and transType != '' and (transType=='BALANCE_WITHDRAW' or transType=='BONUS_WITHDRAW')"> 
			and a.trans_type = #{transType}
		</if>
		<if test="transType == null or transType == ''"> 
			and a.trans_type in ('BALANCE_WITHDRAW', 'BONUS_WITHDRAW', 'SYS_PARTNER_REVENUE', 'SYS_YUN_REPAY_REVENUE', 'SYS_ZSD_REPAY_REVENUE', 
			'SYS_SEVEN_REPAY_REVENUE', 'SYS_YUN_REPEAT', 'SYS_ZSD_REPEAT', 'SYS_SEVEN_REPEAT')
  		</if>
  		<if test="transType != null and transType != '' and (transType=='WITHDRAW_2_DEP_REPAY_CARD' or transType=='CUT_REPAY_2_BORROW'
  			or transType=='SYS_RECEIVE_MONEY' or transType=='LN_COMPENSATE' or transType=='REPAY_TRANSFER_2_MAIN'
  			or transType=='DEPREPAY_MAIN_WITHHOLD_REPAY' or transType=='DEPREPAY_ASSIST_WITHHOLD_REPAY' or transType=='PARTNER_OFFLINE_REPAY')"> 
			and 1>2
		</if>
  	</where>
  	UNION ALL
  	
  	SELECT '' as partner_code, 'SYS_RECEIVE_MONEY' as trans_type, a.pay_order_no as order_no, '' as thd_order_no, IFNULL(a.amount, 0) as trans_amount, '' as status_remark,
    	case when a.status = 'SUCC' then '成功'
  		when a.status = 'FAIL' then '失败' 
  		when a.status = 'INIT' then '初始状态'
  		else '未知或无' end as `status`, '主通道' as payment_channel_id,
    	a.pay_req_time as request_time, a.pay_finsh_time as finish_time, 'bs_sys_receive_money' as select_name 
	from bs_sys_receive_money a
  	<where>
  		<if test="startTime != null and startTime != ''"> 
			and date(a.pay_finsh_time) &gt;= #{startTime} 
		</if>
		<if test="endTime != null and endTime != ''"> 
			and date(a.pay_finsh_time) &lt;= #{endTime}
		</if>
		<if test="orderNo != null and orderNo != ''"> 
			and a.pay_order_no = #{orderNo}
		</if>
		<if test="thdOrderNo != null and thdOrderNo != ''"> 
			and 1>2
		</if>
		<if test="status != null and status != '' and status!= 'REPEAT'"> 
			and a.status = #{status}
		</if>
		<if test="status != null and status != '' and status== 'REPEAT'"> 
			and 1>2
		</if>
		<if test="transType != null and transType != '' and transType== 'SYS_RECEIVE_MONEY'"> 
			and 1=1
		</if>
		<if test="transType != null and transType != '' and transType!= 'SYS_RECEIVE_MONEY'"> 
			and 1>2
		</if>
		<if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'MAIN'"> 
			and 1=1
		</if>
		<if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'ASSIST'"> 
			and 1>2
		</if>
		<if test="partnerCode != null and partnerCode != ''"> 
			and 1>2
		</if>
  	</where>
  	UNION ALL
  	
  	SELECT 
		case when a.partner_code = 'YUN_DAI_SELF' then '云贷'
  		when a.partner_code = 'ZSD' then '赞时贷' 
    	when a.partner_code = 'ZAN' then '赞分期'
    	when a.partner_code = '7_DAI_SELF' then '7贷'
  		else '' end as partner_code,
		'LN_COMPENSATE' as trans_type, a.order_no, a.pay_order_no as thd_order_no, IFNULL(b.total, 0) as trans_amount, '' as status_remark,
		case when b.status = 'SUCC' then '成功'
  		when b.status = 'FAIL' then '失败' 
    	when b.status = 'REPEAT' then '重复还款'
    	when b.status = 'INIT' then '初始状态'
  		else '未知或无' end as `status`, '主通道' as payment_channel_id,
	  	a.apply_time as request_time, a.finish_time, 'ln_compensate' as select_name  
	FROM
		ln_compensate a, ln_compensate_detail b 
	<where>
		a.id = b.compensate_id and 
		(a.partner_code = 'YUN_DAI_SELF' OR a.partner_code = 'ZSD' OR a.partner_code = '7_DAI_SELF')
		<if test="startTime != null and startTime != ''"> 
			and date(a.finish_time) &gt;= #{startTime} 
		</if>
		<if test="endTime != null and endTime != ''"> 
			and date(a.finish_time) &lt;= #{endTime}
		</if>
		<if test="orderNo != null and orderNo != ''"> 
			and a.order_no = #{orderNo}
		</if>
		<if test="thdOrderNo != null and thdOrderNo != ''"> 
			and a.pay_order_no = #{thdOrderNo}
		</if>
		<if test="partnerCode != null and partnerCode != ''"> 
			and a.partner_code = #{partnerCode}
		</if>
		<if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'MAIN'"> 
			and 1=1
		</if>
		<if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'ASSIST'"> 
			and 1>2
		</if>
		<if test="status != null and status != ''"> 
			and b.status = #{status}
		</if>
		<if test="transType != null and transType != '' and transType== 'LN_COMPENSATE'"> 
			and 1=1
		</if>
		<if test="transType != null and transType != '' and transType!= 'LN_COMPENSATE'"> 
			and 1>2
		</if>
	</where>
	UNION ALL
	
	SELECT 
		case when a.partner_code = 'YUN_DAI_SELF' then '云贷'
  		when a.partner_code = 'ZSD' then '赞时贷' 
    	when a.partner_code = 'ZAN' then '赞分期'
    	when a.partner_code = '7_DAI_SELF' then '7贷'
  		else '' end as partner_code,
		case when a.trans_type='CUT_REPAY_2_BORROWER' and a.channel_trans_type = 'DK' then 'CUT_REPAY_2_BORROW'
  		when a.trans_type='WITHDRAW_2_DEP_REPAY_CARD' and a.channel_trans_type = 'DF' then 'WITHDRAW_2_DEP_REPAY_CARD'
  		when (a.trans_type = 'REPAY' and a.channel_trans_type='TRANSFER') then 'REPAY_TRANSFER_2_MAIN'
		else '' end as trans_type, 
		a.order_no, '' as thd_order_no, a.amount as trans_amount, IFNULL(a.return_msg, '') as status_remark, 
  		case when a.status = 5 then '处理中'
  		when a.status = 6 then '成功'
  		when a.status = 7 then '失败' 
  		when a.status = 1 then '创建'
  		when a.status = 3 then '预下单成功'
  		when a.status = 4 then '预下单失败'
  		else '未知或无' end as `status`, 
  		case when a.payment_channel_id = 1 then '主通道'
  		when a.payment_channel_id is null then '主通道'
  		when a.payment_channel_id = 2 then '辅通道' end as payment_channel_id,
  		a.create_time as request_time, a.update_time as finish_time, 
    	'withdraw_2_dep_repay_card' as select_name 
  	from ln_pay_orders a 
  		<where>
  			<if test="transType != null and transType != '' and transType== 'WITHDRAW_2_DEP_REPAY_CARD'"> 
				and a.channel='BAOFOO' and a.trans_type='WITHDRAW_2_DEP_REPAY_CARD' and a.channel_trans_type = 'DF'
			</if>
			<if test="transType != null and transType != '' and transType== 'CUT_REPAY_2_BORROW'"> 
				and a.channel='HFBANK' and a.trans_type='CUT_REPAY_2_BORROWER' and a.channel_trans_type = 'DK'
			</if>
			<if test="transType != null and transType != '' and transType== 'REPAY_TRANSFER_2_MAIN'"> 
				and a.channel='BAOFOO' and a.trans_type='REPAY' and a.channel_trans_type = 'TRANSFER'
			</if>
			<if test="transType != null and transType != '' and (transType!= 'CUT_REPAY_2_BORROW' and 
				transType!= 'WITHDRAW_2_DEP_REPAY_CARD' and transType!= 'REPAY_TRANSFER_2_MAIN')"> 
				and 1>2
			</if>
			<if test="transType == null or transType == ''"> 
				and (a.trans_type in ('WITHDRAW_2_DEP_REPAY_CARD', 'CUT_REPAY_2_BORROWER') or ( a.trans_type='REPAY' and a.channel_trans_type = 'TRANSFER'))
			</if>
	  		<if test="startTime != null and startTime != ''"> 
				and date(a.update_time) &gt;= #{startTime} 
			</if>
			<if test="endTime != null and endTime != ''"> 
				and date(a.update_time) &lt;= #{endTime}
			</if>
			<if test="orderNo != null and orderNo != ''"> 
				and a.order_no = #{orderNo}
			</if>
			<if test="thdOrderNo != null and thdOrderNo != ''"> 
				and 1>2
			</if>
			<if test="partnerCode != null and partnerCode != ''"> 
				and a.partner_code = #{partnerCode}
			</if>
			<if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'MAIN'"> 
				and (a.payment_channel_id = 1 or a.payment_channel_id is null)
			</if>
			<if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'ASSIST'"> 
				and a.payment_channel_id = 2
			</if>
			<if test="status != null and status != '' and status== 'SUCC'"> 
				and a.status = 6
			</if>
			<if test="status != null and status != '' and status== 'FAIL'"> 
				and a.status = 7
			</if>
			<if test="status != null and status != '' and status== 'PROCESS'"> 
				and a.status = 5
			</if>
			<if test="status != null and status != '' and (status== 'REPEAT' or status== 'INIT' or status== 'PRE_SUCC')"> 
				and 1>2
			</if>	
  		</where>  	
  	UNION ALL
	
		SELECT 
			case when a.partner_code = 'YUN_DAI_SELF' then '云贷'
	  		when a.partner_code = 'ZSD' then '赞时贷' 
	    	when a.partner_code = 'ZAN' then '赞分期'
	    	when a.partner_code = '7_DAI_SELF' then '7贷'
	  		else '' end as partner_code,
			case when (b.repay_type = 'OFFLINE_REPAY') then 'PARTNER_OFFLINE_REPAY'
			when (a.payment_channel_id = 1 or a.payment_channel_id is null) then 'DEPREPAY_MAIN_WITHHOLD_REPAY'
	  		when (a.payment_channel_id = 2 and channel_trans_type='DK') then 'DEPREPAY_ASSIST_WITHHOLD_REPAY'
			else '' end as trans_type, 
			a.order_no, b.partner_order_no as thd_order_no, a.amount as trans_amount, IFNULL(a.return_msg, '') as status_remark, 
	  		case when a.status = 5 then '处理中'
	  		when a.status = 6 then '成功'
	  		when a.status = 7 then '失败' 
	  		when a.status = 1 then '创建'
  			when a.status = 3 then '预下单成功'
  			when a.status = 4 then '预下单失败'
	  		else '未知或无' end as `status`, 
	  		case when a.payment_channel_id = 1 then '主通道'
	  		when a.payment_channel_id is null then '主通道'
	  		when a.payment_channel_id = 2 then '辅通道' end as payment_channel_id,
	  		a.create_time as request_time, a.update_time as finish_time, 
	    	'repay' as select_name 
	  	from ln_repay b LEFT JOIN ln_pay_orders a ON a.order_no = b.pay_order_no
  		<where>
  			a.channel='BAOFOO' 
  			<if test="transType != null and transType != '' and (transType== 'DEPREPAY_MAIN_WITHHOLD_REPAY' or transType== 'DEPREPAY_ASSIST_WITHHOLD_REPAY')"> 
				and a.trans_type='REPAY' and channel_trans_type='DK' and b.repay_type is NULL
			</if>
			<if test="transType != null and transType != '' and transType== 'PARTNER_OFFLINE_REPAY'"> 
				and a.trans_type = 'REPAY' and b.repay_type ='OFFLINE_REPAY'
			</if>
			<if test="transType != null and transType != '' and (transType!= 'DEPREPAY_MAIN_WITHHOLD_REPAY' and transType!= 'DEPREPAY_ASSIST_WITHHOLD_REPAY'
				and transType!= 'PARTNER_OFFLINE_REPAY')"> 
				and 1>2
			</if>
			<if test="transType == null or transType == ''"> 
				and a.trans_type = 'REPAY'
			</if>
	  		<if test="startTime != null and startTime != ''"> 
				and date(a.update_time) &gt;= #{startTime} 
			</if>
			<if test="endTime != null and endTime != ''"> 
				and date(a.update_time) &lt;= #{endTime}
			</if>
			<if test="orderNo != null and orderNo != ''"> 
				and a.order_no = #{orderNo}
			</if>
			<if test="thdOrderNo != null and thdOrderNo != ''"> 
				and b.partner_order_no = #{thdOrderNo}
			</if>
			<if test="partnerCode != null and partnerCode != ''"> 
				and a.partner_code = #{partnerCode}
			</if>
			<if test="(paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'MAIN') or (transType== 'DEPREPAY_MAIN_WITHHOLD_REPAY')"> 
				and (a.payment_channel_id = 1 or a.payment_channel_id is null)
			</if>
			<if test="(paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'ASSIST') or (transType== 'DEPREPAY_ASSIST_WITHHOLD_REPAY')"> 
				and a.payment_channel_id = 2
			</if>
			<if test="status != null and status != '' and status== 'SUCC'"> 
				and a.status = 6
			</if>
			<if test="status != null and status != '' and status== 'FAIL'"> 
				and a.status = 7
			</if>
			<if test="status != null and status != '' and status== 'PROCESS'"> 
				and a.status = 5
			</if>
			<if test="status != null and status != '' and (status== 'REPEAT' or status== 'INIT' or status== 'PRE_SUCC')"> 
				and 1>2
			</if>
  		</where>
        GROUP BY a.id
    ) t WHERE 1=1
    <include refid="sql-global.pagination" />
  </select>

  <select id="selectGachaCheckDailySum" parameterType="com.pinting.business.model.vo.DailyCheckGachaVO" resultType="java.lang.Double">
    SELECT SUM(IFNULL(trans_amount, 0)) from
    (SELECT a.id, IFNULL(a.amount, 0) as trans_amount
    from bs_pay_orders a
    <where>
      a.channel='BAOFOO'
      <if test="startTime != null and startTime != ''">
        and date(a.update_time) &gt;= #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and date(a.update_time) &lt;= #{endTime}
      </if>
      <if test="orderNo != null and orderNo != ''">
        and a.order_no = #{orderNo}
      </if>
      <if test="thdOrderNo != null and thdOrderNo != ''">
        and 1>2
      </if>
      <if test="partnerCode != null and partnerCode != '' and partnerCode== 'ZAN'">
        and a.trans_type = 'SYS_PARTNER_REVENUE'
      </if>
      <if test="partnerCode != null and partnerCode != '' and partnerCode== 'YUN_DAI_SELF'">
        and (a.trans_type = 'SYS_YUN_REPAY_REVENUE' or a.trans_type = 'SYS_YUN_REPEAT')
      </if>
      <if test="partnerCode != null and partnerCode != '' and partnerCode== 'ZSD'">
        and (a.trans_type = 'SYS_ZSD_REPAY_REVENUE' or a.trans_type = 'SYS_ZSD_REPEAT')
      </if>
      <if test="partnerCode != null and partnerCode != '' and partnerCode== '7_DAI_SELF'">
        and (a.trans_type = 'SYS_SEVEN_REPAY_REVENUE' or a.trans_type = 'SYS_SEVEN_REPEAT')
      </if>
      <if test="status != null and status != '' and status== 'SUCC'">
        and a.status = 6
      </if>
      <if test="status != null and status != '' and status== 'FAIL'">
        and a.status = 7
      </if>
      <if test="status != null and status != '' and status== 'PROCESS'">
        and a.status = 5
      </if>
      <if test="status != null and status != '' and (status== 'REPEAT' or status== 'INIT' or status== 'PRE_SUCC')">
        and 1>2
      </if>
      <if test="paymentChannelId != null and paymentChannelId != ''">
        and 1>2
      </if>
      <if test="transType != null and transType != '' and transType=='PARTNER_REVENUE'">
        and a.trans_type in ('SYS_PARTNER_REVENUE', 'SYS_YUN_REPAY_REVENUE', 'SYS_ZSD_REPAY_REVENUE', 'SYS_SEVEN_REPAY_REVENUE')
      </if>
      <if test="transType != null and transType != '' and transType=='PARTNER_REPEAT'">
        and a.trans_type in ('SYS_YUN_REPEAT', 'SYS_ZSD_REPEAT', 'SYS_SEVEN_REPEAT')
      </if>
      <if test="transType != null and transType != '' and (transType=='BALANCE_WITHDRAW' or transType=='BONUS_WITHDRAW')">
        and a.trans_type = #{transType}
      </if>
      <if test="transType == null or transType == ''">
        and a.trans_type in ('BALANCE_WITHDRAW', 'BONUS_WITHDRAW', 'SYS_PARTNER_REVENUE', 'SYS_YUN_REPAY_REVENUE', 'SYS_ZSD_REPAY_REVENUE',
        'SYS_SEVEN_REPAY_REVENUE', 'SYS_YUN_REPEAT', 'SYS_ZSD_REPEAT', 'SYS_SEVEN_REPEAT')
      </if>
      <if test="transType != null and transType != '' and (transType=='WITHDRAW_2_DEP_REPAY_CARD' or transType=='CUT_REPAY_2_BORROW'
  			or transType=='SYS_RECEIVE_MONEY' or transType=='LN_COMPENSATE' or transType=='REPAY_TRANSFER_2_MAIN'
  			or transType=='DEPREPAY_MAIN_WITHHOLD_REPAY' or transType=='DEPREPAY_ASSIST_WITHHOLD_REPAY' or transType=='PARTNER_OFFLINE_REPAY')">
        and 1>2
      </if>
    </where>
    UNION ALL

    SELECT a.id, IFNULL(a.amount, 0) as trans_amount
    from bs_sys_receive_money a
    <where>
      <if test="startTime != null and startTime != ''">
        and date(a.pay_finsh_time) &gt;= #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and date(a.pay_finsh_time) &lt;= #{endTime}
      </if>
      <if test="orderNo != null and orderNo != ''">
        and a.pay_order_no = #{orderNo}
      </if>
      <if test="thdOrderNo != null and thdOrderNo != ''">
        and 1>2
      </if>
      <if test="status != null and status != '' and status != 'REPEAT'">
        and a.status = #{status}
      </if>
      <if test="status != null and status != '' and status== 'REPEAT'">
        and 1>2
      </if>
      <if test="transType != null and transType != '' and transType== 'SYS_RECEIVE_MONEY'">
        and 1=1
      </if>
      <if test="transType != null and transType != '' and transType!= 'SYS_RECEIVE_MONEY'">
        and 1>2
      </if>
      <if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'MAIN'">
        and 1=1
      </if>
      <if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'ASSIST'">
        and 1>2
      </if>
      <if test="partnerCode != null and partnerCode != ''">
        and 1>2
      </if>
    </where>
    UNION ALL

    SELECT
    b.id, IFNULL(b.total, 0) as trans_amount
    FROM
    ln_compensate a, ln_compensate_detail b
    <where>
      a.id = b.compensate_id and
      (a.partner_code = 'YUN_DAI_SELF' OR a.partner_code = 'ZSD' OR a.partner_code = '7_DAI_SELF')
      <if test="startTime != null and startTime != ''">
        and date(a.finish_time) &gt;= #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and date(a.finish_time) &lt;= #{endTime}
      </if>
      <if test="orderNo != null and orderNo != ''">
        and a.order_no = #{orderNo}
      </if>
      <if test="thdOrderNo != null and thdOrderNo != ''">
        and a.pay_order_no = #{thdOrderNo}
      </if>
      <if test="partnerCode != null and partnerCode != ''">
        and a.partner_code = #{partnerCode}
      </if>
      <if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'MAIN'">
        and 1=1
      </if>
      <if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'ASSIST'">
        and 1>2
      </if>
      <if test="status != null and status != ''">
        and b.status = #{status}
      </if>
      <if test="transType != null and transType != '' and transType== 'LN_COMPENSATE'">
        and 1=1
      </if>
      <if test="transType != null and transType != '' and transType!= 'LN_COMPENSATE'">
        and 1>2
      </if>
    </where>
    UNION ALL

    SELECT
    a.id, IFNULL(a.amount, 0) as trans_amount
    from ln_pay_orders a
    <where>
      <if test="transType != null and transType != '' and transType== 'WITHDRAW_2_DEP_REPAY_CARD'">
        and a.channel='BAOFOO' and a.trans_type='WITHDRAW_2_DEP_REPAY_CARD' and a.channel_trans_type = 'DF'
      </if>
      <if test="transType != null and transType != '' and transType== 'CUT_REPAY_2_BORROW'">
        and a.channel='HFBANK' and a.trans_type='CUT_REPAY_2_BORROWER' and a.channel_trans_type = 'DK'
      </if>
      <if test="transType != null and transType != '' and transType== 'REPAY_TRANSFER_2_MAIN'">
        and a.channel='BAOFOO' and a.trans_type='REPAY' and a.channel_trans_type = 'TRANSFER'
      </if>
      <if test="transType != null and transType != '' and (transType!= 'CUT_REPAY_2_BORROW' and
				transType!= 'WITHDRAW_2_DEP_REPAY_CARD' and transType!= 'REPAY_TRANSFER_2_MAIN')">
        and 1>2
      </if>
      <if test="transType == null or transType == ''">
        and (a.trans_type in ('WITHDRAW_2_DEP_REPAY_CARD', 'CUT_REPAY_2_BORROWER') or ( a.trans_type='REPAY' and a.channel_trans_type = 'TRANSFER'))
      </if>
      <if test="startTime != null and startTime != ''">
        and date(a.update_time) &gt;= #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and date(a.update_time) &lt;= #{endTime}
      </if>
      <if test="orderNo != null and orderNo != ''">
        and a.order_no = #{orderNo}
      </if>
      <if test="thdOrderNo != null and thdOrderNo != ''">
        and 1>2
      </if>
      <if test="partnerCode != null and partnerCode != ''">
        and a.partner_code = #{partnerCode}
      </if>
      <if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'MAIN'">
        and (a.payment_channel_id = 1 or a.payment_channel_id is null)
      </if>
      <if test="paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'ASSIST'">
        and a.payment_channel_id = 2
      </if>
      <if test="status != null and status != '' and status== 'SUCC'">
        and a.status = 6
      </if>
      <if test="status != null and status != '' and status== 'FAIL'">
        and a.status = 7
      </if>
      <if test="status != null and status != '' and status== 'PROCESS'">
        and a.status = 5
      </if>
      <if test="status != null and status != '' and (status== 'REPEAT' or status== 'INIT' or status== 'PRE_SUCC')">
        and 1>2
      </if>
    </where>
    UNION ALL

    SELECT
    a.id, IFNULL(a.amount, 0) as trans_amount
    from ln_repay b LEFT JOIN ln_pay_orders a ON a.order_no = b.pay_order_no
    <where>
      a.channel='BAOFOO'
      <if test="transType != null and transType != '' and (transType== 'DEPREPAY_MAIN_WITHHOLD_REPAY' or transType== 'DEPREPAY_ASSIST_WITHHOLD_REPAY')">
        and a.trans_type='REPAY' and channel_trans_type='DK' and b.repay_type is NULL
      </if>
      <if test="transType != null and transType != '' and transType== 'PARTNER_OFFLINE_REPAY'">
        and a.trans_type = 'REPAY' and b.repay_type ='OFFLINE_REPAY'
      </if>
      <if test="transType != null and transType != '' and (transType!= 'DEPREPAY_MAIN_WITHHOLD_REPAY' and transType!= 'DEPREPAY_ASSIST_WITHHOLD_REPAY'
				and transType!= 'PARTNER_OFFLINE_REPAY')">
        and 1>2
      </if>
      <if test="transType == null or transType == ''">
        and a.trans_type = 'REPAY'
      </if>
      <if test="startTime != null and startTime != ''">
        and date(a.update_time) &gt;= #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and date(a.update_time) &lt;= #{endTime}
      </if>
      <if test="orderNo != null and orderNo != ''">
        and a.order_no = #{orderNo}
      </if>
      <if test="thdOrderNo != null and thdOrderNo != ''">
        and b.partner_order_no = #{thdOrderNo}
      </if>
      <if test="partnerCode != null and partnerCode != ''">
        and a.partner_code = #{partnerCode}
      </if>
      <if test="(paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'MAIN') or (transType== 'DEPREPAY_MAIN_WITHHOLD_REPAY')">
        and (a.payment_channel_id = 1 or a.payment_channel_id is null)
      </if>
      <if test="(paymentChannelId != null and paymentChannelId != '' and paymentChannelId== 'ASSIST') or (transType== 'DEPREPAY_ASSIST_WITHHOLD_REPAY')">
        and a.payment_channel_id = 2
      </if>
      <if test="status != null and status != '' and status== 'SUCC'">
        and a.status = 6
      </if>
      <if test="status != null and status != '' and status== 'FAIL'">
        and a.status = 7
      </if>
      <if test="status != null and status != '' and status== 'PROCESS'">
        and a.status = 5
      </if>
      <if test="status != null and status != '' and (status== 'REPEAT' or status== 'INIT' or status== 'PRE_SUCC')">
        and 1>2
      </if>
    </where>
    GROUP BY a.id
    ) t
  </select>
  
  <resultMap id="DailyCheckGachaVOMap" type="com.pinting.business.model.vo.DailyCheckGachaVO">
      <result column="serial_no" property="serialNo" jdbcType="INTEGER"/>
      <result column="trans_type" property="transType" jdbcType="VARCHAR"/>
      <result column="order_no" property="orderNo" jdbcType="VARCHAR"/>
      <result column="trans_amount" property="transAmount" jdbcType="DOUBLE"/>
      <result column="thd_order_no" property="thdOrderNo" jdbcType="VARCHAR"/>
      <result column="status" property="status" jdbcType="VARCHAR"/>
      <result column="status_remark" property="statusRemark" jdbcType="VARCHAR"/>
      <result column="payment_channel_id" property="paymentChannelId" jdbcType="VARCHAR"/>
      <result column="partner_code" property="partnerCode" jdbcType="VARCHAR"/>
      <result column="select_name" property="selectName" jdbcType="VARCHAR"/>
      <result column="request_time" property="requestTime" jdbcType="TIMESTAMP"/>
      <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP"/>
  </resultMap>
	<!-- ========================= 七店账单信息同步通知统计数据 S ===========================-->
	<resultMap type="com.pinting.business.model.vo.OrderInfoSyncVO" id="orderInfoSyncResultMap" >
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="customer_id" property="customerId" jdbcType="VARCHAR" />
		<result column="partner_name" property="partnerName" jdbcType="VARCHAR" />
		<result column="product_id" property="productId" jdbcType="INTEGER" />
		<result column="product_name" property="productName" jdbcType="VARCHAR" />
		<result column="product_term" property="productTerm" jdbcType="INTEGER" />
		<result column="invest_status" property="investStatus" jdbcType="VARCHAR" />
		<result column="invest_status_desc" property="investStatusDesc" jdbcType="VARCHAR" />
		<result column="return_type" property="returnType" jdbcType="VARCHAR" />
		<result column="base_rate" property="baseRate" jdbcType="INTEGER" />
		<result column="is_raise" property="isRaise" jdbcType="VARCHAR" />
		<result column="raise_rate" property="raiseRate" jdbcType="INTEGER" />
		<result column="open_balance" property="openBalance" jdbcType="DOUBLE" />
		<result column="balance" property="balance" jdbcType="DOUBLE" />
		<result column="expect_yield" property="expectYield" jdbcType="DOUBLE" />
		<result column="open_time" property="openTime" jdbcType="TIMESTAMP" />
		<result column="interest_begin_date" property="interestBeginDate" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="plan_date" property="planDate" jdbcType="TIMESTAMP" />
		<result column="yield" property="yield" jdbcType="DOUBLE" />
		<result column="return_date" property="returnDate" jdbcType="TIMESTAMP" />
		<result column="is_discount" property="isDiscount" jdbcType="VARCHAR" />
		<result column="discount_amount" property="discountAmount" jdbcType="DOUBLE" />
	</resultMap>
	<select id="orderInfoSyncBuy" resultMap="orderInfoSyncResultMap" parameterType="map">
	<![CDATA[
	SELECT 
		a.order_no order_no,
		a.user_id customer_id,
		CASE WHEN e.product_type='AUTH_7' THEN '7贷'
			WHEN e.product_type='AUTH_YUN' THEN '云贷'
			ELSE e.product_type END partner_name,
		f.id product_id,
		f.`name` product_name,
		if(f.term=12,365,f.term*30) product_term,
		CASE WHEN e.`status` = 2 THEN 'INVESTING' 
				WHEN e.`status` = 5 THEN 'FINISH' END  invest_status,
		CASE WHEN e.`status` = 2 THEN '投资购买' 
				WHEN e.`status` = 5 THEN '已结算' END  invest_status_desc,
		f.return_type return_type,
		f.base_rate*100 base_rate,
		'N' as is_raise,
		0 raise_rate,
		e.open_balance+IFNULL(i.open_balance,0) open_balance,
		(select sum(ifnull(left_amount,0)) from ln_loan_relation x where x.bs_sub_account_id=e.id and x.status!='FAIL') balance,
		ROUND((e.open_balance+IFNULL(i.open_balance,0)) * f.base_rate * IF(f.term=12,365,f.term*30)/36500,2)  expect_yield,
		DATE_FORMAT(e.open_time,'%Y-%m-%d %H:%i:%s') open_time,
		DATE_FORMAT(e.interest_begin_date,'%Y-%m-%d') interest_begin_date,
		DATE_FORMAT(a.update_time,'%Y-%m-%d %H:%i:%s')  update_time,
		DATE_FORMAT(e.last_finish_interest_date,'%Y-%m-%d') plan_date,
		IFNULL(ea.principal,0)+IFNULL(ea.interest,0)+IFNULL(ea.overflow_interest,0) yield,
		DATE_FORMAT(ea.finish_time,'%Y-%m-%d') return_date,
		CASE WHEN i.open_balance >0 THEN 'Y'
				ELSE 'N' END is_discount,
		IFNULL(i.open_balance,0) discount_amount
	FROM
		bs_pay_orders a,
		bs_user_sales c,bs_sales d,
		bs_sub_account e LEFT JOIN bs_deposition_return ea ON e.id =ea.sub_account_id and ea.status = 'SUCCESS',bs_product f,
		bs_sub_account_pair h LEFT JOIN bs_sub_account i ON  h.red_account_id = i.id 
		WHERE 
		a.user_id = c.user_id AND c.sales_id = d.id 
		AND a.sub_account_id = e.id AND e.product_id = f.id 
		AND e.id = h.auth_account_id 
		AND d.invite_code LIKE 'qd%' AND c.grade < 3 
		and a.trans_type = 'BALANCE_BUY_PRODUCT' 
		AND a.`status` = 6 
		AND e.product_type in ('AUTH_7','AUTH_YUN','AUTH_FREE')
		AND a.update_time <= #{startTime}
		]]>

		<choose>
			<when test="queryStartTime != null and queryStartTime != ''">
              AND a.update_time > #{queryStartTime}
			</when>
			<otherwise>
              AND a.update_time > DATE_SUB(#{startTime},INTERVAL 2 HOUR)
			</otherwise>
		</choose>

	</select>
	<select id="orderInfoSyncReturn" resultMap="orderInfoSyncResultMap" parameterType="map">
	<![CDATA[
	SELECT 
		a.order_no order_no,
		a.user_id customer_id,
		CASE WHEN e.product_type='AUTH_7' THEN '7贷'
			WHEN e.product_type='AUTH_YUN' THEN '云贷'
			ELSE e.product_type END partner_name,
		f.id product_id,
		f.`name` product_name,
		if(f.term=12,365,f.term*30) product_term,
		CASE WHEN e.`status` = 2 THEN 'INVESTING' 
				WHEN e.`status` = 5 THEN 'FINISH' END  invest_status,
		CASE WHEN e.`status` = 2 THEN '投资购买' 
				WHEN e.`status` = 5 THEN '已结算' END  invest_status_desc,
		f.return_type return_type,
		f.base_rate*100 base_rate,
		'N' as is_raise,
		0 raise_rate,
		e.open_balance+IFNULL(i.open_balance,0) open_balance,
		(select sum(ifnull(left_amount,0)) from ln_loan_relation x where x.bs_sub_account_id=e.id and x.status!='FAIL') balance,
		ROUND((e.open_balance+IFNULL(i.open_balance,0)) * f.base_rate * IF(f.term=12,365,f.term*30)/36500,2)  expect_yield,
		DATE_FORMAT(e.open_time,'%Y-%m-%d %H:%i:%s') open_time,
		DATE_FORMAT(e.interest_begin_date,'%Y-%m-%d') interest_begin_date,
		DATE_FORMAT(a.update_time,'%Y-%m-%d %H:%i:%s')  update_time,
		DATE_FORMAT(e.last_finish_interest_date,'%Y-%m-%d') plan_date,
		IFNULL(ea.principal,0)+IFNULL(ea.interest,0)+IFNULL(ea.overflow_interest,0) yield,
		DATE_FORMAT(ea.finish_time,'%Y-%m-%d') return_date,
		CASE WHEN i.open_balance >0 THEN 'Y'
				ELSE 'N' END is_discount,
		IFNULL(i.open_balance,0) discount_amount
	FROM
		bs_pay_orders a,
		bs_user_sales c,bs_sales d,
		bs_sub_account e LEFT JOIN bs_deposition_return ea ON e.id =ea.sub_account_id and ea.status = 'SUCCESS',bs_product f,
		bs_sub_account_pair h LEFT JOIN bs_sub_account i ON  h.red_account_id = i.id 
		WHERE 
		a.user_id = c.user_id AND c.sales_id = d.id 
		AND a.sub_account_id = e.id AND e.product_id = f.id 
		AND e.id = h.auth_account_id 
		AND d.invite_code LIKE 'qd%' AND c.grade < 3 
		and a.trans_type = 'BALANCE_BUY_PRODUCT' 
		AND a.`status` = 6 
		AND e.product_type in ('AUTH_7','AUTH_YUN','AUTH_FREE')
		AND ea.id IS NOT NULL 
		AND ea.finish_time <= #{startTime}

		]]>
		<choose>
			<when test="queryStartTime != null and queryStartTime != ''">
              AND ea.finish_time > #{queryStartTime}
			</when>
			<otherwise>
              AND ea.finish_time > DATE_SUB(#{startTime},INTERVAL 2 HOUR)
			</otherwise>
		</choose>

	</select>
	<!-- ========================= 七店账单信息同步通知统计数据 E ===========================-->
	
</mapper>