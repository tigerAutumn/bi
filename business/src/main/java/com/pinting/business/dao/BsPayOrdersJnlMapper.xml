<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinting.business.dao.BsPayOrdersJnlMapper" >
  <resultMap id="BaseResultMap" type="com.pinting.business.model.BsPayOrdersJnl" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="trans_code" property="transCode" jdbcType="VARCHAR" />
    <result column="channel_trans_type" property="channelTransType" jdbcType="VARCHAR" />
    <result column="trans_amount" property="transAmount" jdbcType="DOUBLE" />
    <result column="sys_time" property="sysTime" jdbcType="TIMESTAMP" />
    <result column="channel_time" property="channelTime" jdbcType="TIMESTAMP" />
    <result column="channel_jnl_no" property="channelJnlNo" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="sub_account_id" property="subAccountId" jdbcType="INTEGER" />
    <result column="sub_account_code" property="subAccountCode" jdbcType="VARCHAR" />
    <result column="return_code" property="returnCode" jdbcType="VARCHAR" />
    <result column="return_msg" property="returnMsg" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <resultMap id="BaseResultMapVO" type="com.pinting.business.model.vo.BsPayOrdersVO" extends="BaseResultMap">
  <result column="user_name" property="userName" jdbcType="VARCHAR" />
  	<result column="mobile" property="mobile" jdbcType="VARCHAR" />
  	<result column="trans_type" property="transType" jdbcType="VARCHAR" />
  	<result column="status" property="status" jdbcType="INTEGER" />
  	<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, order_no, trans_code, channel_trans_type, trans_amount, sys_time, channel_time, 
    channel_jnl_no, user_id, sub_account_id, sub_account_code, return_code, return_msg, 
    note, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinting.business.model.BsPayOrdersJnlExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_pay_orders_jnl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bs_pay_orders_jnl
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bs_pay_orders_jnl
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.BsPayOrdersJnlExample" >
    delete from bs_pay_orders_jnl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.BsPayOrdersJnl" >
    insert into bs_pay_orders_jnl (id, order_id, order_no, 
      trans_code, channel_trans_type, trans_amount, 
      sys_time, channel_time, channel_jnl_no, 
      user_id, sub_account_id, sub_account_code, 
      return_code, return_msg, note, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, 
      #{transCode,jdbcType=VARCHAR}, #{channelTransType,jdbcType=VARCHAR}, #{transAmount,jdbcType=DOUBLE}, 
      #{sysTime,jdbcType=TIMESTAMP}, #{channelTime,jdbcType=TIMESTAMP}, #{channelJnlNo,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{subAccountId,jdbcType=INTEGER}, #{subAccountCode,jdbcType=VARCHAR}, 
      #{returnCode,jdbcType=VARCHAR}, #{returnMsg,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.BsPayOrdersJnl" useGeneratedKeys="true" keyProperty="id" >
    insert into bs_pay_orders_jnl
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="transCode != null" >
        trans_code,
      </if>
      <if test="channelTransType != null" >
        channel_trans_type,
      </if>
      <if test="transAmount != null" >
        trans_amount,
      </if>
      <if test="sysTime != null" >
        sys_time,
      </if>
      <if test="channelTime != null" >
        channel_time,
      </if>
      <if test="channelJnlNo != null" >
        channel_jnl_no,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="subAccountId != null" >
        sub_account_id,
      </if>
      <if test="subAccountCode != null" >
        sub_account_code,
      </if>
      <if test="returnCode != null" >
        return_code,
      </if>
      <if test="returnMsg != null" >
        return_msg,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="transCode != null" >
        #{transCode,jdbcType=VARCHAR},
      </if>
      <if test="channelTransType != null" >
        #{channelTransType,jdbcType=VARCHAR},
      </if>
      <if test="transAmount != null" >
        #{transAmount,jdbcType=DOUBLE},
      </if>
      <if test="sysTime != null" >
        #{sysTime,jdbcType=TIMESTAMP},
      </if>
      <if test="channelTime != null" >
        #{channelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="channelJnlNo != null" >
        #{channelJnlNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="subAccountId != null" >
        #{subAccountId,jdbcType=INTEGER},
      </if>
      <if test="subAccountCode != null" >
        #{subAccountCode,jdbcType=VARCHAR},
      </if>
      <if test="returnCode != null" >
        #{returnCode,jdbcType=VARCHAR},
      </if>
      <if test="returnMsg != null" >
        #{returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.BsPayOrdersJnlExample" resultType="java.lang.Integer" >
    select count(*) from bs_pay_orders_jnl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bs_pay_orders_jnl
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.transCode != null" >
        trans_code = #{record.transCode,jdbcType=VARCHAR},
      </if>
      <if test="record.channelTransType != null" >
        channel_trans_type = #{record.channelTransType,jdbcType=VARCHAR},
      </if>
      <if test="record.transAmount != null" >
        trans_amount = #{record.transAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.sysTime != null" >
        sys_time = #{record.sysTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.channelTime != null" >
        channel_time = #{record.channelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.channelJnlNo != null" >
        channel_jnl_no = #{record.channelJnlNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.subAccountId != null" >
        sub_account_id = #{record.subAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.subAccountCode != null" >
        sub_account_code = #{record.subAccountCode,jdbcType=VARCHAR},
      </if>
      <if test="record.returnCode != null" >
        return_code = #{record.returnCode,jdbcType=VARCHAR},
      </if>
      <if test="record.returnMsg != null" >
        return_msg = #{record.returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bs_pay_orders_jnl
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      trans_code = #{record.transCode,jdbcType=VARCHAR},
      channel_trans_type = #{record.channelTransType,jdbcType=VARCHAR},
      trans_amount = #{record.transAmount,jdbcType=DOUBLE},
      sys_time = #{record.sysTime,jdbcType=TIMESTAMP},
      channel_time = #{record.channelTime,jdbcType=TIMESTAMP},
      channel_jnl_no = #{record.channelJnlNo,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      sub_account_id = #{record.subAccountId,jdbcType=INTEGER},
      sub_account_code = #{record.subAccountCode,jdbcType=VARCHAR},
      return_code = #{record.returnCode,jdbcType=VARCHAR},
      return_msg = #{record.returnMsg,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.BsPayOrdersJnl" >
    update bs_pay_orders_jnl
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="transCode != null" >
        trans_code = #{transCode,jdbcType=VARCHAR},
      </if>
      <if test="channelTransType != null" >
        channel_trans_type = #{channelTransType,jdbcType=VARCHAR},
      </if>
      <if test="transAmount != null" >
        trans_amount = #{transAmount,jdbcType=DOUBLE},
      </if>
      <if test="sysTime != null" >
        sys_time = #{sysTime,jdbcType=TIMESTAMP},
      </if>
      <if test="channelTime != null" >
        channel_time = #{channelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="channelJnlNo != null" >
        channel_jnl_no = #{channelJnlNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="subAccountId != null" >
        sub_account_id = #{subAccountId,jdbcType=INTEGER},
      </if>
      <if test="subAccountCode != null" >
        sub_account_code = #{subAccountCode,jdbcType=VARCHAR},
      </if>
      <if test="returnCode != null" >
        return_code = #{returnCode,jdbcType=VARCHAR},
      </if>
      <if test="returnMsg != null" >
        return_msg = #{returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.BsPayOrdersJnl" >
    update bs_pay_orders_jnl
    set order_id = #{orderId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR},
      trans_code = #{transCode,jdbcType=VARCHAR},
      channel_trans_type = #{channelTransType,jdbcType=VARCHAR},
      trans_amount = #{transAmount,jdbcType=DOUBLE},
      sys_time = #{sysTime,jdbcType=TIMESTAMP},
      channel_time = #{channelTime,jdbcType=TIMESTAMP},
      channel_jnl_no = #{channelJnlNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      sub_account_id = #{subAccountId,jdbcType=INTEGER},
      sub_account_code = #{subAccountCode,jdbcType=VARCHAR},
      return_code = #{returnCode,jdbcType=VARCHAR},
      return_msg = #{returnMsg,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <!-- 订单明细流水查询 -->
  <select id="selectOrderDetailList" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultMap="BaseResultMapVO">
	select 
		u.user_name userName, 
		u.mobile mobile, 
		o.trans_type transType, 
		o.status status, 
		o.update_time updateTime, 
		p.id, p.order_id, p.order_no, p.trans_code, p.channel_trans_type, p.trans_amount, p.sys_time as sysTime, p.channel_time, 
		p.channel_jnl_no, p.user_id, p.sub_account_id, p.sub_account_code, p.return_code, p.return_msg, p.note, p.create_time 
	from
		bs_user u, bs_pay_orders o, bs_pay_orders_jnl p 
	where
		u.id = o.user_id and o.id = p.order_id  
   	<if test="userName != null and userName != '' " >
  		and u.user_name like concat(concat('%', #{userName,jdbcType=VARCHAR}),'%')
    </if>
    <if test="mobile != null and mobile != '' " >
  		and u.mobile like concat(concat('%', #{mobile,jdbcType=VARCHAR}),'%')
    </if>
    <if test="orderNo != null and orderNo != '' " >
  		and p.order_no like concat(concat('%', #{orderNo,jdbcType=VARCHAR}),'%')
    </if>
    <if test="transType != null and transType != '' " >
  		and o.trans_type = #{transType}
    </if>
    <if test="status != null and status != '' " >
  		and o.status = #{status}
    </if>
    <if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
	    and p.create_time between DATE_FORMAT(#{beginTime},'%Y-%m-%d 00:00:00') and DATE_FORMAT(#{overTime},'%Y-%m-%d 23:59:59')
	</if>
	<if test="startUpdateTime != null and endUpdateTime != null and startUpdateTime != '' and endUpdateTime != '' ">
	    and o.update_time between DATE_FORMAT(#{startUpdateTime},'%Y-%m-%d 00:00:00') and DATE_FORMAT(#{endUpdateTime},'%Y-%m-%d 23:59:59')
	</if>
    <if test="orderDirection!=null and orderDirection != ''  and orderField != ''  and orderField!=null ">   
 	    order by 	${orderField}  ${orderDirection} 
    </if>
   	<include refid="sql-global.pagination"/>
  </select>
  
  <!-- 订单明细流水记录统计  -->
  <select id="selectCountOrderDetail" parameterType="com.pinting.business.model.vo.BsPayOrdersVO" resultType="java.lang.Integer">
  	select 
		count(*) 
	from
		bs_user u, bs_pay_orders o, bs_pay_orders_jnl p 
	where
		u.id = o.user_id and o.id = p.order_id  
   	<if test="userName != null and userName != '' " >
  		and u.user_name like concat(concat('%', #{userName,jdbcType=VARCHAR}),'%')
    </if>
    <if test="mobile != null and mobile != '' " >
  		and u.mobile like concat(concat('%', #{mobile,jdbcType=VARCHAR}),'%')
    </if>
    <if test="orderNo != null and orderNo != '' " >
  		and p.order_no like concat(concat('%', #{orderNo,jdbcType=VARCHAR}),'%')
    </if>
    <if test="transType != null and transType != '' " >
  		and o.trans_type = #{transType}
    </if>
    <if test="status != null and status != '' " >
  		and o.status = #{status}
    </if>
    <if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
	    and p.create_time between DATE_FORMAT(#{beginTime},'%Y-%m-%d 00:00:00') and DATE_FORMAT(#{overTime},'%Y-%m-%d 23:59:59')
	</if>
	<if test="startUpdateTime != null and endUpdateTime != null and startUpdateTime != '' and endUpdateTime != '' ">
	    and o.update_time between DATE_FORMAT(#{startUpdateTime},'%Y-%m-%d 00:00:00') and DATE_FORMAT(#{endUpdateTime},'%Y-%m-%d 23:59:59')
	</if>
   </select>
</mapper>