<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinting.business.dao.LnBadDetailMapper">
  <resultMap id="BaseResultMap" type="com.pinting.business.model.LnBadDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bad_id" jdbcType="INTEGER" property="badId" />
    <result column="subject_code" jdbcType="VARCHAR" property="subjectCode" />
    <result column="done_amount" jdbcType="DOUBLE" property="doneAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bad_id, subject_code, done_amount, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.pinting.business.model.LnBadDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ln_bad_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ln_bad_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ln_bad_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.LnBadDetailExample">
    delete from ln_bad_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.LnBadDetail">
    insert into ln_bad_detail (id, bad_id, subject_code, 
      done_amount, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{badId,jdbcType=INTEGER}, #{subjectCode,jdbcType=VARCHAR}, 
      #{doneAmount,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.LnBadDetail">
    insert into ln_bad_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="badId != null">
        bad_id,
      </if>
      <if test="subjectCode != null">
        subject_code,
      </if>
      <if test="doneAmount != null">
        done_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="badId != null">
        #{badId,jdbcType=INTEGER},
      </if>
      <if test="subjectCode != null">
        #{subjectCode,jdbcType=VARCHAR},
      </if>
      <if test="doneAmount != null">
        #{doneAmount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.LnBadDetailExample" resultType="java.lang.Long">
    select count(*) from ln_bad_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ln_bad_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.badId != null">
        bad_id = #{record.badId,jdbcType=INTEGER},
      </if>
      <if test="record.subjectCode != null">
        subject_code = #{record.subjectCode,jdbcType=VARCHAR},
      </if>
      <if test="record.doneAmount != null">
        done_amount = #{record.doneAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ln_bad_detail
    set id = #{record.id,jdbcType=INTEGER},
      bad_id = #{record.badId,jdbcType=INTEGER},
      subject_code = #{record.subjectCode,jdbcType=VARCHAR},
      done_amount = #{record.doneAmount,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.LnBadDetail">
    update ln_bad_detail
    <set>
      <if test="badId != null">
        bad_id = #{badId,jdbcType=INTEGER},
      </if>
      <if test="subjectCode != null">
        subject_code = #{subjectCode,jdbcType=VARCHAR},
      </if>
      <if test="doneAmount != null">
        done_amount = #{doneAmount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.LnBadDetail">
    update ln_bad_detail
    set bad_id = #{badId,jdbcType=INTEGER},
      subject_code = #{subjectCode,jdbcType=VARCHAR},
      done_amount = #{doneAmount,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 坏账户余额（赞分期） -->
  <select id="selectBadloansZanAmount" resultType="java.lang.Double">
  	select IFNULL(sum(done_amount), 0) from ln_bad_detail 		
  </select>
  
</mapper>