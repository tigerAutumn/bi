<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinting.business.dao.BsDafyCustomerFixRecordMapper" >
  <resultMap id="BaseResultMap" type="com.pinting.business.model.BsDafyCustomerFixRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="op_user_id" property="opUserId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="before_dafy_customer_manager_id" property="beforeDafyCustomerManagerId" jdbcType="INTEGER" />
    <result column="after_dafy_customer_manager_id" property="afterDafyCustomerManagerId" jdbcType="INTEGER" />
    <result column="before_sub_account_id" property="beforeSubAccountId" jdbcType="VARCHAR" />
    <result column="after_sub_account_id" property="afterSubAccountId" jdbcType="VARCHAR" />
    <result column="split_time" property="splitTime" jdbcType="TIMESTAMP" />
    <result column="op_time" property="opTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, op_user_id, user_id, before_dafy_customer_manager_id, after_dafy_customer_manager_id, 
    before_sub_account_id, after_sub_account_id, split_time, op_time, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinting.business.model.BsDafyCustomerFixRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_dafy_customer_fix_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bs_dafy_customer_fix_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bs_dafy_customer_fix_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.BsDafyCustomerFixRecordExample" >
    delete from bs_dafy_customer_fix_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.BsDafyCustomerFixRecord" >
    insert into bs_dafy_customer_fix_record (id, op_user_id, user_id, 
      before_dafy_customer_manager_id, after_dafy_customer_manager_id, 
      before_sub_account_id, after_sub_account_id, 
      split_time, op_time, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{opUserId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{beforeDafyCustomerManagerId,jdbcType=INTEGER}, #{afterDafyCustomerManagerId,jdbcType=INTEGER}, 
      #{beforeSubAccountId,jdbcType=VARCHAR}, #{afterSubAccountId,jdbcType=VARCHAR}, 
      #{splitTime,jdbcType=TIMESTAMP}, #{opTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.BsDafyCustomerFixRecord" >
    insert into bs_dafy_customer_fix_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="opUserId != null" >
        op_user_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="beforeDafyCustomerManagerId != null" >
        before_dafy_customer_manager_id,
      </if>
      <if test="afterDafyCustomerManagerId != null" >
        after_dafy_customer_manager_id,
      </if>
      <if test="beforeSubAccountId != null" >
        before_sub_account_id,
      </if>
      <if test="afterSubAccountId != null" >
        after_sub_account_id,
      </if>
      <if test="splitTime != null" >
        split_time,
      </if>
      <if test="opTime != null" >
        op_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="opUserId != null" >
        #{opUserId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="beforeDafyCustomerManagerId != null" >
        #{beforeDafyCustomerManagerId,jdbcType=INTEGER},
      </if>
      <if test="afterDafyCustomerManagerId != null" >
        #{afterDafyCustomerManagerId,jdbcType=INTEGER},
      </if>
      <if test="beforeSubAccountId != null" >
        #{beforeSubAccountId,jdbcType=VARCHAR},
      </if>
      <if test="afterSubAccountId != null" >
        #{afterSubAccountId,jdbcType=VARCHAR},
      </if>
      <if test="splitTime != null" >
        #{splitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="opTime != null" >
        #{opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.BsDafyCustomerFixRecordExample" resultType="java.lang.Integer" >
    select count(*) from bs_dafy_customer_fix_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bs_dafy_customer_fix_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.opUserId != null" >
        op_user_id = #{record.opUserId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.beforeDafyCustomerManagerId != null" >
        before_dafy_customer_manager_id = #{record.beforeDafyCustomerManagerId,jdbcType=INTEGER},
      </if>
      <if test="record.afterDafyCustomerManagerId != null" >
        after_dafy_customer_manager_id = #{record.afterDafyCustomerManagerId,jdbcType=INTEGER},
      </if>
      <if test="record.beforeSubAccountId != null" >
        before_sub_account_id = #{record.beforeSubAccountId,jdbcType=VARCHAR},
      </if>
      <if test="record.afterSubAccountId != null" >
        after_sub_account_id = #{record.afterSubAccountId,jdbcType=VARCHAR},
      </if>
      <if test="record.splitTime != null" >
        split_time = #{record.splitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.opTime != null" >
        op_time = #{record.opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bs_dafy_customer_fix_record
    set id = #{record.id,jdbcType=INTEGER},
      op_user_id = #{record.opUserId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      before_dafy_customer_manager_id = #{record.beforeDafyCustomerManagerId,jdbcType=INTEGER},
      after_dafy_customer_manager_id = #{record.afterDafyCustomerManagerId,jdbcType=INTEGER},
      before_sub_account_id = #{record.beforeSubAccountId,jdbcType=VARCHAR},
      after_sub_account_id = #{record.afterSubAccountId,jdbcType=VARCHAR},
      split_time = #{record.splitTime,jdbcType=TIMESTAMP},
      op_time = #{record.opTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.BsDafyCustomerFixRecord" >
    update bs_dafy_customer_fix_record
    <set >
      <if test="opUserId != null" >
        op_user_id = #{opUserId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="beforeDafyCustomerManagerId != null" >
        before_dafy_customer_manager_id = #{beforeDafyCustomerManagerId,jdbcType=INTEGER},
      </if>
      <if test="afterDafyCustomerManagerId != null" >
        after_dafy_customer_manager_id = #{afterDafyCustomerManagerId,jdbcType=INTEGER},
      </if>
      <if test="beforeSubAccountId != null" >
        before_sub_account_id = #{beforeSubAccountId,jdbcType=VARCHAR},
      </if>
      <if test="afterSubAccountId != null" >
        after_sub_account_id = #{afterSubAccountId,jdbcType=VARCHAR},
      </if>
      <if test="splitTime != null" >
        split_time = #{splitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="opTime != null" >
        op_time = #{opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.BsDafyCustomerFixRecord" >
    update bs_dafy_customer_fix_record
    set op_user_id = #{opUserId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      before_dafy_customer_manager_id = #{beforeDafyCustomerManagerId,jdbcType=INTEGER},
      after_dafy_customer_manager_id = #{afterDafyCustomerManagerId,jdbcType=INTEGER},
      before_sub_account_id = #{beforeSubAccountId,jdbcType=VARCHAR},
      after_sub_account_id = #{afterSubAccountId,jdbcType=VARCHAR},
      split_time = #{splitTime,jdbcType=TIMESTAMP},
      op_time = #{opTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>