<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinting.business.dao.BsLoanFinanceRepayMapper" >
  <resultMap id="BaseResultMap" type="com.pinting.business.model.BsLoanFinanceRepay" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="fn_user_id" property="fnUserId" jdbcType="INTEGER" />
    <result column="finance_repay_schedule_id" property="financeRepayScheduleId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="total" property="total" jdbcType="DOUBLE" />
    <result column="principal" property="principal" jdbcType="DOUBLE" />
    <result column="interest" property="interest" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="plan_date" property="planDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, fn_user_id, finance_repay_schedule_id, order_no, total, principal, interest, 
    status, create_time, update_time,plan_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinting.business.model.BsLoanFinanceRepayExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_loan_finance_repay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bs_loan_finance_repay
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bs_loan_finance_repay
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.BsLoanFinanceRepayExample" >
    delete from bs_loan_finance_repay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.BsLoanFinanceRepay" >
    insert into bs_loan_finance_repay (id, fn_user_id, finance_repay_schedule_id, 
      order_no, total, principal, 
      interest, status, create_time, 
      update_time,plan_date)
    values (#{id,jdbcType=INTEGER}, #{fnUserId,jdbcType=INTEGER}, #{financeRepayScheduleId,jdbcType=INTEGER}, 
      #{orderNo,jdbcType=VARCHAR}, #{total,jdbcType=DOUBLE}, #{principal,jdbcType=DOUBLE}, 
      #{interest,jdbcType=DOUBLE}, #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP},#{planDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.BsLoanFinanceRepay" useGeneratedKeys="true" keyProperty="id">
    insert into bs_loan_finance_repay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fnUserId != null" >
        fn_user_id,
      </if>
      <if test="financeRepayScheduleId != null" >
        finance_repay_schedule_id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="principal != null" >
        principal,
      </if>
      <if test="interest != null" >
        interest,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="planDate != null" >
        plan_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fnUserId != null" >
        #{fnUserId,jdbcType=INTEGER},
      </if>
      <if test="financeRepayScheduleId != null" >
        #{financeRepayScheduleId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        #{total,jdbcType=DOUBLE},
      </if>
      <if test="principal != null" >
        #{principal,jdbcType=DOUBLE},
      </if>
      <if test="interest != null" >
        #{interest,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
      #{updateTime,jdbcType=TIMESTAMP},
    </if>
      <if test="planDate != null" >
        #{planDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.BsLoanFinanceRepayExample" resultType="java.lang.Integer" >
    select count(*) from bs_loan_finance_repay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bs_loan_finance_repay
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fnUserId != null" >
        fn_user_id = #{record.fnUserId,jdbcType=INTEGER},
      </if>
      <if test="record.financeRepayScheduleId != null" >
        finance_repay_schedule_id = #{record.financeRepayScheduleId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=DOUBLE},
      </if>
      <if test="record.principal != null" >
        principal = #{record.principal,jdbcType=DOUBLE},
      </if>
      <if test="record.interest != null" >
        interest = #{record.interest,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.planDate != null" >
        plan_date = #{record.planDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bs_loan_finance_repay
    set id = #{record.id,jdbcType=INTEGER},
      fn_user_id = #{record.fnUserId,jdbcType=INTEGER},
      finance_repay_schedule_id = #{record.financeRepayScheduleId,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=DOUBLE},
      principal = #{record.principal,jdbcType=DOUBLE},
      interest = #{record.interest,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
    plan_date = #{record.planDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.BsLoanFinanceRepay" >
    update bs_loan_finance_repay
    <set >
      <if test="fnUserId != null" >
        fn_user_id = #{fnUserId,jdbcType=INTEGER},
      </if>
      <if test="financeRepayScheduleId != null" >
        finance_repay_schedule_id = #{financeRepayScheduleId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=DOUBLE},
      </if>
      <if test="principal != null" >
        principal = #{principal,jdbcType=DOUBLE},
      </if>
      <if test="interest != null" >
        interest = #{interest,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planDate != null" >
        plan_date = #{planDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.BsLoanFinanceRepay" >
    update bs_loan_finance_repay
    set fn_user_id = #{fnUserId,jdbcType=INTEGER},
      finance_repay_schedule_id = #{financeRepayScheduleId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR},
      total = #{total,jdbcType=DOUBLE},
      principal = #{principal,jdbcType=DOUBLE},
      interest = #{interest,jdbcType=DOUBLE},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      plan_date = #{planDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectGroupBySubAcctId" resultMap="BaseResultMap">
  select a.fn_user_id fn_user_id,sum(a.total) total,sum(a.principal) principal,sum(a.interest) interest,
	min(update_time) create_time,max(update_time) update_time
	from bs_loan_finance_repay a <!-- ,ln_finance_repay_schedule b,ln_loan_relation c -->
	where a.`status` =#{status} and a.update_time &lt;#{endTime} 
	and a.update_time >=#{startTime} 
	<!-- and a.finance_repay_schedule_id = b.id and b.relation_id = c.id -->
	GROUP BY a.fn_user_id ;
  
  </select>
  
  <select id="selectByUserId" resultMap="BaseResultMap">
  select a.fn_user_id fn_user_id,sum(a.total) total,sum(a.principal) principal,sum(a.interest) interest,
	min(update_time) create_time,max(update_time) update_time
	from bs_loan_finance_repay a<!-- ,ln_finance_repay_schedule b,ln_loan_relation c -->
	where a.`status` =#{status} and a.update_time &lt;#{endTime} 
	and a.update_time >=#{startTime} 
	<!-- and a.finance_repay_schedule_id = b.id and b.relation_id = c.id -->
  	and a.fn_user_id = #{userId}
  </select>
  
</mapper>