<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinting.business.dao.BsDepCash30Mapper" >
  <resultMap id="BaseResultMap" type="com.pinting.business.model.BsDepCash30" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="partner_code" property="partnerCode" jdbcType="VARCHAR" />
    <result column="cash_date" property="cashDate" jdbcType="DATE" />
    <result column="quit_principal" property="quitPrincipal" jdbcType="DOUBLE" />
    <result column="quit_interest" property="quitInterest" jdbcType="DOUBLE" />
    <result column="repay_balance" property="repayBalance" jdbcType="DOUBLE" />
    <result column="vip_amount" property="vipAmount" jdbcType="DOUBLE" />
    <result column="vip_interest" property="vipInterest" jdbcType="DOUBLE" />
    <result column="prepare_balance" property="prepareBalance" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, partner_code, cash_date, quit_principal, quit_interest, repay_balance, vip_amount, 
    vip_interest, prepare_balance, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinting.business.model.BsDepCash30Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_dep_cash30
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bs_dep_cash30
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bs_dep_cash30
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.BsDepCash30Example" >
    delete from bs_dep_cash30
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.BsDepCash30" >
    insert into bs_dep_cash30 (id, partner_code, cash_date, 
      quit_principal, quit_interest, repay_balance, 
      vip_amount, vip_interest, prepare_balance, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{partnerCode,jdbcType=VARCHAR}, #{cashDate,jdbcType=DATE}, 
      #{quitPrincipal,jdbcType=DOUBLE}, #{quitInterest,jdbcType=DOUBLE}, #{repayBalance,jdbcType=DOUBLE}, 
      #{vipAmount,jdbcType=DOUBLE}, #{vipInterest,jdbcType=DOUBLE}, #{prepareBalance,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.BsDepCash30" >
    insert into bs_dep_cash30
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="partnerCode != null" >
        partner_code,
      </if>
      <if test="cashDate != null" >
        cash_date,
      </if>
      <if test="quitPrincipal != null" >
        quit_principal,
      </if>
      <if test="quitInterest != null" >
        quit_interest,
      </if>
      <if test="repayBalance != null" >
        repay_balance,
      </if>
      <if test="vipAmount != null" >
        vip_amount,
      </if>
      <if test="vipInterest != null" >
        vip_interest,
      </if>
      <if test="prepareBalance != null" >
        prepare_balance,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="partnerCode != null" >
        #{partnerCode,jdbcType=VARCHAR},
      </if>
      <if test="cashDate != null" >
        #{cashDate,jdbcType=DATE},
      </if>
      <if test="quitPrincipal != null" >
        #{quitPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="quitInterest != null" >
        #{quitInterest,jdbcType=DOUBLE},
      </if>
      <if test="repayBalance != null" >
        #{repayBalance,jdbcType=DOUBLE},
      </if>
      <if test="vipAmount != null" >
        #{vipAmount,jdbcType=DOUBLE},
      </if>
      <if test="vipInterest != null" >
        #{vipInterest,jdbcType=DOUBLE},
      </if>
      <if test="prepareBalance != null" >
        #{prepareBalance,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.BsDepCash30Example" resultType="java.lang.Integer" >
    select count(*) from bs_dep_cash30
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bs_dep_cash30
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.partnerCode != null" >
        partner_code = #{record.partnerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.cashDate != null" >
        cash_date = #{record.cashDate,jdbcType=DATE},
      </if>
      <if test="record.quitPrincipal != null" >
        quit_principal = #{record.quitPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="record.quitInterest != null" >
        quit_interest = #{record.quitInterest,jdbcType=DOUBLE},
      </if>
      <if test="record.repayBalance != null" >
        repay_balance = #{record.repayBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.vipAmount != null" >
        vip_amount = #{record.vipAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.vipInterest != null" >
        vip_interest = #{record.vipInterest,jdbcType=DOUBLE},
      </if>
      <if test="record.prepareBalance != null" >
        prepare_balance = #{record.prepareBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bs_dep_cash30
    set id = #{record.id,jdbcType=INTEGER},
      partner_code = #{record.partnerCode,jdbcType=VARCHAR},
      cash_date = #{record.cashDate,jdbcType=DATE},
      quit_principal = #{record.quitPrincipal,jdbcType=DOUBLE},
      quit_interest = #{record.quitInterest,jdbcType=DOUBLE},
      repay_balance = #{record.repayBalance,jdbcType=DOUBLE},
      vip_amount = #{record.vipAmount,jdbcType=DOUBLE},
      vip_interest = #{record.vipInterest,jdbcType=DOUBLE},
      prepare_balance = #{record.prepareBalance,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.BsDepCash30" >
    update bs_dep_cash30
    <set >
      <if test="partnerCode != null" >
        partner_code = #{partnerCode,jdbcType=VARCHAR},
      </if>
      <if test="cashDate != null" >
        cash_date = #{cashDate,jdbcType=DATE},
      </if>
      <if test="quitPrincipal != null" >
        quit_principal = #{quitPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="quitInterest != null" >
        quit_interest = #{quitInterest,jdbcType=DOUBLE},
      </if>
      <if test="repayBalance != null" >
        repay_balance = #{repayBalance,jdbcType=DOUBLE},
      </if>
      <if test="vipAmount != null" >
        vip_amount = #{vipAmount,jdbcType=DOUBLE},
      </if>
      <if test="vipInterest != null" >
        vip_interest = #{vipInterest,jdbcType=DOUBLE},
      </if>
      <if test="prepareBalance != null" >
        prepare_balance = #{prepareBalance,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.BsDepCash30" >
    update bs_dep_cash30
    set partner_code = #{partnerCode,jdbcType=VARCHAR},
      cash_date = #{cashDate,jdbcType=DATE},
      quit_principal = #{quitPrincipal,jdbcType=DOUBLE},
      quit_interest = #{quitInterest,jdbcType=DOUBLE},
      repay_balance = #{repayBalance,jdbcType=DOUBLE},
      vip_amount = #{vipAmount,jdbcType=DOUBLE},
      vip_interest = #{vipInterest,jdbcType=DOUBLE},
      prepare_balance = #{prepareBalance,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <insert id="insertDepCashList"  parameterType="java.util.List">
  	 insert into bs_dep_cash30 
  	 	(partner_code,cash_date, quit_principal, 
      quit_interest, repay_balance,vip_amount,vip_interest,prepare_balance,create_time,update_time)  values
  	 	
     <foreach collection="list" item="item" index="index"  separator="," >
  			(#{item.partnerCode},#{item.finishDate},#{item.quitPrincipalBalance},#{item.quitInterestBalance},#{item.beferDayRepayBalance},#{item.vipAmount},#{item.vipTransferInterest},round(#{item.quitPrincipalBalance},2)+round(#{item.quitInterestBalance},2)-round(#{item.beferDayRepayBalance},2)+round(#{item.vipAmount},2)+round(#{item.vipTransferInterest},2),now(),now())
     </foreach>
  
  </insert>
  
</mapper>