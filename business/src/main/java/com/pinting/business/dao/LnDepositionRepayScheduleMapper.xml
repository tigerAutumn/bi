<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinting.business.dao.LnDepositionRepayScheduleMapper">
  <resultMap id="BaseResultMap" type="com.pinting.business.model.LnDepositionRepaySchedule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ln_user_id" jdbcType="INTEGER" property="lnUserId" />
    <result column="loan_id" jdbcType="INTEGER" property="loanId" />
    <result column="partner_repay_id" jdbcType="VARCHAR" property="partnerRepayId" />
    <result column="serial_id" jdbcType="INTEGER" property="serialId" />
    <result column="plan_date" jdbcType="DATE" property="planDate" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="plan_total" jdbcType="DOUBLE" property="planTotal" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="return_flag" jdbcType="VARCHAR" property="returnFlag" />
    <result column="repay_type" jdbcType="VARCHAR" property="repayType" />
    <result column="df_order_no" jdbcType="VARCHAR" property="dfOrderNo" />
    <result column="dk_order_no" jdbcType="VARCHAR" property="dkOrderNo" />
    <result column="repay_order_no" jdbcType="VARCHAR" property="repayOrderNo" />
    <result column="return_order_no" jdbcType="VARCHAR" property="returnOrderNo" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ln_user_id, loan_id, partner_repay_id, serial_id, plan_date, finish_time, plan_total, 
    status, return_flag, repay_type, df_order_no, dk_order_no, repay_order_no, return_order_no, 
    note, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.pinting.business.model.LnDepositionRepayScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ln_deposition_repay_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ln_deposition_repay_schedule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ln_deposition_repay_schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.LnDepositionRepayScheduleExample">
    delete from ln_deposition_repay_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.LnDepositionRepaySchedule">
    insert into ln_deposition_repay_schedule (id, ln_user_id, loan_id, 
      partner_repay_id, serial_id, plan_date, 
      finish_time, plan_total, status, 
      return_flag, repay_type, df_order_no, 
      dk_order_no, repay_order_no, return_order_no, 
      note, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{lnUserId,jdbcType=INTEGER}, #{loanId,jdbcType=INTEGER}, 
      #{partnerRepayId,jdbcType=VARCHAR}, #{serialId,jdbcType=INTEGER}, #{planDate,jdbcType=DATE}, 
      #{finishTime,jdbcType=TIMESTAMP}, #{planTotal,jdbcType=DOUBLE}, #{status,jdbcType=VARCHAR}, 
      #{returnFlag,jdbcType=VARCHAR}, #{repayType,jdbcType=VARCHAR}, #{dfOrderNo,jdbcType=VARCHAR}, 
      #{dkOrderNo,jdbcType=VARCHAR}, #{repayOrderNo,jdbcType=VARCHAR}, #{returnOrderNo,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.LnDepositionRepaySchedule" useGeneratedKeys="true" keyProperty="id">
    insert into ln_deposition_repay_schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="lnUserId != null">
        ln_user_id,
      </if>
      <if test="loanId != null">
        loan_id,
      </if>
      <if test="partnerRepayId != null">
        partner_repay_id,
      </if>
      <if test="serialId != null">
        serial_id,
      </if>
      <if test="planDate != null">
        plan_date,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="planTotal != null">
        plan_total,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="returnFlag != null">
        return_flag,
      </if>
      <if test="repayType != null">
        repay_type,
      </if>
      <if test="dfOrderNo != null">
        df_order_no,
      </if>
      <if test="dkOrderNo != null">
        dk_order_no,
      </if>
      <if test="repayOrderNo != null">
        repay_order_no,
      </if>
      <if test="returnOrderNo != null">
        return_order_no,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="lnUserId != null">
        #{lnUserId,jdbcType=INTEGER},
      </if>
      <if test="loanId != null">
        #{loanId,jdbcType=INTEGER},
      </if>
      <if test="partnerRepayId != null">
        #{partnerRepayId,jdbcType=VARCHAR},
      </if>
      <if test="serialId != null">
        #{serialId,jdbcType=INTEGER},
      </if>
      <if test="planDate != null">
        #{planDate,jdbcType=DATE},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planTotal != null">
        #{planTotal,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="returnFlag != null">
        #{returnFlag,jdbcType=VARCHAR},
      </if>
      <if test="repayType != null">
        #{repayType,jdbcType=VARCHAR},
      </if>
      <if test="dfOrderNo != null">
        #{dfOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="dkOrderNo != null">
        #{dkOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="repayOrderNo != null">
        #{repayOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="returnOrderNo != null">
        #{returnOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.LnDepositionRepayScheduleExample" resultType="java.lang.Integer">
    select count(*) from ln_deposition_repay_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ln_deposition_repay_schedule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.lnUserId != null">
        ln_user_id = #{record.lnUserId,jdbcType=INTEGER},
      </if>
      <if test="record.loanId != null">
        loan_id = #{record.loanId,jdbcType=INTEGER},
      </if>
      <if test="record.partnerRepayId != null">
        partner_repay_id = #{record.partnerRepayId,jdbcType=VARCHAR},
      </if>
      <if test="record.serialId != null">
        serial_id = #{record.serialId,jdbcType=INTEGER},
      </if>
      <if test="record.planDate != null">
        plan_date = #{record.planDate,jdbcType=DATE},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.planTotal != null">
        plan_total = #{record.planTotal,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.returnFlag != null">
        return_flag = #{record.returnFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.repayType != null">
        repay_type = #{record.repayType,jdbcType=VARCHAR},
      </if>
      <if test="record.dfOrderNo != null">
        df_order_no = #{record.dfOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.dkOrderNo != null">
        dk_order_no = #{record.dkOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.repayOrderNo != null">
        repay_order_no = #{record.repayOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.returnOrderNo != null">
        return_order_no = #{record.returnOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ln_deposition_repay_schedule
    set id = #{record.id,jdbcType=INTEGER},
      ln_user_id = #{record.lnUserId,jdbcType=INTEGER},
      loan_id = #{record.loanId,jdbcType=INTEGER},
      partner_repay_id = #{record.partnerRepayId,jdbcType=VARCHAR},
      serial_id = #{record.serialId,jdbcType=INTEGER},
      plan_date = #{record.planDate,jdbcType=DATE},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      plan_total = #{record.planTotal,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=VARCHAR},
      return_flag = #{record.returnFlag,jdbcType=VARCHAR},
      repay_type = #{record.repayType,jdbcType=VARCHAR},
      df_order_no = #{record.dfOrderNo,jdbcType=VARCHAR},
      dk_order_no = #{record.dkOrderNo,jdbcType=VARCHAR},
      repay_order_no = #{record.repayOrderNo,jdbcType=VARCHAR},
      return_order_no = #{record.returnOrderNo,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.LnDepositionRepaySchedule">
    update ln_deposition_repay_schedule
    <set>
      <if test="lnUserId != null">
        ln_user_id = #{lnUserId,jdbcType=INTEGER},
      </if>
      <if test="loanId != null">
        loan_id = #{loanId,jdbcType=INTEGER},
      </if>
      <if test="partnerRepayId != null">
        partner_repay_id = #{partnerRepayId,jdbcType=VARCHAR},
      </if>
      <if test="serialId != null">
        serial_id = #{serialId,jdbcType=INTEGER},
      </if>
      <if test="planDate != null">
        plan_date = #{planDate,jdbcType=DATE},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planTotal != null">
        plan_total = #{planTotal,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="returnFlag != null">
        return_flag = #{returnFlag,jdbcType=VARCHAR},
      </if>
      <if test="repayType != null">
        repay_type = #{repayType,jdbcType=VARCHAR},
      </if>
      <if test="dfOrderNo != null">
        df_order_no = #{dfOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="dkOrderNo != null">
        dk_order_no = #{dkOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="repayOrderNo != null">
        repay_order_no = #{repayOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="returnOrderNo != null">
        return_order_no = #{returnOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.LnDepositionRepaySchedule">
    update ln_deposition_repay_schedule
    set ln_user_id = #{lnUserId,jdbcType=INTEGER},
      loan_id = #{loanId,jdbcType=INTEGER},
      partner_repay_id = #{partnerRepayId,jdbcType=VARCHAR},
      serial_id = #{serialId,jdbcType=INTEGER},
      plan_date = #{planDate,jdbcType=DATE},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      plan_total = #{planTotal,jdbcType=DOUBLE},
      status = #{status,jdbcType=VARCHAR},
      return_flag = #{returnFlag,jdbcType=VARCHAR},
      repay_type = #{repayType,jdbcType=VARCHAR},
      df_order_no = #{dfOrderNo,jdbcType=VARCHAR},
      dk_order_no = #{dkOrderNo,jdbcType=VARCHAR},
      repay_order_no = #{repayOrderNo,jdbcType=VARCHAR},
      return_order_no = #{returnOrderNo,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectMaxSerialIdByLoanId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select 
    case when max(serial_id) is null then 0 else max(serial_id) end serial_id
    from ln_deposition_repay_schedule
    where loan_id = #{loanId,jdbcType=INTEGER} 
  </select>

  <select id="getLimitDesList" parameterType="map" resultMap="BaseResultMap">
    SELECT * from ln_deposition_repay_schedule
    where return_flag = #{flag}
    ORDER BY plan_date, id
    LIMIT #{itemAccount}
  </select>

  <resultMap extends="BaseResultMap" id="LimitResultMap" type="com.pinting.business.accounting.loan.model.DepLimitRepaySchedule">
    <id column="partner_code" jdbcType="VARCHAR" property="partnerCode" />
  </resultMap>

  <select id="getRetLimitDesList" parameterType="map" resultMap="LimitResultMap">
    <![CDATA[
    	SELECT cc.* from (
     	 	SELECT aa.id,aa.ln_user_id,aa.loan_id,aa.partner_repay_id,aa.serial_id,aa.plan_date,
						aa.finish_time,aa.plan_total,aa.`status`,aa.return_flag,aa.repay_type,aa.df_order_no,
						aa.dk_order_no,aa.repay_order_no,aa.return_order_no,aa.note,aa.create_time,aa.update_time,
						aa.partner_code FROM (
       			 SELECT a.id,a.ln_user_id,a.loan_id,a.partner_repay_id,a.serial_id,a.plan_date,
						a.finish_time,a.plan_total,a.`status`,a.return_flag,a.repay_type,a.df_order_no,
						a.dk_order_no,a.repay_order_no,a.return_order_no,a.note,a.create_time,a.update_time,
						b.partner_code from ln_deposition_repay_schedule a
        			LEFT JOIN ln_user b ON a.ln_user_id = b.id where a.return_flag = #{flag} 
        			ORDER BY a.plan_date, a.serial_id, a.id
      		) aa GROUP BY aa.loan_id   
      ) cc ORDER BY cc.id   LIMIT #{itemAccount}
    ]]>
  </select>
  
  <select id="getDepRepayScheduleById" parameterType="map" resultMap="LimitResultMap">
    <![CDATA[
      SELECT a.*,b.partner_code from ln_deposition_repay_schedule a
        LEFT JOIN ln_user b
        ON a.ln_user_id = b.id
        where a.id = #{id}
    ]]>
  </select>
  <!-- ==========================管理台归集户代收代付START=============================== -->
  
  <resultMap id="RepayDSDFMap" extends="BaseResultMap" type="com.pinting.business.model.vo.RepayDSDFVO">
    <id column="user_name"  property="userName" jdbcType="VARCHAR"/>
    <id column="user_mobile"  property="userMobile" jdbcType="VARCHAR"/>
    <id column="type"  property="DSDFType" jdbcType="VARCHAR"/>
    <id column="amount"  property="amount" jdbcType="DOUBLE"/>
    <id column="done_time"  property="doneTime" jdbcType="TIMESTAMP"/>
    <id column="ds_amount"  property="DSAmount" jdbcType="DOUBLE"/>
    <id column="df_amount"  property="DFAmount" jdbcType="DOUBLE"/>
    <id column="status"  property="status" jdbcType="INTEGER"/>
    <id column="create_time"  property="createTime" jdbcType="TIMESTAMP"/>
    <id column="order_no"  property="orderNo" jdbcType="VARCHAR"/>
  </resultMap>
  <select id="getRepayDSDFList" parameterType="map" resultMap="RepayDSDFMap">
   SELECT
		(@rowNO := @rowNo + 1) rowno,
		t1.user_name,t1.user_mobile,type,t1.amount,DATE(t1.done_time)done_time,t1.status, DATE(t1.create_time) create_time
	FROM
		(SELECT @rowNO := #{position}) b,	
	  	(
	  		select t.*
	  		from (
	  		<if test="type != 'DF'">
			(
				select c.user_name,c.mobile user_mobile,'DS' type,a.plan_total amount,b.update_time done_time,
					b.status, b.create_time
					from ln_deposition_repay_schedule a,
					(select order_no,update_time,status,create_time
						from ln_pay_orders
						where trans_type = 'WITHDRAW_2_DEP_REPAY_CARD' 
						<if test="status != null and status != '' ">
							and `status`=#{status}
						</if>
						<if test="timeStart != null and timeStart != '' ">
                            and create_time >= DATE_FORMAT(#{timeStart},'%Y-%m-%d 00:00:00')
						</if>
						<if test="timeEnd != null and timeEnd != '' ">
                            and create_time &lt;= DATE_FORMAT(#{timeEnd},'%Y-%m-%d 23:59:59')
						</if>
					)b,ln_user c
				where a.df_order_no = b.order_no and c.id = a.ln_user_id 
					<if test="mobile != null and mobile != '' ">
						and c.mobile like concat(concat('%', #{mobile}),'%')
					</if>
					<if test="name != null and name != '' ">
						and c.user_name like concat(concat('%', #{name}),'%')
					</if>
					
			) 
			</if>
			<if test="type == '' or type== null">
				UNION ALL 
			</if>
			<if test="type != 'DS'">
			(
				select c.user_name,c.mobile user_mobile,'DF' type,a.plan_total amount,b.update_time done_time,
					b.status, b.create_time
					from ln_deposition_repay_schedule a,
					(select order_no,update_time,status,create_time
						from ln_pay_orders
						where trans_type = 'CUT_REPAY_2_BORROWER' 
						<if test="status != null and status != '' ">
							and `status`=#{status}
						</if>
						<if test="timeStart != null and timeStart != '' ">
                            and create_time >= DATE_FORMAT(#{timeStart},'%Y-%m-%d 00:00:00')
						</if>
						<if test="timeEnd != null and timeEnd != '' ">
                            and create_time &lt;= DATE_FORMAT(#{timeEnd},'%Y-%m-%d 23:59:59')
						</if>
					)b,ln_user c
				where a.dk_order_no = b.order_no and c.id = a.ln_user_id 
					<if test="mobile != null and mobile != '' ">
						and c.mobile like concat(concat('%', #{mobile}),'%')
					</if>
					<if test="name != null and name != '' ">
						and c.user_name like concat(concat('%', #{name}),'%')
					</if>
			)
			</if>
		)t ORDER BY t.done_time desc
	)t1 LIMIT #{position}, #{offset}
  </select>
  
  
  <select id="countRepayDSDF" parameterType="map" resultType="java.lang.Integer">
  
	  		select count(*) from (
	  		<if test="type != 'DF'">
			(
				select c.user_name,c.mobile,'DS' type,plan_total,DATE(b.create_time) create_time
					from ln_deposition_repay_schedule a,
					(select order_no,create_time
						from ln_pay_orders
						where trans_type = 'WITHDRAW_2_DEP_REPAY_CARD' 
						<if test="status != null and status != '' ">
							and `status`=#{status}
						</if>
						<if test="timeStart != null and timeStart != '' ">
                            and create_time >= DATE_FORMAT(#{timeStart},'%Y-%m-%d 00:00:00')
						</if>
						<if test="timeEnd != null and timeEnd != '' ">
                            and create_time &lt;= DATE_FORMAT(#{timeEnd},'%Y-%m-%d 23:59:59')
						</if>
					)b,ln_user c
				where a.df_order_no = b.order_no and c.id = a.ln_user_id 
					<if test="mobile != null and mobile != '' ">
						and c.mobile like concat(concat('%', #{mobile}),'%')
					</if>
					<if test="name != null and name != '' ">
						and c.user_name like concat(concat('%', #{name}),'%')
					</if>
					
			) 
			</if>
			<if test="type == '' or type== null">
				UNION ALL 
			</if>
			<if test="type != 'DS'">
			(
				select c.user_name,c.mobile,'DF' type,plan_total,b.create_time
					from ln_deposition_repay_schedule a,
					(select order_no,create_time
						from ln_pay_orders
						where trans_type = 'CUT_REPAY_2_BORROWER' 
						<if test="status != null and status != '' ">
							and `status`=#{status}
						</if>
						<if test="timeStart != null and timeStart != '' ">
							and create_time >= DATE_FORMAT(#{timeStart},'%Y-%m-%d 00:00:00')
						</if>
						<if test="timeEnd != null and timeEnd != '' ">
                            and create_time &lt;= DATE_FORMAT(#{timeEnd},'%Y-%m-%d 23:59:59')
						</if>
					)b,ln_user c
				where a.dk_order_no = b.order_no and c.id = a.ln_user_id 
					<if test="mobile != null and mobile != '' ">
						and c.mobile like concat(concat('%', #{mobile}),'%')
					</if>
					<if test="name != null and name != '' ">
						and c.user_name like concat(concat('%', #{name}),'%')
					</if>
			)
			</if>
		)t 

  </select>
  
  <select id="sumRepayDSDF" parameterType="map" resultMap="RepayDSDFMap">
  
	  		select 
				<if test="type == 'DS'">t1.plan_total ds_amount,'0' df_amount</if>
				<if test="type == 'DF'">t2.plan_total df_amount,'0' ds_amount</if>
				<if test="type == '' or type== null">IFNULL(t1.plan_total, 0) ds_amount, IFNULL(t2.plan_total, 0) df_amount</if>
			from 
	  		<if test="type != 'DF'">
			(
				select sum(plan_total) plan_total
					from ln_deposition_repay_schedule a,
					(select order_no,create_time
						from ln_pay_orders
						where trans_type = 'WITHDRAW_2_DEP_REPAY_CARD' 
						<if test="status != null and status != '' ">
							and `status`=#{status}
						</if>
						<if test="timeStart != null and timeStart != '' ">
                            and create_time >= DATE_FORMAT(#{timeStart},'%Y-%m-%d 00:00:00')
						</if>
						<if test="timeEnd != null and timeEnd != '' ">
                            and create_time &lt;= DATE_FORMAT(#{timeEnd},'%Y-%m-%d 23:59:59')
						</if>
					)b,ln_user c
				where a.df_order_no = b.order_no and c.id = a.ln_user_id 
					<if test="mobile != null and mobile != '' ">
						and c.mobile like concat(concat('%', #{mobile}),'%')
					</if>
					<if test="name != null and name != '' ">
						and c.user_name like concat(concat('%', #{name}),'%')
					</if>
					
			) t1
			</if>
			<if test="type == '' or type== null">
				,
			</if>
			<if test="type != 'DS'">
			(
				select sum(plan_total) plan_total
					from ln_deposition_repay_schedule a,
					(select order_no,create_time
						from ln_pay_orders
						where trans_type = 'CUT_REPAY_2_BORROWER' 
						<if test="status != null and status != '' ">
							and `status`=#{status}
						</if>
						<if test="timeStart != null and timeStart != '' ">
                            and create_time >= DATE_FORMAT(#{timeStart},'%Y-%m-%d 00:00:00')
						</if>
						<if test="timeEnd != null and timeEnd != '' ">
                            and create_time &lt;= DATE_FORMAT(#{timeEnd},'%Y-%m-%d 23:59:59')
						</if>
					)b,ln_user c
				where a.dk_order_no = b.order_no and c.id = a.ln_user_id 
					<if test="mobile != null and mobile != '' ">
						and c.mobile like concat(concat('%', #{mobile}),'%')
					</if>
					<if test="name != null and name != '' ">
						and c.user_name like concat(concat('%', #{name}),'%')
					</if>
			)t2
			</if>
		

  </select>
  
  <select id="countRebateOrder" parameterType="map" resultType="java.lang.Integer">
  		SELECT COUNT(1) 
  			FROM ln_deposition_repay_schedule 
  			WHERE partner_repay_id like 'RGCL%'
  			<if test="beginTime != null ">
				AND DATE_FORMAT(finish_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{beginTime},'%Y-%m-%d')
			</if>
			<if test="endTime != null ">
				AND DATE_FORMAT(finish_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
			</if>
  </select>
  
  <resultMap id="rebateOrderResultMap" type="com.pinting.business.model.vo.LnDepositionRepayScheduleVO">
		<result column="partner_loan_id" property="partnerLoanId" jdbcType="VARCHAR" />
		<result column="approve_amount" property="approveAmount" jdbcType="DOUBLE" />
		<result column="dk_order_no" property="dkOrderNo" jdbcType="VARCHAR" />
		<result column="plan_total" property="planTotal" jdbcType="DOUBLE" />
		<result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
	</resultMap>
	
  <select id="queryRebateOrderList" parameterType="map" resultMap="rebateOrderResultMap">
  		SELECT b.partner_loan_id, b.approve_amount, a.dk_order_no, s.plan_total, a.finish_time 
			FROM ln_deposition_repay_schedule a, ln_loan b,
			(SELECT a1.dk_order_no, sum(a1.plan_total) plan_total
				FROM ln_deposition_repay_schedule a1
				WHERE a1.partner_repay_id like 'RGCL%'
				<if test="beginTime != null ">
					AND DATE_FORMAT(a1.finish_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{beginTime},'%Y-%m-%d')
				</if>
				<if test="endTime != null ">
					AND DATE_FORMAT(a1.finish_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
				</if>
				GROUP BY a1.dk_order_no
				) s
			WHERE a.loan_id = b.id
			AND s.dk_order_no = a.dk_order_no
			AND a.partner_repay_id like 'RGCL%'
  		<if test="beginTime != null ">
			AND DATE_FORMAT(a.finish_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{beginTime},'%Y-%m-%d')
		</if>
		<if test="endTime != null ">
			AND DATE_FORMAT(a.finish_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
		</if>
			ORDER BY a.finish_time DESC
  		<include refid="sql-global.pagination" />
  </select>

  <select id="selectRepayDSDFBatchFlowList" parameterType="map" resultMap="RepayDSDFMap">
    select
      t.amount, t.status, t.type, t.order_no
    from
    (
      (
        select  a.plan_total amount, b.status, 'DS' type, b.order_no, b.update_time done_time
        from ln_deposition_repay_schedule a,
        (select order_no, status, update_time
        from ln_pay_orders
        where trans_type = 'WITHDRAW_2_DEP_REPAY_CARD' and `status` in (5, 6)
        <if test="time != null and time != '' ">
          and create_time between DATE_FORMAT(#{time},'%Y-%m-%d 00:00:00') and
          DATE_FORMAT(#{time},'%Y-%m-%d 23:59:59')
        </if>
        )b,ln_user c
        where a.df_order_no = b.order_no and c.id = a.ln_user_id
      )
      UNION ALL
      (
        select a.plan_total amount, b.status, 'DF' type, b.order_no, b.update_time done_time
        from ln_deposition_repay_schedule a,
        (select order_no, status, update_time
        from ln_pay_orders
        where trans_type = 'CUT_REPAY_2_BORROWER' and `status` in (5, 6)
        <if test="time != null and time != '' ">
          and create_time between DATE_FORMAT(#{time},'%Y-%m-%d 00:00:00') and DATE_FORMAT(#{time},'%Y-%m-%d 23:59:59')
        </if>
        )b,ln_user c
        where a.dk_order_no = b.order_no and c.id = a.ln_user_id
      )
    )t ORDER BY t.done_time desc
  </select>
  
    <!-- ==========================管理台归集户代收代付END=============================== -->

  <!-- 分期产品代偿协议（确认函，通知书），代偿支付金额 -->
  <select id="selectCompensateTransfer4StageList" parameterType="java.util.Map" resultType="com.pinting.business.model.vo.CompensateTransfersPdfVO">
      SELECT
          a.loan_id,
          a.plan_total AS transferCreditorAmount,
          a.serial_id,
          (b.plan_amount + c.plan_amount) AS agreementSumAmount,
          IFNULL(d.plan_amount,0) AS loanServiceFee,
          DATE(a.create_time) AS lateRepayDate
      FROM
          ln_deposition_repay_schedule a
      INNER JOIN ln_deposition_repay_schedule_detail b ON b.plan_id = a.id
      AND b.subject_code = 'PRINCIPAL'
      AND b.plan_amount > 0
      INNER JOIN ln_deposition_repay_schedule_detail c ON c.plan_id = a.id
      AND c.subject_code = 'INTEREST'
      LEFT JOIN ln_deposition_repay_schedule_detail d ON d.plan_id = a.id
      AND d.subject_code = 'LOAN_SERVICE_FEE'
      WHERE
          a.loan_id = #{loanId}
      AND (SELECT count(1) FROM ln_compensate_relation t where t.dep_plan_id = a.id) > 0
    </select>
</mapper>