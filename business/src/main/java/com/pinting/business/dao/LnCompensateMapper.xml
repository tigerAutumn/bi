<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinting.business.dao.LnCompensateMapper" >
  <resultMap id="BaseResultMap" type="com.pinting.business.model.LnCompensate" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="partner_code" property="partnerCode" jdbcType="VARCHAR" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="pay_order_no" property="payOrderNo" jdbcType="VARCHAR" />
    <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="total_mount" property="totalMount" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, partner_code, order_no, pay_order_no, apply_time, finish_time, total_mount, create_time, 
    update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinting.business.model.LnCompensateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ln_compensate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ln_compensate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ln_compensate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.LnCompensateExample" >
    delete from ln_compensate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.LnCompensate" >
    insert into ln_compensate (id, partner_code, order_no, 
      pay_order_no, apply_time, finish_time, 
      total_mount, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{partnerCode,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, 
      #{payOrderNo,jdbcType=VARCHAR}, #{applyTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, 
      #{totalMount,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective"   useGeneratedKeys="true" keyProperty="id"  parameterType="com.pinting.business.model.LnCompensate" >
    insert into ln_compensate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="partnerCode != null" >
        partner_code,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="payOrderNo != null" >
        pay_order_no,
      </if>
      <if test="applyTime != null" >
        apply_time,
      </if>
      <if test="finishTime != null" >
        finish_time,
      </if>
      <if test="totalMount != null" >
        total_mount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="partnerCode != null" >
        #{partnerCode,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="payOrderNo != null" >
        #{payOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null" >
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null" >
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalMount != null" >
        #{totalMount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.LnCompensateExample" resultType="java.lang.Integer" >
    select count(*) from ln_compensate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ln_compensate
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.partnerCode != null" >
        partner_code = #{record.partnerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payOrderNo != null" >
        pay_order_no = #{record.payOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.applyTime != null" >
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null" >
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalMount != null" >
        total_mount = #{record.totalMount,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ln_compensate
    set id = #{record.id,jdbcType=INTEGER},
      partner_code = #{record.partnerCode,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      pay_order_no = #{record.payOrderNo,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      total_mount = #{record.totalMount,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.LnCompensate" >
    update ln_compensate
    <set >
      <if test="partnerCode != null" >
        partner_code = #{partnerCode,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="payOrderNo != null" >
        pay_order_no = #{payOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null" >
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null" >
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalMount != null" >
        total_mount = #{totalMount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.LnCompensate" >
    update ln_compensate
    set partner_code = #{partnerCode,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      pay_order_no = #{payOrderNo,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      total_mount = #{totalMount,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <resultMap id="DafyLateRepaySelfForCheckVOMap" type="com.pinting.business.model.vo.DafyLateRepaySelfForCheckVO">
    <result column="partner_user_id" property="partner_user_id" jdbcType="VARCHAR"/>
    <result column="partner_loan_id" property="partner_loan_id" jdbcType="VARCHAR"/>
    <result column="partner_repay_id" property="partner_repay_id" jdbcType="VARCHAR"/>
    <result column="partner_code" property="partner_code" jdbcType="VARCHAR"/>
    <result column="trans_type" property="trans_type" jdbcType="VARCHAR"/>
    <result column="partner_business_flag" property="partner_business_flag" jdbcType="VARCHAR"/>
    <result column="total" property="total" jdbcType="DOUBLE"/>
    <result column="principal" property="principal" jdbcType="DOUBLE"/>
    <result column="interest" property="interest" jdbcType="DOUBLE"/>
    <result column="principal_overdue" property="principal_overdue" jdbcType="DOUBLE"/>
    <result column="interest_overdue" property="interest_overdue" jdbcType="DOUBLE"/>
    <result column="reservedField1" property="reservedField1" jdbcType="VARCHAR"/>
    <result column="pay_order_no" property="pay_order_no" jdbcType="VARCHAR"/>
    <result column="order_no" property="order_no" jdbcType="VARCHAR"/>
    <result column="apply_time" property="apply_time" jdbcType="TIMESTAMP"/>
    <result column="finish_time" property="finish_time" jdbcType="TIMESTAMP"/>
    <result column="channel" property="channel" jdbcType="VARCHAR"/>
    <result column="pay_type" property="pay_type" jdbcType="VARCHAR"/>
  </resultMap>
  <select id="selectForCheck" parameterType="map" resultMap="DafyLateRepaySelfForCheckVOMap">
    SELECT b.partner_user_id, b.partner_loan_id, b.partner_repay_id, '云贷' AS partner_code, '代偿' AS trans_type,
    l.partner_business_flag, b.total, b.principal, b.interest, b.principal_overdue, b.interest_overdue, "" as reservedField1,
    a.pay_order_no, a.order_no, a.apply_time, a.finish_time, 'BAOFOO' AS channel, '商户划拨' AS pay_type
    FROM ln_compensate a, ln_compensate_detail b, ln_loan l
    WHERE a.id = b.compensate_id AND b.partner_loan_id = l.partner_loan_id
    AND a.partner_code = 'YUN_DAI_SELF'
    AND b.`status` = 'SUCC' AND DATE(a.finish_time) = DATE(#{time})
    LIMIT #{start}, #{numPerPage}
  </select>
  <select id="selectForZsdCheck" parameterType="map" resultMap="DafyLateRepaySelfForCheckVOMap">
    SELECT b.partner_user_id, b.partner_loan_id, b.partner_repay_id, '赞时贷' AS partner_code, '代偿' AS trans_type,
    b.total, b.principal, b.interest, b.principal_overdue, b.interest_overdue, "" as reservedField1,
    a.pay_order_no, a.order_no, a.apply_time, a.finish_time, '宝付' AS channel, '商户划拨' AS pay_type
    FROM ln_compensate a, ln_compensate_detail b
    WHERE a.id = b.compensate_id  AND a.partner_code = 'ZSD'
    AND b.`status` = 'SUCC' AND DATE(a.apply_time) = DATE(#{time})
    LIMIT #{start}, #{numPerPage}
  </select>
  
  <select id="selectCompensateCheckAccountData" parameterType="map" resultMap="BaseResultMap">
    SELECT 
	a.id,a.partner_code,a.order_no,a.pay_order_no,
	a.apply_time,a.finish_time,a.total_mount,a.create_time,a.update_time
	FROM
	ln_compensate a
	WHERE 
	(a.partner_code = 'YUN_DAI_SELF' 
	OR a.partner_code = 'ZSD' )
	AND  DATE_FORMAT(a.apply_time ,'%Y-%m-%d') = DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 1 DAY),'%Y-%m-%d')
  </select>

  <select id="selectFor7DaiCheck" parameterType="map" resultMap="DafyLateRepaySelfForCheckVOMap">
    SELECT b.partner_user_id, b.partner_loan_id, b.partner_repay_id, '7贷' AS partner_code, '代偿' AS trans_type,
    l.partner_business_flag, b.total, b.principal, b.interest, b.principal_overdue, b.interest_overdue, "" as reservedField1,
    a.pay_order_no, a.order_no, a.apply_time, a.finish_time, '宝付' AS channel, '商户划拨' AS pay_type
    FROM ln_compensate a, ln_compensate_detail b, ln_loan l
    WHERE a.id = b.compensate_id  AND a.partner_code = '7_DAI_SELF'
    AND b.`status` = 'SUCC' AND DATE(a.finish_time) = DATE(#{time})
    AND b.partner_loan_id = l.partner_loan_id
    LIMIT #{start}, #{numPerPage}
  </select>
	
	
  <select id="countCheckAccountCompensate" resultType="java.lang.Integer">
	SELECT 
		count(b.id)
	FROM
		ln_compensate a,
    	ln_compensate_detail b 
	<where>
  		a.id = b.compensate_id and a.partner_code = #{partnerCode}
		AND DATE_FORMAT(a.apply_time ,'%Y-%m-%d') = DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 1 DAY),'%Y-%m-%d')
  		and b.`status`= #{status}
  	</where>
  </select>
  
  <select id="sumCheckAccountCompensate" resultType="java.lang.Double">
	SELECT 
		IFNULL(sum(b.total), 0)
	FROM
		ln_compensate a,
  		ln_compensate_detail b 
	<where>
		a.id = b.compensate_id and a.partner_code = #{partnerCode}
		AND DATE_FORMAT(a.apply_time ,'%Y-%m-%d') = DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 1 DAY),'%Y-%m-%d')
 		and b.`status`= #{status}
	</where>
  </select>
	
  <select id="selectCompensateCheckAccountInfo" parameterType="map" resultMap="BaseResultMap">
    SELECT 
	a.id,a.partner_code,a.order_no,a.pay_order_no,
	a.apply_time,a.finish_time,a.total_mount,a.create_time,a.update_time
	FROM
	ln_compensate a
	<where>
		(a.partner_code = 'YUN_DAI_SELF' OR a.partner_code = 'ZSD' OR a.partner_code = '7_DAI_SELF') AND
		DATE_FORMAT(a.apply_time ,'%Y-%m-%d') = DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 1 DAY),'%Y-%m-%d')
	</where> 
  </select>
	
</mapper>