<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinting.business.dao.BsHfbankBalanceCheckRecordMapper" >
  <resultMap id="BaseResultMap" type="com.pinting.business.model.BsHfbankBalanceCheckRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="hf_user_id" property="hfUserId" jdbcType="VARCHAR" />
    <result column="paycheck_date" property="paycheckDate" jdbcType="DATE" />
    <result column="balance" property="balance" jdbcType="DOUBLE" />
    <result column="available_balance" property="availableBalance" jdbcType="DOUBLE" />
    <result column="freeze_balance" property="freezeBalance" jdbcType="DOUBLE" />
    <result column="plat_no" property="platNo" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, hf_user_id, paycheck_date, balance, available_balance, freeze_balance, plat_no, 
    note, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinting.business.model.BsHfbankBalanceCheckRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_hfbank_balance_check_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bs_hfbank_balance_check_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bs_hfbank_balance_check_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.BsHfbankBalanceCheckRecordExample" >
    delete from bs_hfbank_balance_check_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.BsHfbankBalanceCheckRecord" >
    insert into bs_hfbank_balance_check_record (id, hf_user_id, paycheck_date, 
      balance, available_balance, freeze_balance, 
      plat_no, note, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{hfUserId,jdbcType=VARCHAR}, #{paycheckDate,jdbcType=DATE}, 
      #{balance,jdbcType=DOUBLE}, #{availableBalance,jdbcType=DOUBLE}, #{freezeBalance,jdbcType=DOUBLE}, 
      #{platNo,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.BsHfbankBalanceCheckRecord" >
    insert into bs_hfbank_balance_check_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="hfUserId != null" >
        hf_user_id,
      </if>
      <if test="paycheckDate != null" >
        paycheck_date,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="availableBalance != null" >
        available_balance,
      </if>
      <if test="freezeBalance != null" >
        freeze_balance,
      </if>
      <if test="platNo != null" >
        plat_no,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="hfUserId != null" >
        #{hfUserId,jdbcType=VARCHAR},
      </if>
      <if test="paycheckDate != null" >
        #{paycheckDate,jdbcType=DATE},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DOUBLE},
      </if>
      <if test="availableBalance != null" >
        #{availableBalance,jdbcType=DOUBLE},
      </if>
      <if test="freezeBalance != null" >
        #{freezeBalance,jdbcType=DOUBLE},
      </if>
      <if test="platNo != null" >
        #{platNo,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.BsHfbankBalanceCheckRecordExample" resultType="java.lang.Integer" >
    select count(*) from bs_hfbank_balance_check_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bs_hfbank_balance_check_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.hfUserId != null" >
        hf_user_id = #{record.hfUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.paycheckDate != null" >
        paycheck_date = #{record.paycheckDate,jdbcType=DATE},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DOUBLE},
      </if>
      <if test="record.availableBalance != null" >
        available_balance = #{record.availableBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.freezeBalance != null" >
        freeze_balance = #{record.freezeBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.platNo != null" >
        plat_no = #{record.platNo,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bs_hfbank_balance_check_record
    set id = #{record.id,jdbcType=INTEGER},
      hf_user_id = #{record.hfUserId,jdbcType=VARCHAR},
      paycheck_date = #{record.paycheckDate,jdbcType=DATE},
      balance = #{record.balance,jdbcType=DOUBLE},
      available_balance = #{record.availableBalance,jdbcType=DOUBLE},
      freeze_balance = #{record.freezeBalance,jdbcType=DOUBLE},
      plat_no = #{record.platNo,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.BsHfbankBalanceCheckRecord" >
    update bs_hfbank_balance_check_record
    <set >
      <if test="hfUserId != null" >
        hf_user_id = #{hfUserId,jdbcType=VARCHAR},
      </if>
      <if test="paycheckDate != null" >
        paycheck_date = #{paycheckDate,jdbcType=DATE},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="availableBalance != null" >
        available_balance = #{availableBalance,jdbcType=DOUBLE},
      </if>
      <if test="freezeBalance != null" >
        freeze_balance = #{freezeBalance,jdbcType=DOUBLE},
      </if>
      <if test="platNo != null" >
        plat_no = #{platNo,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.BsHfbankBalanceCheckRecord" >
    update bs_hfbank_balance_check_record
    set hf_user_id = #{hfUserId,jdbcType=VARCHAR},
      paycheck_date = #{paycheckDate,jdbcType=DATE},
      balance = #{balance,jdbcType=DOUBLE},
      available_balance = #{availableBalance,jdbcType=DOUBLE},
      freeze_balance = #{freezeBalance,jdbcType=DOUBLE},
      plat_no = #{platNo,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>