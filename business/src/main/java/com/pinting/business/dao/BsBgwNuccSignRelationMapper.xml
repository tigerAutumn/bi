<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinting.business.dao.BsBgwNuccSignRelationMapper" >
  <resultMap id="BaseResultMap" type="com.pinting.business.model.BsBgwNuccSignRelation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_type" property="userType" jdbcType="VARCHAR" />
    <result column="merchannt_no" property="merchanntNo" jdbcType="VARCHAR" />
    <result column="protocol_no" property="protocolNo" jdbcType="VARCHAR" />
    <result column="card_no" property="cardNo" jdbcType="VARCHAR" />
    <result column="card_owner" property="cardOwner" jdbcType="VARCHAR" />
    <result column="id_card" property="idCard" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="bind_time" property="bindTime" jdbcType="TIMESTAMP" />
    <result column="unbind_time" property="unbindTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, user_type, merchannt_no, protocol_no, card_no, card_owner, id_card, 
    mobile, status, bind_time, unbind_time, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinting.business.model.BsBgwNuccSignRelationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_bgw_nucc_sign_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bs_bgw_nucc_sign_relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bs_bgw_nucc_sign_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.BsBgwNuccSignRelationExample" >
    delete from bs_bgw_nucc_sign_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.BsBgwNuccSignRelation" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bs_bgw_nucc_sign_relation (user_id, user_type, merchannt_no, 
      protocol_no, card_no, card_owner, 
      id_card, mobile, status, 
      bind_time, unbind_time, create_time, 
      update_time)
    values (#{userId,jdbcType=INTEGER}, #{userType,jdbcType=VARCHAR}, #{merchanntNo,jdbcType=VARCHAR}, 
      #{protocolNo,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR}, #{cardOwner,jdbcType=VARCHAR}, 
      #{idCard,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{bindTime,jdbcType=TIMESTAMP}, #{unbindTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.BsBgwNuccSignRelation" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bs_bgw_nucc_sign_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="merchanntNo != null" >
        merchannt_no,
      </if>
      <if test="protocolNo != null" >
        protocol_no,
      </if>
      <if test="cardNo != null" >
        card_no,
      </if>
      <if test="cardOwner != null" >
        card_owner,
      </if>
      <if test="idCard != null" >
        id_card,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="bindTime != null" >
        bind_time,
      </if>
      <if test="unbindTime != null" >
        unbind_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="merchanntNo != null" >
        #{merchanntNo,jdbcType=VARCHAR},
      </if>
      <if test="protocolNo != null" >
        #{protocolNo,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="cardOwner != null" >
        #{cardOwner,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="bindTime != null" >
        #{bindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unbindTime != null" >
        #{unbindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.BsBgwNuccSignRelationExample" resultType="java.lang.Integer" >
    select count(*) from bs_bgw_nucc_sign_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bs_bgw_nucc_sign_relation
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=VARCHAR},
      </if>
      <if test="record.merchanntNo != null" >
        merchannt_no = #{record.merchanntNo,jdbcType=VARCHAR},
      </if>
      <if test="record.protocolNo != null" >
        protocol_no = #{record.protocolNo,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNo != null" >
        card_no = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.cardOwner != null" >
        card_owner = #{record.cardOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null" >
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.bindTime != null" >
        bind_time = #{record.bindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.unbindTime != null" >
        unbind_time = #{record.unbindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bs_bgw_nucc_sign_relation
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_type = #{record.userType,jdbcType=VARCHAR},
      merchannt_no = #{record.merchanntNo,jdbcType=VARCHAR},
      protocol_no = #{record.protocolNo,jdbcType=VARCHAR},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      card_owner = #{record.cardOwner,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      bind_time = #{record.bindTime,jdbcType=TIMESTAMP},
      unbind_time = #{record.unbindTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.BsBgwNuccSignRelation" >
    update bs_bgw_nucc_sign_relation
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="merchanntNo != null" >
        merchannt_no = #{merchanntNo,jdbcType=VARCHAR},
      </if>
      <if test="protocolNo != null" >
        protocol_no = #{protocolNo,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="cardOwner != null" >
        card_owner = #{cardOwner,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="bindTime != null" >
        bind_time = #{bindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unbindTime != null" >
        unbind_time = #{unbindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.BsBgwNuccSignRelation" >
    update bs_bgw_nucc_sign_relation
    set user_id = #{userId,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=VARCHAR},
      merchannt_no = #{merchanntNo,jdbcType=VARCHAR},
      protocol_no = #{protocolNo,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      card_owner = #{cardOwner,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      bind_time = #{bindTime,jdbcType=TIMESTAMP},
      unbind_time = #{unbindTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>




    <insert id="batchInsert" parameterType="java.util.List">
        insert into bs_bgw_nucc_sign_relation (user_id, user_type, merchannt_no,
        protocol_no, card_no, card_owner,
        id_card, mobile, status,
        bind_time, unbind_time, create_time,
        update_time)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.userId,jdbcType=INTEGER}, #{item.userType,jdbcType=VARCHAR}, #{item.merchanntNo,jdbcType=VARCHAR},
            #{item.protocolNo,jdbcType=VARCHAR}, #{item.cardNo,jdbcType=VARCHAR}, #{item.cardOwner,jdbcType=VARCHAR},
            #{item.idCard,jdbcType=VARCHAR}, #{item.mobile,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER},
            #{item.bindTime,jdbcType=TIMESTAMP}, #{item.unbindTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <update id="batchUpdate" parameterType="java.util.List">
        update bs_bgw_nucc_sign_relation
        set
        protocol_no =
        <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
          when #{item.id} then #{item.protocolNo}
        </foreach>
        ,bind_time =
        <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
          when #{item.id} then #{item.bindTime}
        </foreach>
        ,update_time =
        <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
         when #{item.id} then #{item.updateTime}
        </foreach>
        where id in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
          #{item.id}
        </foreach>
    </update>

</mapper>