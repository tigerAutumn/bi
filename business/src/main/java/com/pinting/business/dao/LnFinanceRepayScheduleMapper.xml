<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinting.business.dao.LnFinanceRepayScheduleMapper">
  <resultMap id="BaseResultMap" type="com.pinting.business.model.LnFinanceRepaySchedule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="relation_id" jdbcType="INTEGER" property="relationId" />
    <result column="repay_serial" jdbcType="INTEGER" property="repaySerial" />
    <result column="plan_date" jdbcType="DATE" property="planDate" />
    <result column="plan_total" jdbcType="DOUBLE" property="planTotal" />
    <result column="plan_principal" jdbcType="DOUBLE" property="planPrincipal" />
    <result column="plan_interest" jdbcType="DOUBLE" property="planInterest" />
    <result column="plan_trans_interest" jdbcType="DOUBLE" property="planTransInterest" />
    <result column="plan_fee" jdbcType="DOUBLE" property="planFee" />
    <result column="diff_amount" jdbcType="DOUBLE" property="diffAmount" />
    <result column="left_plan_interest" jdbcType="DOUBLE" property="leftPlanInterest" />
    <result column="done_time" jdbcType="TIMESTAMP" property="doneTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, relation_id, repay_serial, plan_date, plan_total, plan_principal, plan_interest, 
    plan_trans_interest, plan_fee, diff_amount, left_plan_interest, done_time, status, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.pinting.business.model.LnFinanceRepayScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ln_finance_repay_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ln_finance_repay_schedule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ln_finance_repay_schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.LnFinanceRepayScheduleExample">
    delete from ln_finance_repay_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.LnFinanceRepaySchedule">
    insert into ln_finance_repay_schedule (id, relation_id, repay_serial, 
      plan_date, plan_total, plan_principal, 
      plan_interest, plan_trans_interest, plan_fee, 
      diff_amount, left_plan_interest, done_time, status, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{relationId,jdbcType=INTEGER}, #{repaySerial,jdbcType=INTEGER}, 
      #{planDate,jdbcType=DATE}, #{planTotal,jdbcType=DOUBLE}, #{planPrincipal,jdbcType=DOUBLE}, 
      #{planInterest,jdbcType=DOUBLE}, #{planTransInterest,jdbcType=DOUBLE}, #{planFee,jdbcType=DOUBLE}, 
      #{diffAmount,jdbcType=DOUBLE}, #{leftPlanInterest,jdbcType=DOUBLE}, #{doneTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.LnFinanceRepaySchedule">
    insert into ln_finance_repay_schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="relationId != null">
        relation_id,
      </if>
      <if test="repaySerial != null">
        repay_serial,
      </if>
      <if test="planDate != null">
        plan_date,
      </if>
      <if test="planTotal != null">
        plan_total,
      </if>
      <if test="planPrincipal != null">
        plan_principal,
      </if>
      <if test="planInterest != null">
        plan_interest,
      </if>
      <if test="planTransInterest != null">
        plan_trans_interest,
      </if>
      <if test="planFee != null">
        plan_fee,
      </if>
      <if test="diffAmount != null">
        diff_amount,
      </if>
      <if test="leftPlanInterest != null">
        left_plan_interest,
      </if>
      <if test="doneTime != null">
        done_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="relationId != null">
        #{relationId,jdbcType=INTEGER},
      </if>
      <if test="repaySerial != null">
        #{repaySerial,jdbcType=INTEGER},
      </if>
      <if test="planDate != null">
        #{planDate,jdbcType=DATE},
      </if>
      <if test="planTotal != null">
        #{planTotal,jdbcType=DOUBLE},
      </if>
      <if test="planPrincipal != null">
        #{planPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="planInterest != null">
        #{planInterest,jdbcType=DOUBLE},
      </if>
      <if test="planTransInterest != null">
        #{planTransInterest,jdbcType=DOUBLE},
      </if>
      <if test="planFee != null">
        #{planFee,jdbcType=DOUBLE},
      </if>
      <if test="diffAmount != null">
        #{diffAmount,jdbcType=DOUBLE},
      </if>
      <if test="leftPlanInterest != null">
        #{leftPlanInterest,jdbcType=DOUBLE},
      </if>
      <if test="doneTime != null">
        #{doneTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.LnFinanceRepayScheduleExample" resultType="java.lang.Integer">
    select count(*) from ln_finance_repay_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ln_finance_repay_schedule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.relationId != null">
        relation_id = #{record.relationId,jdbcType=INTEGER},
      </if>
      <if test="record.repaySerial != null">
        repay_serial = #{record.repaySerial,jdbcType=INTEGER},
      </if>
      <if test="record.planDate != null">
        plan_date = #{record.planDate,jdbcType=DATE},
      </if>
      <if test="record.planTotal != null">
        plan_total = #{record.planTotal,jdbcType=DOUBLE},
      </if>
      <if test="record.planPrincipal != null">
        plan_principal = #{record.planPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="record.planInterest != null">
        plan_interest = #{record.planInterest,jdbcType=DOUBLE},
      </if>
      <if test="record.planTransInterest != null">
        plan_trans_interest = #{record.planTransInterest,jdbcType=DOUBLE},
      </if>
      <if test="record.planFee != null">
        plan_fee = #{record.planFee,jdbcType=DOUBLE},
      </if>
      <if test="record.diffAmount != null">
        diff_amount = #{record.diffAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.leftPlanInterest != null">
        left_plan_interest = #{record.leftPlanInterest,jdbcType=DOUBLE},
      </if>
      <if test="record.doneTime != null">
        done_time = #{record.doneTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ln_finance_repay_schedule
    set id = #{record.id,jdbcType=INTEGER},
      relation_id = #{record.relationId,jdbcType=INTEGER},
      repay_serial = #{record.repaySerial,jdbcType=INTEGER},
      plan_date = #{record.planDate,jdbcType=DATE},
      plan_total = #{record.planTotal,jdbcType=DOUBLE},
      plan_principal = #{record.planPrincipal,jdbcType=DOUBLE},
      plan_interest = #{record.planInterest,jdbcType=DOUBLE},
      plan_trans_interest = #{record.planTransInterest,jdbcType=DOUBLE},
      plan_fee = #{record.planFee,jdbcType=DOUBLE},
      diff_amount = #{record.diffAmount,jdbcType=DOUBLE},
      left_plan_interest = #{record.leftPlanInterest,jdbcType=DOUBLE},
      done_time = #{record.doneTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.LnFinanceRepaySchedule">
    update ln_finance_repay_schedule
    <set>
      <if test="relationId != null">
        relation_id = #{relationId,jdbcType=INTEGER},
      </if>
      <if test="repaySerial != null">
        repay_serial = #{repaySerial,jdbcType=INTEGER},
      </if>
      <if test="planDate != null">
        plan_date = #{planDate,jdbcType=DATE},
      </if>
      <if test="planTotal != null">
        plan_total = #{planTotal,jdbcType=DOUBLE},
      </if>
      <if test="planPrincipal != null">
        plan_principal = #{planPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="planInterest != null">
        plan_interest = #{planInterest,jdbcType=DOUBLE},
      </if>
      <if test="planTransInterest != null">
        plan_trans_interest = #{planTransInterest,jdbcType=DOUBLE},
      </if>
      <if test="planFee != null">
        plan_fee = #{planFee,jdbcType=DOUBLE},
      </if>
      <if test="diffAmount != null">
        diff_amount = #{diffAmount,jdbcType=DOUBLE},
      </if>
      <if test="leftPlanInterest != null">
        left_plan_interest = #{leftPlanInterest,jdbcType=DOUBLE},
      </if>
      <if test="doneTime != null">
        done_time = #{doneTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.LnFinanceRepaySchedule">
    update ln_finance_repay_schedule
    set relation_id = #{relationId,jdbcType=INTEGER},
      repay_serial = #{repaySerial,jdbcType=INTEGER},
      plan_date = #{planDate,jdbcType=DATE},
      plan_total = #{planTotal,jdbcType=DOUBLE},
      plan_principal = #{planPrincipal,jdbcType=DOUBLE},
      plan_interest = #{planInterest,jdbcType=DOUBLE},
      plan_trans_interest = #{planTransInterest,jdbcType=DOUBLE},
      plan_fee = #{planFee,jdbcType=DOUBLE},
      diff_amount = #{diffAmount,jdbcType=DOUBLE},
      left_plan_interest = #{leftPlanInterest,jdbcType=DOUBLE},
      done_time = #{doneTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="sumAmountByLoanIdSerialId" parameterType="java.util.Map" resultType="java.lang.Double">
  	select sum(a.plan_total) 
  	from ln_finance_repay_schedule a, ln_loan_relation b 
  	where b.loan_id = #{loanId} and b.id = a.relation_id 
  	and a.repay_serial = #{serialId}
  </select>
  
   <select id="sumInterestByLoanIdSerialId" parameterType="java.util.Map" resultType="java.lang.Double">
  	select sum(a.plan_interest) 
  	from ln_finance_repay_schedule a, ln_loan_relation b 
  	where b.loan_id = #{loanId} and b.id = a.relation_id 
  	and a.repay_serial = #{serialId}
  </select>
	
  <select id="sumTodayInterestByUserId" parameterType="java.util.Map" resultType="java.lang.Double">
    SELECT SUM(b.plan_interest) FROM ln_loan_relation a, ln_finance_repay_schedule b
    WHERE a.bs_user_id = #{userId} AND a.id = b.relation_id AND DATE(b.done_time) = DATE(NOW()) AND b.`status` = 'REPAIED'
  </select>

  <resultMap id="BaseResultVOMap" type="com.pinting.business.model.vo.LnFinanceRepayScheduleVO">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="relation_id" jdbcType="INTEGER" property="relationId" />
    <result column="repay_serial" jdbcType="INTEGER" property="repaySerial" />
    <result column="plan_date" jdbcType="DATE" property="planDate" />
    <result column="plan_total" jdbcType="DOUBLE" property="planTotal" />
    <result column="plan_principal" jdbcType="DOUBLE" property="planPrincipal" />
    <result column="plan_interest" jdbcType="DOUBLE" property="planInterest" />
    <result column="plan_trans_interest" jdbcType="DOUBLE" property="planTransInterest" />
    <result column="plan_fee" jdbcType="DOUBLE" property="planFee" />
    <result column="diff_amount" jdbcType="DOUBLE" property="diffAmount" />
    <result column="done_time" jdbcType="TIMESTAMP" property="doneTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="hf_user_id" jdbcType="VARCHAR" property="hfUserId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="bs_sub_account_id" jdbcType="INTEGER" property="bsSubAccountId" />
  </resultMap>
  <select id="selectFnRepayScheduleBySerial" parameterType="java.util.Map" resultMap="BaseResultVOMap">
    SELECT
      b.*, c.hf_user_id,c.user_id,a.bs_sub_account_id
    FROM
      ln_loan_relation a, ln_finance_repay_schedule b,
	  bs_hfbank_user_ext c
    WHERE
      a.id = b.relation_id
      AND b.`status`='REPAYING'
	  AND c.user_id = a.bs_user_id
      AND b.repay_serial = #{serialId}
      AND a.loan_id = #{loanId}
      AND a.`status` in('SUCCESS','TRANSFERRED')
  </select>

  <select id="selectBySubAccount" parameterType="java.util.Map" resultMap="BaseResultMap">
 	select b.* from ln_loan_relation a, ln_finance_repay_schedule b
 	where  a.id = b.relation_id and a.bs_sub_account_id=#{subAccountId}
  </select>
  
  
  <select id="countNotRepaied" parameterType="java.util.Map" resultType="java.lang.Integer">
 	 select count(b.id) from 
  (select id from ln_loan_relation where bs_sub_account_id=#{subAccountId}
  	and `status` in('SUCCESS','REPAID')
  )a, 
  ln_finance_repay_schedule b
 	where  a.id = b.relation_id and b.`status` in('INIT','REPAYING');
  
  </select>
</mapper>