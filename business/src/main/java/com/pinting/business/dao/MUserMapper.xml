<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinting.business.dao.MUserMapper" >
  <resultMap id="BaseResultMap" type="com.pinting.business.model.MUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="nick" property="nick" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="user_type" property="userType" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="logout_time" property="logoutTime" jdbcType="TIMESTAMP" />
    <result column="login_fail_times" property="loginFailTimes" jdbcType="INTEGER" />
    <result column="login_fail_time" property="loginFailTime" jdbcType="TIMESTAMP" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="agent_id" property="agentId" jdbcType="INTEGER" />
  
  </resultMap>
   <resultMap id="ResultMap" type="com.pinting.business.model.MUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="nick" property="nick" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="logout_time" property="logoutTime" jdbcType="TIMESTAMP" />
    <result column="note" property="note" jdbcType="VARCHAR" />
   	<result column="roleName" property="roleName" jdbcType="VARCHAR" />
   	<result column="agent_name" property="agentName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, nick, password, email, mobile, status, role_id, user_type, create_time, 
    login_time, logout_time, login_fail_times, login_fail_time, note, agent_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinting.business.model.MUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from m_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="sql-global.pagination"/>
  </select>
  <select id="selectMUserByExample" resultMap="BaseResultMap" parameterType="com.pinting.business.model.MUser" >
    select

    <include refid="Base_Column_List" />
    from m_user where 1=1
	<if test="name!=null and name!='' ">   
       and name like CONCAT(CONCAT('%', #{name}),'%')    
    	</if>  

    <include refid="sql-global.pagination"/>
  </select>
  <select id="selectMUserListByExample" resultMap="ResultMap" parameterType="com.pinting.business.model.MUser" >
    select m.*,a.agent_name from ( select	
    u.id,u.name name,u.nick,u.email,u.mobile,u.status,u.create_time,u.login_time,u.logout_time,u.agent_id,u.note,r.name as rolename,u.role_id
    from m_user u left join m_role r on r.id = u.role_id ) as m left join bs_agent a on m.agent_id = a.id where  1 = 1
		<if test="name!=null and name!='' ">   
       and m.name like CONCAT(CONCAT('%', #{name}),'%')    
    	</if>  
    	<if test="mobile!=null and mobile!='' ">   
       and m.mobile like CONCAT(CONCAT('%', #{mobile}),'%')    
    	</if>  
    	<if test="status!=null and status>0 ">   
        	and m.status = #{status}
    	</if>
    	<if test="roleId!=null">   
        	and m.role_id = #{roleId}
    	</if>
    	<include refid="sql-global.pagination"/>	
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from m_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from m_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.MUserExample" >
    delete from m_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.MUser" >
    insert into m_user (id, name, nick, 
      password, email, mobile, 
      status, role_id, user_type, 
      create_time, login_time, logout_time, 
      note, agent_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{nick,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{userType,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{loginTime,jdbcType=TIMESTAMP}, #{logoutTime,jdbcType=TIMESTAMP}, 
      #{note,jdbcType=VARCHAR}, #{agentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.MUser" useGeneratedKeys="true" keyProperty="id">
    insert into m_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nick != null" >
        nick,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="logoutTime != null" >
        logout_time,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="agentId != null" >
        agent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nick != null" >
        #{nick,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logoutTime != null" >
        #{logoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null" >
        #{agentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.MUserExample" resultType="java.lang.Integer" >
    select count(*) from m_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update m_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nick != null" >
        nick = #{record.nick,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logoutTime != null" >
        logout_time = #{record.logoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginFailTimes != null" >
        login_fail_times = #{record.loginFailTimes,jdbcType=INTEGER},
      </if>
      <if test="record.loginFailTime != null" >
        login_fail_time = #{record.loginFailTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.agentId != null" >
        agent_id = #{record.agentId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update m_user
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      nick = #{record.nick,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      role_id = #{record.roleId,jdbcType=INTEGER},
      user_type = #{record.userType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      logout_time = #{record.logoutTime,jdbcType=TIMESTAMP},
      note = #{record.note,jdbcType=VARCHAR},
      agent_id = #{record.agentId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.MUser" >
    update m_user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nick != null" >
        nick = #{nick,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logoutTime != null" >
        logout_time = #{logoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginFailTimes != null" >
        login_fail_times = #{loginFailTimes,jdbcType=INTEGER},
      </if>
      <if test="loginFailTime != null" >
        login_fail_time = #{loginFailTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null" >
        agent_id = #{agentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.MUser" >
    update m_user
    set name = #{name,jdbcType=VARCHAR},
      nick = #{nick,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      logout_time = #{logoutTime,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR},
      agent_id = #{agentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectApplicantListStatistics"  resultMap="ResultMap" parameterType="java.util.Map" >
	SELECT b.id,b.`name` FROM 
	bs_red_packet_check a 
	LEFT JOIN m_user b ON a.applicant = b.id
	WHERE b.id IS NOT NULL
	GROUP BY b.id
  </select>
  
  <update id="updateAgentIdByPrimaryKey" parameterType="com.pinting.business.model.MUser" >
    update m_user set
    agent_id = #{agentId}
    where id = #{id}
  </update>
  
</mapper>