<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinting.business.dao.BsAccountMapper" >
  <resultMap id="BaseResultMap" type="com.pinting.business.model.BsAccount" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account_code" property="accountCode" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="open_time" property="openTime" jdbcType="TIMESTAMP" />
    <result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />
    <result column="last_trans_time" property="lastTransTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, account_code, user_id, open_time, close_time, last_trans_time, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinting.business.model.BsAccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bs_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bs_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.BsAccountExample" >
    delete from bs_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.BsAccount" >
    insert into bs_account (id, account_code, user_id, 
      open_time, close_time, last_trans_time, 
      status)
    values (#{id,jdbcType=INTEGER}, #{accountCode,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{openTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP}, #{lastTransTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.BsAccount" useGeneratedKeys="true"  keyProperty="id">
    insert into bs_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountCode != null" >
        account_code,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="openTime != null" >
        open_time,
      </if>
      <if test="closeTime != null" >
        close_time,
      </if>
      <if test="lastTransTime != null" >
        last_trans_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountCode != null" >
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="openTime != null" >
        #{openTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null" >
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTransTime != null" >
        #{lastTransTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.BsAccountExample" resultType="java.lang.Integer" >
    select count(*) from bs_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bs_account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountCode != null" >
        account_code = #{record.accountCode,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.openTime != null" >
        open_time = #{record.openTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.closeTime != null" >
        close_time = #{record.closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastTransTime != null" >
        last_trans_time = #{record.lastTransTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bs_account
    set id = #{record.id,jdbcType=INTEGER},
      account_code = #{record.accountCode,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      open_time = #{record.openTime,jdbcType=TIMESTAMP},
      close_time = #{record.closeTime,jdbcType=TIMESTAMP},
      last_trans_time = #{record.lastTransTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.BsAccount" >
    update bs_account
    <set >
      <if test="accountCode != null" >
        account_code = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="openTime != null" >
        open_time = #{openTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null" >
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTransTime != null" >
        last_trans_time = #{lastTransTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.BsAccount" >
    update bs_account
    set account_code = #{accountCode,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      open_time = #{openTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP},
      last_trans_time = #{lastTransTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
	<select id="currentNewAccountNumber" parameterType="java.util.Map" resultType="java.util.Map" >
	 	SELECT COUNT(*) AS count,u.agent_id, DATE(a.open_time) AS open_time FROM bs_account a, bs_user u 
	 	WHERE a.open_time BETWEEN #{startTime} AND #{endTime} AND u.id = a.user_id
		GROUP BY u.agent_id
	</select>
	
	<!-- 按时对比：新注册用户 -->
  	<select id="selectDailyNewRegistUser" parameterType="java.util.Map" resultMap="BaseResultMap" >
	 	SELECT * FROM bs_account a, bs_user u 
		WHERE DATE(a.open_time) = #{startTime} AND u.id = a.user_id
  		<if test="agentIds != null and agentIds !='' and (nonAgentId == null or nonAgentId == '')">
			and u.agent_id in 
			<foreach collection="agentIds" item="agentId" index="index"
	            open="(" close=")" separator=",">
	            #{agentId}
	        </foreach>
		</if>
		<if test="(agentIds == null or agentIds =='' ) and nonAgentId != null and nonAgentId != ''">
			and u.agent_id is null
		</if>
		<if test="agentIds != null and agentIds !='' and nonAgentId != null and nonAgentId != ''">
			and (u.agent_id in 
			<foreach collection="agentIds" item="agentId" index="index"
	            open="(" close=")" separator=",">
	            #{agentId}
	        </foreach>
	        or u.agent_id is null)
		</if>
	</select>
	

	<!-- 统计累计注册用户数，渠道分组 -->
	<select id="countRegisterNumber" parameterType="java.util.Map" resultType="java.util.Map" >
	 	SELECT uu.register_time AS open_time, uu.agent_id, SUM(uu1.total_regist_user) count
		FROM (
			SELECT u.agent_id, COUNT(*) AS total_regist_user, DATE(u.register_time) AS register_time
			FROM  bs_user u GROUP BY DATE(u.register_time), u.agent_id 
		) uu, (
			SELECT u.agent_id,COUNT(*) AS total_regist_user,DATE(u.register_time) AS register_time
			FROM  bs_user u GROUP BY DATE(u.register_time), u.agent_id 
		) uu1
		WHERE ((
			uu.agent_id = uu1.agent_id and DATE(uu.register_time) >= DATE(uu1.register_time)
		) OR (
			uu.agent_id IS NULL AND uu1.agent_id IS NULL AND DATE(uu.register_time) >= DATE(uu1.register_time)
		))
		<if test="startTime != null">
			AND DATE(uu.register_time) = DATE(#{startTime})
		</if>
		GROUP BY uu.register_time, uu.agent_id 
		ORDER BY uu.register_time DESC
	</select>






	<!-- 历史数据：1、日注册用户数 -->
	<select id="dailyNewRegisterNum" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT DATE(u.register_time) AS open_time, u.agent_id, COUNT(*) AS count FROM bs_user u 
		<if test="startTime != null and startTime != ''">
			<!-- 只有startTime -->
			<if test="endTime == null and endTime == ''">
				WHERE DATE(u.register_time) >= DATE(#{startTime})
			</if>
			<!-- startTime和endTime同时存在 -->
			<if test="endTime != null and endTime != ''">
				WHERE DATE(u.register_time) >= DATE(#{startTime}) AND DATE(u.register_time) &lt;= DATE(#{endTime})
			</if>
		</if>
		<!-- 只有endTime -->
		<if test="startTime == null and startTime == ''">
			<if test="endTime != null and endTime != ''">
				WHERE DATE(u.register_time) &lt;= DATE(#{endTime})
			</if>
		</if>
		GROUP BY DATE(u.register_time), u.agent_id 
		ORDER BY DATE(u.register_time) ASC
	</select>

	<!-- 历史数据：8、累计注册用户数 -->
	<select id="totalRegistUser" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT uu.register_time AS open_time, uu.agent_id, SUM(uu1.total_regist_user) count
		FROM (
			SELECT u.agent_id, COUNT(*) AS total_regist_user, DATE(u.register_time) AS register_time
			FROM  bs_user u GROUP BY DATE(u.register_time), u.agent_id 
		) uu, (
			SELECT u.agent_id,COUNT(*) AS total_regist_user,DATE(u.register_time) AS register_time
			FROM  bs_user u GROUP BY DATE(u.register_time), u.agent_id 
		) uu1
		WHERE ((
			uu.agent_id = uu1.agent_id and DATE(uu.register_time) >= DATE(uu1.register_time)
		) OR (
			uu.agent_id IS NULL AND uu1.agent_id IS NULL AND DATE(uu.register_time) >= DATE(uu1.register_time)
		))
		<if test="startTime != null and startTime != ''">
			<!-- 只有startTime -->
			<if test="endTime == null and endTime == ''">
				AND DATE(uu.register_time) >= DATE(#{startTime})
			</if>
			<!-- startTime和endTime同时存在 -->
			<if test="endTime != null and endTime != ''">
				AND DATE(uu.register_time) >= DATE(#{startTime}) AND DATE(uu.register_time) &lt;= DATE(#{endTime})
			</if>
		</if>
		<!-- 只有endTime -->
		<if test="startTime == null and startTime == ''">
			<if test="endTime != null and endTime != ''">
				AND DATE(uu.register_time) &lt;= DATE(#{endTime})
			</if>
		</if>
		GROUP BY uu.register_time, uu.agent_id 
		ORDER BY uu.register_time ASC
	</select>




</mapper>