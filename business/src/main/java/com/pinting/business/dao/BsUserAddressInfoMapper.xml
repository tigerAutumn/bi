<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinting.business.dao.BsUserAddressInfoMapper" >
  <resultMap id="BaseResultMap" type="com.pinting.business.model.BsUserAddressInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="consignee" property="consignee" jdbcType="VARCHAR" />
    <result column="consignee_mobile" property="consigneeMobile" jdbcType="VARCHAR" />
    <result column="consignee_address" property="consigneeAddress" jdbcType="VARCHAR" />
    <result column="is_default" property="isDefault" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, consignee, consignee_mobile, consignee_address, is_default, note, create_time, 
    update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinting.business.model.BsUserAddressInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bs_user_address_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bs_user_address_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bs_user_address_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.BsUserAddressInfoExample" >
    delete from bs_user_address_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.BsUserAddressInfo" >
    insert into bs_user_address_info (id, user_id, consignee, 
      consignee_mobile, consignee_address, is_default, 
      note, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{consignee,jdbcType=VARCHAR}, 
      #{consigneeMobile,jdbcType=VARCHAR}, #{consigneeAddress,jdbcType=VARCHAR}, #{isDefault,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.BsUserAddressInfo" >
    insert into bs_user_address_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="consignee != null" >
        consignee,
      </if>
      <if test="consigneeMobile != null" >
        consignee_mobile,
      </if>
      <if test="consigneeAddress != null" >
        consignee_address,
      </if>
      <if test="isDefault != null" >
        is_default,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="consignee != null" >
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="consigneeMobile != null" >
        #{consigneeMobile,jdbcType=VARCHAR},
      </if>
      <if test="consigneeAddress != null" >
        #{consigneeAddress,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        #{isDefault,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.BsUserAddressInfoExample" resultType="java.lang.Integer" >
    select count(*) from bs_user_address_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bs_user_address_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.consignee != null" >
        consignee = #{record.consignee,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneeMobile != null" >
        consignee_mobile = #{record.consigneeMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneeAddress != null" >
        consignee_address = #{record.consigneeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefault != null" >
        is_default = #{record.isDefault,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bs_user_address_info
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      consignee = #{record.consignee,jdbcType=VARCHAR},
      consignee_mobile = #{record.consigneeMobile,jdbcType=VARCHAR},
      consignee_address = #{record.consigneeAddress,jdbcType=VARCHAR},
      is_default = #{record.isDefault,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.BsUserAddressInfo" >
    update bs_user_address_info
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="consignee != null" >
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="consigneeMobile != null" >
        consignee_mobile = #{consigneeMobile,jdbcType=VARCHAR},
      </if>
      <if test="consigneeAddress != null" >
        consignee_address = #{consigneeAddress,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        is_default = #{isDefault,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.BsUserAddressInfo" >
    update bs_user_address_info
    set user_id = #{userId,jdbcType=INTEGER},
      consignee = #{consignee,jdbcType=VARCHAR},
      consignee_mobile = #{consigneeMobile,jdbcType=VARCHAR},
      consignee_address = #{consigneeAddress,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <resultMap id="UserAddressInfoVOMap" type="com.pinting.business.model.vo.UserAddressInfoVO" >
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="consignee_address" property="consigneeAddress" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="consignee" property="consignee" jdbcType="VARCHAR" />
    <result column="consignee_mobile" property="consigneeMobile" jdbcType="VARCHAR" />
    <result column="is_default" property="isDefault" jdbcType="VARCHAR" />
    <result column="address_info_id" property="addressInfoId" jdbcType="INTEGER" />
  </resultMap>

  <select id="selecUserAddressInfoList" parameterType="java.util.Map" resultMap="UserAddressInfoVOMap" >
    SELECT
      b.user_name, b.mobile, b.id AS user_id, a.consignee_address, a.update_time
    FROM bs_user_address_info a, bs_user b
    WHERE a.user_id = b.id AND a.is_default = 'YES'
    <if test="userName != null and userName != '' ">
      and b.user_name like concat(concat('%', #{userName,jdbcType=VARCHAR}),'%')
    </if>
    <if test="mobile != null and mobile != '' ">
      and b.mobile like concat(concat('%', #{mobile,jdbcType=VARCHAR}),'%')
    </if>
    GROUP BY a.user_id
    LIMIT #{start}, #{numPerPage}
  </select>

  <select id="selectUserAddressInfoCount" parameterType="java.util.Map" resultType="java.lang.Integer" >
    SELECT SUM(count) FROM
    (
      SELECT
        COUNT(a.id) AS count
      FROM bs_user_address_info a, bs_user b
      WHERE a.user_id = b.id AND a.is_default = 'YES'
      <if test="userName != null and userName != '' ">
        and b.user_name like concat(concat('%', #{userName,jdbcType=VARCHAR}),'%')
      </if>
      <if test="mobile != null and mobile != '' ">
        and b.mobile like concat(concat('%', #{mobile,jdbcType=VARCHAR}),'%')
      </if>
      GROUP BY a.user_id
    ) tab
  </select>

  <select id="updateIsDefaultForNo" parameterType="java.util.Map" resultType="java.lang.Integer" >
    UPDATE bs_user_address_info SET is_default = 'NO', update_time = NOW() WHERE is_default = 'YES' AND user_id = #{userId}
  </select>

  <insert id="insertUserAddressInfo">
    ${sql}
  </insert>

  <select id="updateIsDefaultListForNo" parameterType="java.util.Map" resultType="java.lang.Integer" >
    UPDATE bs_user_address_info SET is_default = 'NO', update_time = NOW()
    WHERE is_default = 'YES' AND user_id IN
    <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
      #{userId}
    </foreach>
  </select>

  <select id="selectByUserId" parameterType="java.util.Map" resultMap="BaseResultMap" >
    SELECT a.id FROM
    (
      SELECT id, user_id FROM bs_user_address_info WHERE user_id IN
      <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
        #{userId}
      </foreach>
      ORDER BY id DESC, update_time DESC
    ) a
    GROUP BY a.user_id
  </select>

  <select id="updateIsDefaultListForYes" parameterType="java.util.Map" resultType="java.lang.Integer" >
    UPDATE bs_user_address_info SET is_default = 'YES', update_time = NOW()
    WHERE id IN
    <foreach collection="idList" item="id" index="index" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </select>

  <select id="selectDetailReview" parameterType="java.util.Map" resultMap="UserAddressInfoVOMap" >
    SELECT
      b.user_name, b.mobile, b.id AS user_id, a.consignee_address, a.update_time, a.consignee, a.consignee_mobile,
      a.is_default, a.id AS address_info_id
    FROM bs_user_address_info a, bs_user b
    WHERE a.user_id = b.id AND a.user_id = #{userId}
  </select>

  <select id="selectLastRecordByUserId" parameterType="java.util.Map" resultMap="BaseResultMap" >
    SELECT id FROM bs_user_address_info WHERE user_id = #{userId} ORDER BY id DESC, update_time DESC LIMIT 1
  </select>

</mapper>