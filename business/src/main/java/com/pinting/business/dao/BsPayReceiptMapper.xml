<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinting.business.dao.BsPayReceiptMapper" >
  <resultMap id="BaseResultMap" type="com.pinting.business.model.BsPayReceipt" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="bank_card_no" property="bankCardNo" jdbcType="VARCHAR" />
    <result column="id_card" property="idCard" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="receipt_no" property="receiptNo" jdbcType="VARCHAR" />
    <result column="is_bind_card" property="isBindCard" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="channel" property="channel" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, user_name, bank_name, bank_card_no, id_card, mobile, receipt_no, is_bind_card, 
    create_time, update_time, channel
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinting.business.model.BsPayReceiptExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_pay_receipt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bs_pay_receipt
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bs_pay_receipt
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.BsPayReceiptExample" >
    delete from bs_pay_receipt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.BsPayReceipt" >
    insert into bs_pay_receipt (id, user_id, user_name, 
      bank_name, bank_card_no, id_card, 
      mobile, receipt_no, is_bind_card, 
      create_time, update_time, channel
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{bankCardNo,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{receiptNo,jdbcType=VARCHAR}, #{isBindCard,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{channel,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.BsPayReceipt" >
    insert into bs_pay_receipt
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="bankCardNo != null" >
        bank_card_no,
      </if>
      <if test="idCard != null" >
        id_card,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="receiptNo != null" >
        receipt_no,
      </if>
      <if test="isBindCard != null" >
        is_bind_card,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="channel != null" >
        channel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankCardNo != null" >
        #{bankCardNo,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="receiptNo != null" >
        #{receiptNo,jdbcType=VARCHAR},
      </if>
      <if test="isBindCard != null" >
        #{isBindCard,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="channel != null" >
        #{channel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.BsPayReceiptExample" resultType="java.lang.Integer" >
    select count(*) from bs_pay_receipt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bs_pay_receipt
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null" >
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCardNo != null" >
        bank_card_no = #{record.bankCardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null" >
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptNo != null" >
        receipt_no = #{record.receiptNo,jdbcType=VARCHAR},
      </if>
      <if test="record.isBindCard != null" >
        is_bind_card = #{record.isBindCard,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.channel != null" >
        channel = #{record.channel,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bs_pay_receipt
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_card_no = #{record.bankCardNo,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      receipt_no = #{record.receiptNo,jdbcType=VARCHAR},
      is_bind_card = #{record.isBindCard,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      channel = #{record.channel,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.BsPayReceipt" >
    update bs_pay_receipt
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankCardNo != null" >
        bank_card_no = #{bankCardNo,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="receiptNo != null" >
        receipt_no = #{receiptNo,jdbcType=VARCHAR},
      </if>
      <if test="isBindCard != null" >
        is_bind_card = #{isBindCard,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="channel != null" >
        channel = #{channel,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.BsPayReceipt" >
    update bs_pay_receipt
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_card_no = #{bankCardNo,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      receipt_no = #{receiptNo,jdbcType=VARCHAR},
      is_bind_card = #{isBindCard,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      channel = #{channel,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBindStatus">
  	update bs_pay_receipt set is_bind_card = 1 where user_id = #{userId} and bank_card_no = #{bankCardNo} and channel = #{channel}
  </update>
</mapper>