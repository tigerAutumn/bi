<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinting.business.dao.BsCashSchedule30Mapper" >
  <resultMap id="BaseResultMap" type="com.pinting.business.model.BsCashSchedule30" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cash_date" property="cashDate" jdbcType="DATE" />
    <result column="cash_base_amount" property="cashBaseAmount" jdbcType="DOUBLE" />
    <result column="bash_interest_amount" property="bashInterestAmount" jdbcType="DOUBLE" />
    <result column="cash_bonus_amount" property="cashBonusAmount" jdbcType="DOUBLE" />
    <result column="yun_dai_amount" property="yunDaiAmount" jdbcType="DOUBLE" />
    <result column="qi_dai_amount" property="qiDaiAmount" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cash_date, cash_base_amount, bash_interest_amount, cash_bonus_amount,yun_dai_amount,qi_dai_amount, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinting.business.model.BsCashSchedule30Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_cash_schedule30
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bs_cash_schedule30
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bs_cash_schedule30
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.BsCashSchedule30Example" >
    delete from bs_cash_schedule30
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.BsCashSchedule30" >
    insert into bs_cash_schedule30 (id, cash_date, cash_base_amount, 
      bash_interest_amount, cash_bonus_amount,,yun_dai_amount,qi_dai_amount create_time
      )
    values (#{id,jdbcType=INTEGER}, #{cashDate,jdbcType=DATE}, #{cashBaseAmount,jdbcType=DOUBLE}, 
      #{bashInterestAmount,jdbcType=DOUBLE}, #{cashBonusAmount,jdbcType=DOUBLE}, #{yunDaiAmount,jdbcType=DOUBLE}
      , #{qiDaiAmount,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.BsCashSchedule30" >
    insert into bs_cash_schedule30
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cashDate != null" >
        cash_date,
      </if>
      <if test="cashBaseAmount != null" >
        cash_base_amount,
      </if>
      <if test="bashInterestAmount != null" >
        bash_interest_amount,
      </if>
      <if test="cashBonusAmount != null" >
        cash_bonus_amount,
      </if>
      <if test="yunDaiAmount != null" >
        yun_dai_amount,
      </if>
      <if test="qiDaiAmount != null" >
        qi_dai_amount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cashDate != null" >
        #{cashDate,jdbcType=DATE},
      </if>
      <if test="cashBaseAmount != null" >
        #{cashBaseAmount,jdbcType=DOUBLE},
      </if>
      <if test="bashInterestAmount != null" >
        #{bashInterestAmount,jdbcType=DOUBLE},
      </if>
      <if test="cashBonusAmount != null" >
        #{cashBonusAmount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.BsCashSchedule30Example" resultType="java.lang.Integer" >
    select count(*) from bs_cash_schedule30
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bs_cash_schedule30
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cashDate != null" >
        cash_date = #{record.cashDate,jdbcType=DATE},
      </if>
      <if test="record.cashBaseAmount != null" >
        cash_base_amount = #{record.cashBaseAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.bashInterestAmount != null" >
        bash_interest_amount = #{record.bashInterestAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.cashBonusAmount != null" >
        cash_bonus_amount = #{record.cashBonusAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.yunDaiAmount != null" >
        yun_dai_amount = #{record.yunDaiAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.qiDaiAmount != null" >
        qi_dai_amount = #{record.qiDaiAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bs_cash_schedule30
    set id = #{record.id,jdbcType=INTEGER},
      cash_date = #{record.cashDate,jdbcType=DATE},
      cash_base_amount = #{record.cashBaseAmount,jdbcType=DOUBLE},
      bash_interest_amount = #{record.bashInterestAmount,jdbcType=DOUBLE},
      cash_bonus_amount = #{record.cashBonusAmount,jdbcType=DOUBLE},
      yun_dai_amount = #{record.yunDaiAmount,jdbcType=DOUBLE},
      qi_dai_amount = #{record.qiDaiAmount,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.BsCashSchedule30" >
    update bs_cash_schedule30
    <set >
      <if test="cashDate != null" >
        cash_date = #{cashDate,jdbcType=DATE},
      </if>
      <if test="cashBaseAmount != null" >
        cash_base_amount = #{cashBaseAmount,jdbcType=DOUBLE},
      </if>
      <if test="bashInterestAmount != null" >
        bash_interest_amount = #{bashInterestAmount,jdbcType=DOUBLE},
      </if>
      <if test="cashBonusAmount != null" >
        cash_bonus_amount = #{cashBonusAmount,jdbcType=DOUBLE},
      </if>
      <if test="yunDaiAmount != null" >
        yun_dai_amount = #{yunDaiAmount,jdbcType=DOUBLE},
      </if>
      <if test="qiDaiAmount != null" >
        qi_dai_amount = #{qiDaiAmount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.BsCashSchedule30" >
    update bs_cash_schedule30
    set cash_date = #{cashDate,jdbcType=DATE},
      cash_base_amount = #{cashBaseAmount,jdbcType=DOUBLE},
      bash_interest_amount = #{bashInterestAmount,jdbcType=DOUBLE},
      cash_bonus_amount = #{cashBonusAmount,jdbcType=DOUBLE},
      yun_dai_amount = #{yunDaiAmount,jdbcType=DOUBLE},
      qi_dai_amount = #{qiDaiAmount,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <select id="selectCashSchedule30ListPageInfo" resultMap="BaseResultMap" parameterType="com.pinting.business.model.vo.BsCashSchedule30VO">
 	select 
		<include refid="Base_Column_List"/>
		from bs_cash_schedule30
		where
		DATE(cash_date) >= DATE(NOW())
			<if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
				and cash_date between #{beginTime} and #{overTime}
			</if>
  		<include refid="sql-global.pagination"/>
  </select>
  
  <select id="countCashSchedule30List" resultType="java.lang.Integer" parameterType="com.pinting.business.model.vo.BsCashSchedule30VO">
 	select 
		count(id)
		from bs_cash_schedule30
		where
		DATE(cash_date) >= DATE(NOW())
			<if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
				and cash_date between #{beginTime} and #{overTime}
			</if>
  </select>
  
  <select id="selectBsCashScheduleList" resultMap="BaseResultMap" parameterType="com.pinting.business.model.vo.BsCashSchedule30VO">
  <![CDATA[
		SELECT 
		   cash_base_amount, bash_interest_amount, cash_date
		FROM
		(select 
			  sum(abc.balance) cash_base_amount, abc.last_finish_interest_date cash_date
			from
				(
				  select 
				       s.balance, s.last_finish_interest_date
				  from bs_sub_account s 
				  where s.status not in (1,6) and s.product_type ='REG'  and s.last_finish_interest_date >= #{beginTime} and s.last_finish_interest_date < #{overTime}
				) as abc
			group by abc.last_finish_interest_date
		) aaa,
		(select dd.last_finish_interest_date,sum(dd.totalMoney) as bash_interest_amount from 
				(
					select cc.* ,(cc.sevenDayMoney + cc.oneMoney + cc.threeMoney + cc.sixMoney + cc.twelveMoney) as totalMoney from
					(
						select bb.* ,
							case when bb.sevenDay is null then 0 else bb.sevenDay end as sevenDayMoney ,
							case when bb.one is null then 0 else bb.one end as oneMoney ,
							case when bb.three is null then 0 else bb.three end as threeMoney , 
							case when bb.six is null then 0 else bb.six end as sixMoney ,
							case when bb.twelve is null then 0 else bb.twelve end as twelveMoney
						from
						(
						select aa.*,
								 case when aa.term is null then 0 else aa.term end as termNull,
								 case when aa.term = -7 then ROUND(aa.transAmountCount * aa.product_rate*7/365/100,2) end as sevenDay ,
								 case when aa.term = 1 then ROUND(aa.transAmountCount * aa.term * aa.product_rate*30/365/100,2) end as one ,
								 case when aa.term = 3 then ROUND(aa.transAmountCount * aa.term * aa.product_rate*30/365/100,2) end as three ,
								 case when aa.term = 6 then ROUND(aa.transAmountCount * aa.term * aa.product_rate*30/365/100,2) end as six ,
								 case when aa.term = 12 then ROUND(aa.transAmountCount * aa.product_rate/100,2) end as twelve
							from 
							(
								SELECT 
										sum(t.balance) as transAmountCount, t.product_rate, t.last_finish_interest_date, t.term
										from 
										(
										SELECT  
										e.balance, e.product_rate, e.last_finish_interest_date, p.term
										FROM
										(select 
													 s.*
												 from bs_sub_account s 
												 where s.status not in (1,6) and s.product_type ='REG' 
															 and s.last_finish_interest_date >= #{beginTime} and s.last_finish_interest_date < #{overTime}) e 
										LEFT JOIN bs_account a on e.account_id = a.id
										LEFT JOIN bs_product p  on p.id = e.product_id
										) as t 
									GROUP BY t.product_rate,t.term,t.last_finish_interest_date
							) aa 
						) bb
					)cc
				)dd
			group by dd.last_finish_interest_date
		) bbb
		where aaa.cash_date = bbb.last_finish_interest_date
		
  	]]>
  </select>
  
  <!-- 未来30天应付本金合计  -->
  <select id="totalCashBaseAmount" resultType="java.lang.Double">
      SELECT sum(cash_base_amount) FROM bs_cash_schedule30
      where DATE(cash_date) >= DATE(NOW())
		<if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
			and cash_date between #{beginTime} and #{overTime}
		</if>
   </select>
	
   <!-- 未来30天应付利息合计 -->
   <select id="totalBashInterestAmount" resultType="java.lang.Double">
      SELECT sum(bash_interest_amount) FROM bs_cash_schedule30
      WHERE DATE(cash_date) >= DATE(NOW())
		<if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
			and cash_date between #{beginTime} and #{overTime}
		</if>
   </select>
  
  <insert id="insertCashScheduleList"  parameterType="java.util.List">
  	 insert into bs_cash_schedule30 
  	 	(cash_date, cash_base_amount, 
      bash_interest_amount, cash_bonus_amount,yun_dai_amount,qi_dai_amount, create_time )  values
  	 	
     <foreach collection="list" item="item" index="index"  separator="," >
  			(#{item.cashDate},#{item.cashBaseAmount},#{item.bashInterestAmount},#{item.cashBonusAmount},
  			#{item.yunDaiAmount},#{item.qiDaiAmount},date_format(now(),'%Y-%m-%d'))
     </foreach>
  
  </insert>
  
</mapper>