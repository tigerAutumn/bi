<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinting.business.dao.LnSubAccountMapper" >
  <resultMap id="BaseResultMap" type="com.pinting.business.model.LnSubAccount" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ln_user_id" property="lnUserId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="account_type" property="accountType" jdbcType="VARCHAR" />
    <result column="product_code" property="productCode" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_rate" property="productRate" jdbcType="DOUBLE" />
    <result column="open_balance" property="openBalance" jdbcType="DOUBLE" />
    <result column="balance" property="balance" jdbcType="DOUBLE" />
    <result column="available_balance" property="availableBalance" jdbcType="DOUBLE" />
    <result column="can_withdraw" property="canWithdraw" jdbcType="DOUBLE" />
    <result column="freeze_balance" property="freezeBalance" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="check_status" property="checkStatus" jdbcType="VARCHAR" />
    <result column="interest_begin_date" property="interestBeginDate" jdbcType="DATE" />
    <result column="last_trans_date" property="lastTransDate" jdbcType="DATE" />
    <result column="last_cal__interest_date" property="lastCalInterestDate" jdbcType="DATE" />
    <result column="last_finish_interest_date" property="lastFinishInterestDate" jdbcType="DATE" />
    <result column="accumulation_inerest" property="accumulationInerest" jdbcType="DOUBLE" />
    <result column="open_time" property="openTime" jdbcType="TIMESTAMP" />
    <result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, ln_user_id, account_id, code, account_type, product_code, product_name, product_rate, 
    open_balance, balance, available_balance, can_withdraw, freeze_balance, status, check_status, 
    interest_begin_date, last_trans_date, last_cal__interest_date, last_finish_interest_date, 
    accumulation_inerest, open_time, close_time, note, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinting.business.model.LnSubAccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ln_sub_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ln_sub_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ln_sub_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.LnSubAccountExample" >
    delete from ln_sub_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.LnSubAccount" >
    insert into ln_sub_account (id, ln_user_id, account_id, 
      code, account_type, product_code, 
      product_name, product_rate, open_balance, 
      balance, available_balance, can_withdraw, 
      freeze_balance, status, check_status, 
      interest_begin_date, last_trans_date, last_cal__interest_date, 
      last_finish_interest_date, accumulation_inerest, 
      open_time, close_time, note, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{lnUserId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, 
      #{code,jdbcType=VARCHAR}, #{accountType,jdbcType=VARCHAR}, #{productCode,jdbcType=VARCHAR}, 
      #{productName,jdbcType=VARCHAR}, #{productRate,jdbcType=DOUBLE}, #{openBalance,jdbcType=DOUBLE}, 
      #{balance,jdbcType=DOUBLE}, #{availableBalance,jdbcType=DOUBLE}, #{canWithdraw,jdbcType=DOUBLE}, 
      #{freezeBalance,jdbcType=DOUBLE}, #{status,jdbcType=VARCHAR}, #{checkStatus,jdbcType=VARCHAR}, 
      #{interestBeginDate,jdbcType=DATE}, #{lastTransDate,jdbcType=DATE}, #{lastCalInterestDate,jdbcType=DATE}, 
      #{lastFinishInterestDate,jdbcType=DATE}, #{accumulationInerest,jdbcType=DOUBLE}, 
      #{openTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP}, #{note,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.LnSubAccount" useGeneratedKeys="true" keyProperty="id">
    insert into ln_sub_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="lnUserId != null" >
        ln_user_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="productCode != null" >
        product_code,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="productRate != null" >
        product_rate,
      </if>
      <if test="openBalance != null" >
        open_balance,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="availableBalance != null" >
        available_balance,
      </if>
      <if test="canWithdraw != null" >
        can_withdraw,
      </if>
      <if test="freezeBalance != null" >
        freeze_balance,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="checkStatus != null" >
        check_status,
      </if>
      <if test="interestBeginDate != null" >
        interest_begin_date,
      </if>
      <if test="lastTransDate != null" >
        last_trans_date,
      </if>
      <if test="lastCalInterestDate != null" >
        last_cal__interest_date,
      </if>
      <if test="lastFinishInterestDate != null" >
        last_finish_interest_date,
      </if>
      <if test="accumulationInerest != null" >
        accumulation_inerest,
      </if>
      <if test="openTime != null" >
        open_time,
      </if>
      <if test="closeTime != null" >
        close_time,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="lnUserId != null" >
        #{lnUserId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null" >
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productRate != null" >
        #{productRate,jdbcType=DOUBLE},
      </if>
      <if test="openBalance != null" >
        #{openBalance,jdbcType=DOUBLE},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DOUBLE},
      </if>
      <if test="availableBalance != null" >
        #{availableBalance,jdbcType=DOUBLE},
      </if>
      <if test="canWithdraw != null" >
        #{canWithdraw,jdbcType=DOUBLE},
      </if>
      <if test="freezeBalance != null" >
        #{freezeBalance,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="checkStatus != null" >
        #{checkStatus,jdbcType=VARCHAR},
      </if>
      <if test="interestBeginDate != null" >
        #{interestBeginDate,jdbcType=DATE},
      </if>
      <if test="lastTransDate != null" >
        #{lastTransDate,jdbcType=DATE},
      </if>
      <if test="lastCalInterestDate != null" >
        #{lastCalInterestDate,jdbcType=DATE},
      </if>
      <if test="lastFinishInterestDate != null" >
        #{lastFinishInterestDate,jdbcType=DATE},
      </if>
      <if test="accumulationInerest != null" >
        #{accumulationInerest,jdbcType=DOUBLE},
      </if>
      <if test="openTime != null" >
        #{openTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null" >
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.LnSubAccountExample" resultType="java.lang.Integer" >
    select count(*) from ln_sub_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ln_sub_account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.lnUserId != null" >
        ln_user_id = #{record.lnUserId,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null" >
        account_type = #{record.accountType,jdbcType=VARCHAR},
      </if>
      <if test="record.productCode != null" >
        product_code = #{record.productCode,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null" >
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productRate != null" >
        product_rate = #{record.productRate,jdbcType=DOUBLE},
      </if>
      <if test="record.openBalance != null" >
        open_balance = #{record.openBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DOUBLE},
      </if>
      <if test="record.availableBalance != null" >
        available_balance = #{record.availableBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.canWithdraw != null" >
        can_withdraw = #{record.canWithdraw,jdbcType=DOUBLE},
      </if>
      <if test="record.freezeBalance != null" >
        freeze_balance = #{record.freezeBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.checkStatus != null" >
        check_status = #{record.checkStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.interestBeginDate != null" >
        interest_begin_date = #{record.interestBeginDate,jdbcType=DATE},
      </if>
      <if test="record.lastTransDate != null" >
        last_trans_date = #{record.lastTransDate,jdbcType=DATE},
      </if>
      <if test="record.lastCalInterestDate != null" >
        last_cal__interest_date = #{record.lastCalInterestDate,jdbcType=DATE},
      </if>
      <if test="record.lastFinishInterestDate != null" >
        last_finish_interest_date = #{record.lastFinishInterestDate,jdbcType=DATE},
      </if>
      <if test="record.accumulationInerest != null" >
        accumulation_inerest = #{record.accumulationInerest,jdbcType=DOUBLE},
      </if>
      <if test="record.openTime != null" >
        open_time = #{record.openTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.closeTime != null" >
        close_time = #{record.closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ln_sub_account
    set id = #{record.id,jdbcType=INTEGER},
      ln_user_id = #{record.lnUserId,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      account_type = #{record.accountType,jdbcType=VARCHAR},
      product_code = #{record.productCode,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_rate = #{record.productRate,jdbcType=DOUBLE},
      open_balance = #{record.openBalance,jdbcType=DOUBLE},
      balance = #{record.balance,jdbcType=DOUBLE},
      available_balance = #{record.availableBalance,jdbcType=DOUBLE},
      can_withdraw = #{record.canWithdraw,jdbcType=DOUBLE},
      freeze_balance = #{record.freezeBalance,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=VARCHAR},
      check_status = #{record.checkStatus,jdbcType=VARCHAR},
      interest_begin_date = #{record.interestBeginDate,jdbcType=DATE},
      last_trans_date = #{record.lastTransDate,jdbcType=DATE},
      last_cal__interest_date = #{record.lastCalInterestDate,jdbcType=DATE},
      last_finish_interest_date = #{record.lastFinishInterestDate,jdbcType=DATE},
      accumulation_inerest = #{record.accumulationInerest,jdbcType=DOUBLE},
      open_time = #{record.openTime,jdbcType=TIMESTAMP},
      close_time = #{record.closeTime,jdbcType=TIMESTAMP},
      note = #{record.note,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.LnSubAccount" >
    update ln_sub_account
    <set >
      <if test="lnUserId != null" >
        ln_user_id = #{lnUserId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null" >
        product_code = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productRate != null" >
        product_rate = #{productRate,jdbcType=DOUBLE},
      </if>
      <if test="openBalance != null" >
        open_balance = #{openBalance,jdbcType=DOUBLE},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="availableBalance != null" >
        available_balance = #{availableBalance,jdbcType=DOUBLE},
      </if>
      <if test="canWithdraw != null" >
        can_withdraw = #{canWithdraw,jdbcType=DOUBLE},
      </if>
      <if test="freezeBalance != null" >
        freeze_balance = #{freezeBalance,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="checkStatus != null" >
        check_status = #{checkStatus,jdbcType=VARCHAR},
      </if>
      <if test="interestBeginDate != null" >
        interest_begin_date = #{interestBeginDate,jdbcType=DATE},
      </if>
      <if test="lastTransDate != null" >
        last_trans_date = #{lastTransDate,jdbcType=DATE},
      </if>
      <if test="lastCalInterestDate != null" >
        last_cal__interest_date = #{lastCalInterestDate,jdbcType=DATE},
      </if>
      <if test="lastFinishInterestDate != null" >
        last_finish_interest_date = #{lastFinishInterestDate,jdbcType=DATE},
      </if>
      <if test="accumulationInerest != null" >
        accumulation_inerest = #{accumulationInerest,jdbcType=DOUBLE},
      </if>
      <if test="openTime != null" >
        open_time = #{openTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null" >
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.LnSubAccount" >
    update ln_sub_account
    set ln_user_id = #{lnUserId,jdbcType=INTEGER},
      account_id = #{accountId,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=VARCHAR},
      product_code = #{productCode,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      product_rate = #{productRate,jdbcType=DOUBLE},
      open_balance = #{openBalance,jdbcType=DOUBLE},
      balance = #{balance,jdbcType=DOUBLE},
      available_balance = #{availableBalance,jdbcType=DOUBLE},
      can_withdraw = #{canWithdraw,jdbcType=DOUBLE},
      freeze_balance = #{freezeBalance,jdbcType=DOUBLE},
      status = #{status,jdbcType=VARCHAR},
      check_status = #{checkStatus,jdbcType=VARCHAR},
      interest_begin_date = #{interestBeginDate,jdbcType=DATE},
      last_trans_date = #{lastTransDate,jdbcType=DATE},
      last_cal__interest_date = #{lastCalInterestDate,jdbcType=DATE},
      last_finish_interest_date = #{lastFinishInterestDate,jdbcType=DATE},
      accumulation_inerest = #{accumulationInerest,jdbcType=DOUBLE},
      open_time = #{openTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByPrimaryKey4Lock" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  		SELECT
			s.*
		FROM
			ln_sub_account s
		WHERE
		 	s.id = #{id}
		FOR UPDATE
  	</select>
  	
  <select id="selectSingleSubActByUserAndType" resultMap="BaseResultMap">
  		SELECT
			a.*
		FROM
			ln_sub_account a
		WHERE
			a.ln_user_id = #{userId}
		AND a.account_type = #{accountType}
  </select>

  <!-- 2018财务管理-财务总账查询 start -->
  <!-- 1、财务总账查询（恒丰）–新增借款人余额 -->
  <select id="selectSumLoanBalance" resultType="java.lang.Double" >
    SELECT SUM(IFNULL(balance, 0)) FROM ln_sub_account WHERE account_type = 'DEP_JSH' AND status != 'CANCEL'
  </select>
  <!-- 2018财务管理-财务总账查询 end -->

  <!-- 系统余额快照记录-借款人余额快照 start -->
  <resultMap id="LoanBalanceVOMap" type="com.pinting.business.model.vo.LoanBalanceVO" >
    <result column="sum_balance" property="sumBalance" jdbcType="DOUBLE" />
    <result column="sum_available_balance" property="sumAvailableBalance" jdbcType="DOUBLE" />
    <result column="sum_freeze_balance" property="sumFreezeBalance" jdbcType="DOUBLE" />
  </resultMap>
  <select id="selectSumLoanBalanceByDay" resultMap="LoanBalanceVOMap" parameterType="java.util.Map" >
    SELECT
      IFNULL(SUM(IFNULL(balance, 0)) , 0) AS sum_balance,
      IFNULL(SUM(IFNULL(available_balance, 0)) , 0) AS sum_available_balance,
      IFNULL(SUM(IFNULL(freeze_balance, 0)) , 0) AS sum_freeze_balance
    FROM ln_sub_account WHERE account_type = 'DEP_JSH' AND status != 'CANCEL'
    AND DATE(create_time) &lt; #{today}
  </select>
  <!-- 系统余额快照记录-借款人余额快照 end -->

</mapper>