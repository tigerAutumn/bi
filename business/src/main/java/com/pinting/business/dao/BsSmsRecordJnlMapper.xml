<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinting.business.dao.BsSmsRecordJnlMapper">
  <resultMap id="BaseResultMap" type="com.pinting.business.model.BsSmsRecordJnl">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="partner_code" jdbcType="VARCHAR" property="partnerCode" />
    <result column="serial_no" jdbcType="VARCHAR" property="serialNo" />
    <result column="arrive_time" jdbcType="TIMESTAMP" property="arriveTime" />
    <result column="platforms_id" jdbcType="INTEGER" property="platformsId" />
    <result column="status_code" jdbcType="INTEGER" property="statusCode" />
    <result column="status_msg" jdbcType="VARCHAR" property="statusMsg" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, mobile, content, send_time, type, partner_code, serial_no, arrive_time, platforms_id, 
    status_code, status_msg, update_time
  </sql>
  <select id="selectByExample" parameterType="com.pinting.business.model.BsSmsRecordJnlExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_sms_record_jnl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bs_sms_record_jnl
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bs_sms_record_jnl
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.BsSmsRecordJnlExample">
    delete from bs_sms_record_jnl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.BsSmsRecordJnl">
    insert into bs_sms_record_jnl (id, mobile, content, 
      send_time, type, partner_code, 
      serial_no, arrive_time, platforms_id, 
      status_code, status_msg, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{sendTime,jdbcType=TIMESTAMP}, #{type,jdbcType=VARCHAR}, #{partnerCode,jdbcType=VARCHAR}, 
      #{serialNo,jdbcType=VARCHAR}, #{arriveTime,jdbcType=TIMESTAMP}, #{platformsId,jdbcType=INTEGER}, 
      #{statusCode,jdbcType=INTEGER}, #{statusMsg,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.BsSmsRecordJnl">
    insert into bs_sms_record_jnl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="partnerCode != null">
        partner_code,
      </if>
      <if test="serialNo != null">
        serial_no,
      </if>
      <if test="arriveTime != null">
        arrive_time,
      </if>
      <if test="platformsId != null">
        platforms_id,
      </if>
      <if test="statusCode != null">
        status_code,
      </if>
      <if test="statusMsg != null">
        status_msg,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="partnerCode != null">
        #{partnerCode,jdbcType=VARCHAR},
      </if>
      <if test="serialNo != null">
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="arriveTime != null">
        #{arriveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="platformsId != null">
        #{platformsId,jdbcType=INTEGER},
      </if>
      <if test="statusCode != null">
        #{statusCode,jdbcType=INTEGER},
      </if>
      <if test="statusMsg != null">
        #{statusMsg,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.BsSmsRecordJnlExample" resultType="java.lang.Integer">
    select count(*) from bs_sms_record_jnl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bs_sms_record_jnl
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null">
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerCode != null">
        partner_code = #{record.partnerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.serialNo != null">
        serial_no = #{record.serialNo,jdbcType=VARCHAR},
      </if>
      <if test="record.arriveTime != null">
        arrive_time = #{record.arriveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.platformsId != null">
        platforms_id = #{record.platformsId,jdbcType=INTEGER},
      </if>
      <if test="record.statusCode != null">
        status_code = #{record.statusCode,jdbcType=INTEGER},
      </if>
      <if test="record.statusMsg != null">
        status_msg = #{record.statusMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bs_sms_record_jnl
    set id = #{record.id,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=VARCHAR},
      partner_code = #{record.partnerCode,jdbcType=VARCHAR},
      serial_no = #{record.serialNo,jdbcType=VARCHAR},
      arrive_time = #{record.arriveTime,jdbcType=TIMESTAMP},
      platforms_id = #{record.platformsId,jdbcType=INTEGER},
      status_code = #{record.statusCode,jdbcType=INTEGER},
      status_msg = #{record.statusMsg,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.BsSmsRecordJnl">
    update bs_sms_record_jnl
    <set>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="partnerCode != null">
        partner_code = #{partnerCode,jdbcType=VARCHAR},
      </if>
      <if test="serialNo != null">
        serial_no = #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="arriveTime != null">
        arrive_time = #{arriveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="platformsId != null">
        platforms_id = #{platformsId,jdbcType=INTEGER},
      </if>
      <if test="statusCode != null">
        status_code = #{statusCode,jdbcType=INTEGER},
      </if>
      <if test="statusMsg != null">
        status_msg = #{statusMsg,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.BsSmsRecordJnl">
    update bs_sms_record_jnl
    set mobile = #{mobile,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR},
      partner_code = #{partnerCode,jdbcType=VARCHAR},
      serial_no = #{serialNo,jdbcType=VARCHAR},
      arrive_time = #{arriveTime,jdbcType=TIMESTAMP},
      platforms_id = #{platformsId,jdbcType=INTEGER},
      status_code = #{statusCode,jdbcType=INTEGER},
      status_msg = #{statusMsg,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
<resultMap id="BaseResultMapVO" type="com.pinting.business.model.vo.BsSmsRecordJnlReVo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="serial_no" jdbcType="VARCHAR" property="serialNo" />
    <result column="arrive_time" jdbcType="TIMESTAMP" property="arriveTime" />
    <result column="platforms_id" jdbcType="INTEGER" property="platformsId" />
    <result column="platforms_name" jdbcType="VARCHAR" property="platformsName" />
    <result column="status_code" jdbcType="INTEGER" property="statusCode" />
    <result column="status_msg" jdbcType="VARCHAR" property="statusMsg" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <select id="selectRecordJnlList" parameterType="com.pinting.business.model.vo.BsSmsRecordJnlReVo" resultMap="BaseResultMapVO">
    select 
    a.*,b.platforms_name
    from bs_sms_record_jnl a left join bs_sms_platforms_config b on a.platforms_id = b.id 
    <where>
    	1 = 1 
    	<if test="mobile != null and mobile != ''">
    		and mobile like CONCAT(CONCAT('%', #{mobile}),'%')  
    	</if>
    	<if test="content != null and content != ''">
    		and content like CONCAT(CONCAT('%', #{content}),'%')  
    	</if>
    	<if test="statusCode != null and statusCode != -1">
    		and status_code = #{statusCode}
    	</if>
    	<if test="statusCode == -1">
    		and status_code is null
    	</if>
    	<if test="type != null and type != ''">
    		and type = #{type}
    	</if>
    	<if test="beginTime != null and beginTime != '' and (overTime == null or overTime== '') ">
			and send_time &gt;= #{beginTime}
		</if>
    	<if test="(beginTime == null or beginTime == '') and overTime != null and overTime!= '' ">
			and send_time &lt;= #{overTime}
		</if>
		<if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
			and send_time between #{beginTime} and #{overTime}
		</if>
		<if test="platformsCode != null and platformsCode != ''">
	    	and b.platforms_code = #{platformsCode}
	    </if>
	</where>
	order by send_time desc 
    <include refid="sql-global.pagination" />
  </select>
  
    <select id="countRecordJnlList" parameterType="com.pinting.business.model.BsSmsRecordJnl" resultType="java.lang.Integer">
    select count(*) from bs_sms_record_jnl a left join bs_sms_platforms_config b on a.platforms_id = b.id 
    <where>
    	1 = 1 
    	<if test="mobile != null and mobile != ''">
    		and mobile like CONCAT(CONCAT('%', #{mobile}),'%')  
    	</if>
    	<if test="content != null and content != ''">
    		and content like CONCAT(CONCAT('%', #{content}),'%')  
    	</if>
    	<if test="type != null and type != ''">
    		and type = #{type}
    	</if>
    	<if test="statusCode != null and statusCode != -1">
    		and status_code = #{statusCode}
    	</if>
    	<if test="statusCode == -1">
    		and status_code is null
    	</if>
    	<if test="beginTime != null and beginTime != '' and (overTime == null or overTime== '') ">
			and send_time  &gt;= #{beginTime}
		</if>
    	<if test="(beginTime == null or beginTime == '') and overTime != null and overTime!= '' ">
			and send_time &lt;= #{overTime}
		</if>
		<if test="beginTime != null and overTime != null and beginTime != '' and overTime!= '' ">
			and send_time between #{beginTime} and #{overTime}
		</if>
		<if test="platformsCode != null and platformsCode != ''">
	    	and b.platforms_code = #{platformsCode}
	    </if>
	</where>
  </select>

  <update id="updateJnl" parameterType="com.pinting.business.model.BsSmsRecordJnl">
    update bs_sms_record_jnl
    set 
      status_code = #{statusCode,jdbcType=INTEGER},
      status_msg = #{statusMsg,jdbcType=VARCHAR},
      <if test="arriveTime != null">
      arrive_time = #{arriveTime,jdbcType=TIMESTAMP}
      </if>
      
    where mobile = #{mobile,jdbcType=VARCHAR} and serial_no = #{serialNo,jdbcType=VARCHAR}
  </update>
  
  <select id="getByMobileSerNo" parameterType="map" resultMap="BaseResultMap">
  select * from bs_sms_record_jnl
  where mobile = #{mobile,jdbcType=VARCHAR}
  and serial_no = #{serNo,jdbcType=VARCHAR}
  </select>
  
   <select id="getByMobileSerNoPlatformsId" parameterType="map" resultMap="BaseResultMap">
  select * from bs_sms_record_jnl
  where mobile = #{mobile,jdbcType=VARCHAR}
  and serial_no = #{serNo,jdbcType=VARCHAR}
  and platforms_id = #{platformsId}
  </select>
  
  
  <select id="succRateByMinute" parameterType="map" resultType="java.lang.Double">
  select CASE WHEN msg.msgNum &gt;= #{minLimit} THEN succ.succNum/msg.msgNum ELSE -1 END from
	(select count(*) msgNum from bs_sms_record_jnl 
		where send_time BETWEEN DATE_ADD(NOW(),INTERVAL -#{minutes} MINUTE) AND NOW()
		AND status_msg IS NOT NULL AND platforms_id = #{platformsId} 
	)msg,
	(select count(*) succNum from bs_sms_record_jnl 
		where send_time BETWEEN DATE_ADD(NOW(),INTERVAL -#{minutes} MINUTE) AND NOW() 
		AND status_msg='DELIVRD' AND platforms_id = #{platformsId}
	) succ
  </select>
  
   <select id="succRateByNum" parameterType="map" resultType="java.lang.Double">
  select CASE WHEN sum.sumNum &gt;= #{limitNum} THEN count(t.id)/#{limitNum} ELSE -1 END from
	(select * from bs_sms_record_jnl where send_time &gt;= DATE(NOW()) 
		and status_msg IS NOT NULL AND platforms_id = #{platformsId} 
		ORDER BY arrive_time DESC LIMIT #{limitNum} 
		 )t,
	(select count(*) sumNum from bs_sms_record_jnl where send_time &gt;= DATE(NOW()) 
		and status_msg IS NOT NULL AND platforms_id = #{platformsId} 
		ORDER BY arrive_time DESC LIMIT #{limitNum} 
		)sum 
	where t.status_msg ='DELIVRD'
  </select>
</mapper>