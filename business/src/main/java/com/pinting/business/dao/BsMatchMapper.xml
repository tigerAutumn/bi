<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinting.business.dao.BsMatchMapper">
  <resultMap id="BaseResultMap" type="com.pinting.business.model.BsMatch">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="sub_account_id" jdbcType="INTEGER" property="subAccountId" />
    <result column="loan_relative_id" jdbcType="INTEGER" property="loanRelativeId" />
    <result column="property_symbol" jdbcType="VARCHAR" property="propertySymbol" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="left_principal" jdbcType="DOUBLE" property="leftPrincipal" />
    <result column="repay_amount" jdbcType="DOUBLE" property="repayAmount" />
    <result column="last_repay_date" jdbcType="TIMESTAMP" property="lastRepayDate" />
    <result column="repay_status" jdbcType="VARCHAR" property="repayStatus" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="match_date" jdbcType="DATE" property="matchDate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="DailyAmount4LoanVOMap" type="com.pinting.business.model.vo.DailyAmount4LoanVO" >
    <result column="term" property="term" jdbcType="INTEGER" />
    <result column="sum_amount" property="sumAmount" jdbcType="DOUBLE" />  
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, sub_account_id, loan_relative_id, property_symbol, amount, left_principal, 
    repay_amount, last_repay_date, repay_status, note, match_date, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.pinting.business.model.BsMatchExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bs_match
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bs_match
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinting.business.model.BsMatchExample">
    delete from bs_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinting.business.model.BsMatch">
    insert into bs_match (id, user_id, sub_account_id, 
      loan_relative_id, property_symbol, amount, 
      left_principal, repay_amount, last_repay_date, 
      repay_status, note, match_date, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{subAccountId,jdbcType=INTEGER}, 
      #{loanRelativeId,jdbcType=INTEGER}, #{propertySymbol,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE}, 
      #{leftPrincipal,jdbcType=DOUBLE}, #{repayAmount,jdbcType=DOUBLE}, #{lastRepayDate,jdbcType=TIMESTAMP}, 
      #{repayStatus,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{matchDate,jdbcType=DATE}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pinting.business.model.BsMatch">
    insert into bs_match
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="subAccountId != null">
        sub_account_id,
      </if>
      <if test="loanRelativeId != null">
        loan_relative_id,
      </if>
      <if test="propertySymbol != null">
        property_symbol,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="leftPrincipal != null">
        left_principal,
      </if>
      <if test="repayAmount != null">
        repay_amount,
      </if>
      <if test="lastRepayDate != null">
        last_repay_date,
      </if>
      <if test="repayStatus != null">
        repay_status,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="matchDate != null">
        match_date,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="subAccountId != null">
        #{subAccountId,jdbcType=INTEGER},
      </if>
      <if test="loanRelativeId != null">
        #{loanRelativeId,jdbcType=INTEGER},
      </if>
      <if test="propertySymbol != null">
        #{propertySymbol,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="leftPrincipal != null">
        #{leftPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="repayAmount != null">
        #{repayAmount,jdbcType=DOUBLE},
      </if>
      <if test="lastRepayDate != null">
        #{lastRepayDate,jdbcType=TIMESTAMP},
      </if>
      <if test="repayStatus != null">
        #{repayStatus,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="matchDate != null">
        #{matchDate,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinting.business.model.BsMatchExample" resultType="java.lang.Integer">
    select count(*) from bs_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bs_match
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.subAccountId != null">
        sub_account_id = #{record.subAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.loanRelativeId != null">
        loan_relative_id = #{record.loanRelativeId,jdbcType=INTEGER},
      </if>
      <if test="record.propertySymbol != null">
        property_symbol = #{record.propertySymbol,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.leftPrincipal != null">
        left_principal = #{record.leftPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="record.repayAmount != null">
        repay_amount = #{record.repayAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.lastRepayDate != null">
        last_repay_date = #{record.lastRepayDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.repayStatus != null">
        repay_status = #{record.repayStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.matchDate != null">
        match_date = #{record.matchDate,jdbcType=DATE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bs_match
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      sub_account_id = #{record.subAccountId,jdbcType=INTEGER},
      loan_relative_id = #{record.loanRelativeId,jdbcType=INTEGER},
      property_symbol = #{record.propertySymbol,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DOUBLE},
      left_principal = #{record.leftPrincipal,jdbcType=DOUBLE},
      repay_amount = #{record.repayAmount,jdbcType=DOUBLE},
      last_repay_date = #{record.lastRepayDate,jdbcType=TIMESTAMP},
      repay_status = #{record.repayStatus,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      match_date = #{record.matchDate,jdbcType=DATE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinting.business.model.BsMatch">
    update bs_match
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="subAccountId != null">
        sub_account_id = #{subAccountId,jdbcType=INTEGER},
      </if>
      <if test="loanRelativeId != null">
        loan_relative_id = #{loanRelativeId,jdbcType=INTEGER},
      </if>
      <if test="propertySymbol != null">
        property_symbol = #{propertySymbol,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="leftPrincipal != null">
        left_principal = #{leftPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="repayAmount != null">
        repay_amount = #{repayAmount,jdbcType=DOUBLE},
      </if>
      <if test="lastRepayDate != null">
        last_repay_date = #{lastRepayDate,jdbcType=TIMESTAMP},
      </if>
      <if test="repayStatus != null">
        repay_status = #{repayStatus,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="matchDate != null">
        match_date = #{matchDate,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinting.business.model.BsMatch">
    update bs_match
    set user_id = #{userId,jdbcType=INTEGER},
      sub_account_id = #{subAccountId,jdbcType=INTEGER},
      loan_relative_id = #{loanRelativeId,jdbcType=INTEGER},
      property_symbol = #{propertySymbol,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DOUBLE},
      left_principal = #{leftPrincipal,jdbcType=DOUBLE},
      repay_amount = #{repayAmount,jdbcType=DOUBLE},
      last_repay_date = #{lastRepayDate,jdbcType=TIMESTAMP},
      repay_status = #{repayStatus,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      match_date = #{matchDate,jdbcType=DATE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="sumAccountRepay" parameterType="java.util.Map" resultType="java.lang.Double">
  	select sum(b.left_principal) from bs_loan_relative_record a,bs_match b 
	where b.loan_relative_id = a.id and  a.channel = #{channel}
	and b.sub_account_id = #{subAccountId,jdbcType=INTEGER}
	<if test="isRepay != null">
	and a.is_repay = #{isRepay,jdbcType=VARCHAR}
	</if>
  </select>
  
  <!-- site投资债权匹配查询 -->
  <select id="getMatchListByUserIdProductId" parameterType="java.util.Map" resultType="com.pinting.business.model.vo.BsMatchVO">
  	select l.borrower_name as borrowerName, m.id, m.user_id userId, m.sub_account_id subAccountId, 
  	m.loan_relative_id loanRelativeId, m.amount, m.left_principal leftPrincipal, m.repay_amount repayAmount,
    m.last_repay_date lastRepayDate, m.repay_status repayStatus, m.note, m.match_date matchDate,m.create_time createTime, m.update_time updateTime
  	from bs_match m, bs_loan_relative_record l, bs_sub_account s 
  	where s.product_id = #{productId, jdbcType=INTEGER} and user_id = #{userId, jdbcType=INTEGER}
  	and m.sub_account_id = #{subAccountId,jdbcType=INTEGER}
	and m.sub_account_id = s.id and m.loan_relative_id = l.id order by m.repay_status asc,m.create_time desc 
	limit #{start,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
  </select>
  
   <!-- site投资债权匹配查询,包括迁移后数据 -->
  <select id="getMatchListIncludePostMigration" parameterType="java.util.Map" resultType="com.pinting.business.model.vo.BsMatchVO">
    SELECT t.* FROM
    (

	  (
		SELECT
		tab.loan_name AS borrowerName,
		tab.init_amount AS amount,
		tab.left_amount AS leftPrincipal,
		CASE WHEN tab.init_amount = tab.left_amount THEN null
		ELSE tab.update_time END AS lastRepayDate,
		tab.status AS repayStatus,
		(tab.init_amount - tab.left_amount) AS repayAmount,
		tab.trans_mark AS transMark,
		tab.create_time AS createTime, 
		tab.loan_time AS loanTime,
		null AS matchDate,
		tab.id,
		g.create_time AS transferTime,
		'RELATION' AS tableFlag
	
			FROM
			(
			SELECT a.id,a.bs_sub_account_id, a.ln_user_id, a.loan_id, a.init_amount, a.left_amount, a.create_time, a.update_time, a.trans_mark,
					a.status, b.user_name AS loan_name,
					c.balance,
					f.loan_time
			FROM
			(
					SELECT a.id,a.bs_sub_account_id, a.ln_user_id, a.loan_id, a.init_amount, a.left_amount, a.create_time, a.update_time, a.trans_mark,
					a.status FROM ln_loan_relation a
					where a.status IN ('SUCCESS', 'TRANSFERRED', 'REPAID') AND a.bs_sub_account_id = #{subAccountId,jdbcType=INTEGER}

			) a, ln_user b, bs_sub_account c, ln_loan f
			where
			a.ln_user_id = b.id and a.bs_sub_account_id = c.id and a.loan_id = f.id AND f.status = 'PAIED'
			AND b.id not in ( 
                    SELECT conf_value
                    FROM bs_sys_config
                    WHERE conf_key IN ('YUN_DAI_SELF_SUPER_LN_USER', '7_DAI_SELF_SUPER_LN_USER')
                )
			) tab
			LEFT JOIN
			(select create_time,out_loan_relation_id,in_loan_relation_id from ln_credit_transfer
						where in_sub_account_id = #{subAccountId,jdbcType=INTEGER} or out_sub_account_id = #{subAccountId,jdbcType=INTEGER}) g
            ON CASE WHEN tab.status = 'TRANSFERRED' THEN tab.id = g.out_loan_relation_id ELSE tab.id = g.in_loan_relation_id END

        )
        UNION ALL
        (
            select
                l.borrower_name AS borrowerName,
                m.amount,
                0 AS leftPrincipal,
                CASE WHEN m.repay_status = '1' THEN s.transfer_time
                WHEN m.repay_status = '2' THEN s.transfer_time
                ELSE m.last_repay_date END AS lastRepayDate,
                m.repay_status AS repayStatus,
                m.amount AS repayAmount,
                null AS transMark,
                m.create_time createTime,
                null AS loanTime,
                m.match_date AS matchDate,
                m.id,
                null AS transferTime,
                'MATCH' AS tableFlag

            from bs_match m, bs_loan_relative_record l, bs_sub_account s
            where s.product_id = #{productId, jdbcType=INTEGER} and user_id = #{userId, jdbcType=INTEGER}
            and s.id = #{subAccountId,jdbcType=INTEGER}
            and m.sub_account_id = s.note and m.loan_relative_id = l.id
        )

	) t
	ORDER BY field(t.repayStatus, '1', '2', '3', 'SUCCESS', 'TRANSFERRED', 'REPAID') DESC,
    t.createTime DESC
	limit #{start,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
  </select>
  
   <select id="countMatchListByUserIdProductId" parameterType="java.util.Map" resultType="java.lang.Integer">
  	select count(m.id) 
  	from bs_match m, bs_loan_relative_record l, bs_sub_account s 
  	where s.product_id = #{productId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER} 
  	and s.id = #{subAccountId,jdbcType=INTEGER}
	and m.sub_account_id = s.id and m.loan_relative_id = l.id
  </select>
  
  <select id="countMatchListIncludePostMigration" parameterType="java.util.Map" resultType="java.lang.Integer">
  	select count(m.id) 
  	from bs_match m, bs_loan_relative_record l, bs_sub_account s 
  	where s.product_id = #{productId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER} 
  	and s.id = #{subAccountId,jdbcType=INTEGER}
	and m.sub_account_id = s.note and m.loan_relative_id = l.id
  </select>
  
   <select id="getMatchListBySubAccountId" parameterType="java.util.Map" resultType="com.pinting.business.model.vo.BsMatchVO">
   	select l.borrower_name as borrowerName, m.id, m.user_id userId, m.sub_account_id subAccountId, 
  	M.loan_relative_id loanRelativeId, m.amount, m.left_principal leftPrincipal, m.repay_amount repayAmount, 
    m.last_repay_date lastRepayDate, m.repay_status repayStatus, m.note, m.match_date matchDate,M.create_time createTime, m.update_time updateTime 
  	from bs_match m, bs_loan_relative_record l 
  	where m.sub_account_id = #{subAccountId} and m.loan_relative_id = l.id order by m.repay_status asc,m.create_time desc 
   </select>
   
   <!-- 查询某日匹配总金额和某日购买总金额不同的数据 -->
  <select id="getMatchDiffBatchBuyAmount" parameterType="java.util.Map" resultType="com.pinting.business.model.vo.BsMatchWarnVO">
   (SELECT
	'YUN_DAI' propertySymbol,a.matchAmount,b.batchBuyAmount
	FROM
	(
		SELECT 'YUN_DAI' propertySymbol,sum(m.left_principal) matchAmount
			FROM bs_match m WHERE m.left_principal &gt; 0 and M.property_symbol = 'YUN_DAI'
		) a
		LEFT JOIN (
			SELECT 'YUN_DAI' propertySymbol,sum(send_amount) batchBuyAmount
		FROM bs_batch_buy WHERE expect_time &gt; DATE_FORMAT(now(), '%Y-%m-%d') and property_symbol = 'YUN_DAI'
	) b ON a.propertySymbol = b.propertySymbol
	WHERE a.matchAmount != b.batchBuyAmount )
	UNION ALL 
	(SELECT
	'7_DAI' propertySymbol,a.matchAmount,b.batchBuyAmount
	FROM
	(
		SELECT '7_DAI' propertySymbol,sum(m.left_principal) matchAmount
			FROM bs_match m WHERE m.left_principal &gt; 0 and M.property_symbol = '7_DAI'
		) a
		LEFT JOIN (
			SELECT '7_DAI' propertySymbol,sum(send_amount) batchBuyAmount
		FROM bs_batch_buy WHERE expect_time &gt; DATE_FORMAT(now(), '%Y-%m-%d') and property_symbol = '7_DAI'
	) b ON a.propertySymbol = b.propertySymbol
	WHERE a.matchAmount != b.batchBuyAmount )

  </select>

   <select id="getAvgAmountWarn" parameterType="java.util.Map" resultType="com.pinting.business.model.vo.BsMatchWarnVO">
   	select a.* from(select avg(left_principal) avgAmount,sub_account_id subAccountId from bs_match group by sub_account_id)a 
	where a.avgAmount &gt; #{limitAmount} order by a.avgAmount desc
   </select>
   
   <select id="selectOverMatches" resultMap="BaseResultMap">
   	SELECT 
   		a.* 
   	FROM 
   		bs_match a, bs_sub_account b, bs_loan_relative_record c
   	where 
   		a.sub_account_id=b.id and a.repay_status!=3 
   		and b.product_type='REG' and b.status in (5,7)
   		and a.loan_relative_id=c.id and c.is_repay='N'
   		and c.property_symbol = #{propertySymbol}
   </select>
   
   <select id="getMacthedSumAmount" resultMap="DailyAmount4LoanVOMap">
   	select c.term ,sum(amount) as sum_amount
   	from bs_match a, bs_sub_account b, bs_product c,bs_property_info d
	where a.sub_account_id = b.id and b.product_id = c.id  and d.id=c.property_id
	<if test="propertySymbol != null and propertySymbol != ''">
		and d.property_symbol=#{propertySymbol}
	</if>
	<if test="matchDate != null and matchDate != ''">
		and a.match_date=#{matchDate}
	</if>
	
	GROUP BY c.term ;
   
   </select>
</mapper>